{"version":3,"sources":["constants/index.js","reducers/orderReducers.js","reducers/index.js","reducers/productReducers.js","reducers/cardReducers.js","reducers/userReducers.js","reducers/adReducers.js","store.js","actions/productActions.js","components/Message.js","components/Product.js","components/BottomNavBar.js","components/AdSlider.js","pages/ProductsListPage.js","pages/ProductDetailsPage.js","actions/cardActions.js","components/DeleteCardComponent.js","components/CreateCardComponent.js","actions/userActions.js","components/ChargeCardComponent.js","components/UserAddressComponent.js","pages/CheckoutPage.js","assets/logo.jpeg","components/Navbar.js","components/PaymentStatus.js","pages/LoginPage.js","pages/RegisterPage.js","pages/CardUpdatePage.js","pages/CardDetailsPage.js","pages/AccountPage.js","pages/AccountUpdatePage.js","pages/DeleteUserAccountPage.js","components/CreateAddressComponent.js","pages/AllAddressesOfUserPage.js","pages/AddressUpdatePage.js","components/GetDate.js","components/SearchBarForOrdersPage.js","pages/OrdersListPage.js","components/Loader.js","pages/ProductCreatePage.js","pages/ProductUpdatePage.js","pages/NotFoundPage.js","actions/adActions.js","components/FullScreenAd.js","pages/AdvertisePage.js","assets/lipa_namba.jpeg","pages/AdSubmissionPage.js","pages/AdApprovalPage.js","pages/HelpPage.js","pages/AboutPage.js","pages/OrderNowPage.js","actions/orderActions.js","components/SearchBarForProducts.js","pages/SearchPage.js","App.js","index.js"],"names":["PRODUCTS_LIST_REQUEST","PRODUCTS_LIST_SUCCESS","PRODUCTS_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","CREATE_PRODUCT_REQUEST","CREATE_PRODUCT_SUCCESS","CREATE_PRODUCT_FAIL","CREATE_PRODUCT_RESET","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","UPDATE_PRODUCT_RESET","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","DELETE_PRODUCT_RESET","CHECK_TOKEN_VALID_REQUEST","CHECK_TOKEN_VALID_SUCCESS","CHECK_TOKEN_VALID_FAIL","CHECK_TOKEN_VALID_RESET","CARD_CREATE_REQUEST","CARD_CREATE_SUCCESS","CARD_CREATE_FAIL","CARD_CREATE_RESET","CHARGE_CARD_REQUEST","CHARGE_CARD_SUCCESS","CHARGE_CARD_FAIL","CHARGE_CARD_RESET","SAVED_CARDS_LIST_REQUEST","SAVED_CARDS_LIST_SUCCESS","SAVED_CARDS_LIST_FAIL","DELETE_SAVED_CARD_REQUEST","DELETE_SAVED_CARD_SUCCESS","DELETE_SAVED_CARD_FAIL","UPDATE_STRIPE_CARD_REQUEST","UPDATE_STRIPE_CARD_SUCCESS","UPDATE_STRIPE_CARD_FAIL","UPDATE_STRIPE_CARD_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","UPDATE_USER_DETAILS_REQUEST","UPDATE_USER_DETAILS_SUCCESS","UPDATE_USER_DETAILS_FAIL","UPDATE_USER_DETAILS_RESET","DELETE_USER_ACCOUNT_REQUEST","DELETE_USER_ACCOUNT_SUCCESS","DELETE_USER_ACCOUNT_FAIL","DELETE_USER_ACCOUNT_RESET","GET_USER_ALL_ADDRESSES_REQUEST","GET_USER_ALL_ADDRESSES_SUCCESS","GET_USER_ALL_ADDRESSES_FAIL","GET_SINGLE_ADDRESS_REQUEST","GET_SINGLE_ADDRESS_SUCCESS","GET_SINGLE_ADDRESS_FAIL","GET_SINGLE_ADDRESS_RESET","CREATE_USER_ADDRESS_REQUEST","CREATE_USER_ADDRESS_SUCCESS","CREATE_USER_ADDRESS_FAIL","CREATE_USER_ADDRESS_RESET","UPDATE_USER_ADDRESS_REQUEST","UPDATE_USER_ADDRESS_SUCCESS","UPDATE_USER_ADDRESS_FAIL","UPDATE_USER_ADDRESS_RESET","DELETE_USER_ADDRESS_REQUEST","DELETE_USER_ADDRESS_SUCCESS","DELETE_USER_ADDRESS_FAIL","DELETE_USER_ADDRESS_RESET","GET_ALL_ORDERS_REQUEST","GET_ALL_ORDERS_SUCCESS","GET_ALL_ORDERS_FAIL","CHANGE_DELIVERY_STATUS_REQUEST","CHANGE_DELIVERY_STATUS_SUCCESS","CHANGE_DELIVERY_STATUS_FAIL","CHANGE_DELIVERY_STATUS_RESET","AD_SUBMISSION_REQUEST","AD_SUBMISSION_SUCCESS","AD_SUBMISSION_FAIL","AD_SUBMISSION_RESET","AD_APPROVAL_REQUEST","AD_APPROVAL_SUCCESS","AD_APPROVAL_FAIL","PENDING_ADS_REQUEST","PENDING_ADS_SUCCESS","PENDING_ADS_FAIL","ACTIVE_ADS_REQUEST","ACTIVE_ADS_SUCCESS","ACTIVE_ADS_FAIL","ORDER_REQUEST_REQUEST","ORDER_REQUEST_SUCCESS","ORDER_REQUEST_FAIL","ORDER_REQUEST_RESET","initialState","loading","error","success","order","lastSubmitted","allReducers","combineReducers","productsListReducer","state","arguments","length","undefined","products","action","type","payload","productDetailsReducer","product","createProductReducer","updateProductReducer","deleteProductReducer","createCardReducer","cardData","chargeCardReducer","savedCardsListReducer","stripeCards","updateStripeCardtReducer","stripeCard","deleteSavedCardReducer","data","userLoginReducer","userInfo","userRegisterReducer","getSingleAddressReducer","address","getAllAddressesOfUserReducer","addresses","createUserAddressReducer","updateUserAddressReducer","deleteUserAddressReducer","getAllOrdersReducer","orders","changeDeliveryStatusReducer","checkTokenValidationReducer","valid","userDetailsReducer","user","userDetailsUpdateReducer","deleteUserAccountReducer","adSubmission","ad","adApproval","activeAds","pendingAds","orderRequest","Date","toISOString","middleware","thunk","localStorage","getItem","JSON","parse","store","createStore","composeWithDevTools","applyMiddleware","API_URL","process","getProductDetails","id","async","dispatch","axios","get","message","Message","_ref","variant","children","_jsx","Alert","Product","imageUrl","image","startsWith","Card","className","_jsxs","Body","Link","to","style","color","Img","src","width","height","aspectRatio","objectFit","borderRadius","onError","e","target","onerror","Title","as","fontSize","whiteSpace","overflow","textOverflow","name","Text","price","BottomNavBar","location","useLocation","activeTab","setActiveTab","useState","pathname","handleTabClick","tab","_Fragment","position","bottom","left","right","backgroundColor","borderTop","display","justifyContent","alignItems","padding","zIndex","onClick","textDecoration","FaHome","size","margin","FaSearch","FaCompass","FaBullhorn","FaUser","AdSlider","ads","setAds","setLoading","setError","activeIndex","setActiveIndex","videoLoading","setVideoLoading","autoplayBlocked","setAutoplayBlocked","carouselRef","useRef","videoRefs","useEffect","initialLoadingStates","initialAutoplayStates","forEach","index","ad_type","err","fetchAds","current","slice","video","onended","next","handleVideoEnd","onplay","prev","handleVideoPlay","onpause","handleVideoPause","currentTime","onloadeddata","Spinner","animation","Carousel","ref","onSelect","selectedIndex","indicators","controls","interval","map","Item","background","border","ad_file_url","alt","ad_title","maxHeight","el","autoPlay","muted","playsInline","top","transform","Button","play","handlePlayClick","boxShadow","fontWeight","marginBottom","ad_description","transition","borderColor","onMouseOver","onMouseOut","ProductsListPage","history","useHistory","searchTerm","search","split","toLowerCase","useDispatch","selectedCategory","setSelectedCategory","categories","setCategories","uniqueCategories","Set","category","console","fetchCategories","useSelector","fetchProducts","log","filteredProducts","filter","matchesSearch","includes","matchesCategory","category_name","ButtonGroup","Row","Col","xs","sm","md","lg","xl","Math","floor","toLocaleString","ProductDetailsPage","_product$supplier_inf","_product$supplier_inf2","match","show","setShow","quantity","setQuantity","productDeletionSuccess","params","handleClose","alert","push","Modal","onHide","Header","closeButton","Footer","confirmDelete","getState","config","headers","Authorization","token","delete","response","detail","Container","imagePath","admin","handleShow","description","stock","Form","Group","controlId","Label","Control","value","onChange","Array","keys","x","encodeURIComponent","supplier_info","whatsapp_link","createCard","cardNumber","post","email","expMonth","expYear","cvc","saveCard","savedCardsList","DeleteCardComponent","userId","deleteCardNumber","runCardDeleteHandler","toggleRunCardDeleteHandler","c_number","card_number","current_year","getFullYear","CreateCardComponent","addressSelected","setRunCardDeleteHandler","differentCard","setDifferentCard","cardDetails","setCardDetails","cardDetailsId","setCardDetailsId","showStripeCard","setShowStripeCard","setEmail","setCardNumber","setExpMonth","setExpYear","setCvc","setSaveCard","showCardDetails","float","exp_month","exp_year","window","reload","onSubmit","preventDefault","Number","autoFocus","pattern","placeholder","maxLength","required","defaultValue","from","i","hidden","payWithSavedCard","title","logout","removeItem","checkTokenValidation","details","userDetails","getAllAddress","getSingleAddress","getAllOrders","ChargeCardComponent","selectedAddressId","chargeSuccessfull","chargeError","chargingStatus","card_data","last4","address_detail","house_no","landmark","city","pin_code","chargeCustomer","disabled","role","aria-hidden","phone_number","UserAddressComponent","handleAddressId","idx","updatehandleAddressId","CheckoutPage","setAddressSelected","setSelectedAddressId","tokenError","cardCreationError","cardCreationLoading","Image","NavBar","Navbar","bg","expand","collapseOnSelect","LinkContainer","Brand","logo","marginRight","Toggle","aria-controls","Collapse","Nav","isAdmin","NavDropdown","username","logoutHandler","PaymentStatus","renderData","boughtData","LoginPage","setUsername","password","setPassword","login","setItem","stringify","RegisterPage","confirmPassword","setConfirmPassword","setMessage","register","CardUpdatePage","setName","addressCity","setAddressCity","addressCountry","setAddressCountry","addressState","setAddressState","addressZip","setAddressZip","customerId","setCustomerId","cardId","setCardId","customer_id","card_id","name_on_card","address_city","address_country","address_state","address_zip","each","setCustomerAndCardIds","cus_Id","card_Id","c_num","CardDetailsPage","setUserId","setDeleteCardNumber","AccountPage","userAccDetails","AccountUpdatePage","updatedUsername","updatedEmail","userData","put","userUpdateDetails","DeleteUserAccount","myPassword","setMyPassword","userAccountDelete","CreateAddressComponent","toggleCreateAddress","phoneNumber","setPhoneNumber","pinCode","setPinCode","houseNumber","setHouseNumber","setLandmark","setCity","setState","addressCreationSuccess","errorCreatingAddress","addressData","createUserAddress","InputGroup","AllAddressesOfUserPage","deleteAddress","setDeleteAddress","createAddress","setCreateAddress","loadingAllAddresses","addressDeletionSuccess","deleteAddressHandler","deleteUserAddress","AddressUpdatePage","errorFetchingAddress","addressUpdateSuccess","updatedAddress","updateUserAddress","dateCheck","param","dateValue","monthValue","yearValue","SearchBarForOrdersPage","handleSearchTerm","placeholderValue","setSearchTerm","OrdersListPage","todays_date","currentDateInfo","idOfchangeDeliveryStatus","setIdOfchangeDeliveryStatus","cloneSearchTerm","setCloneSearchTerm","loadingOrders","deliveryStatusChangeSuccess","deliveryStatusChangeSpinner","changeDeliveryStatusHandler","status","changeDeliveryStatus","term","Table","striped","bordered","item","ordered_item","paid_status","paid_at","total_price","is_delivered","delivered_at","Loader","ProductCreatePage","setDescription","setPrice","setStock","setImage","setCategory","productCreationSuccess","productCreationError","fetch","json","form_data","FormData","append","Object","fromEntries","entries","createProduct","finally","step","files","cat","ProductUpdatePage","loadingPageDetails","newImage","setNewImage","productUpdationSuccess","loadingProductUpdations","productUpdationError","scrollTo","behavior","productId","updateProduct","defaultChecked","NotFoundPage","listPendingAds","FullScreenAd","showAd","setShowAd","currentAdIndex","setCurrentAdIndex","activeAdsList","rotateAd","useCallback","prevIndex","isMounted","initialTimer","setTimeout","setInterval","clearTimeout","clearInterval","currentAd","centered","backdrop","AdvertisePage","FaAd","FaCheckCircle","FaArrowRight","href","AdSubmissionPage","phone","setPhone","adTitle","setAdTitle","adDescription","setAdDescription","adType","setAdType","adFile","setAdFile","paymentProof","setPaymentProof","agreement","setAgreement","paymentMethod","setPaymentMethod","adSubmissionReducer","formData","Error","access","withCredentials","submitAd","rows","File","accept","paymentInstructions","Check","label","checked","AdApprovalPage","userLogin","pendingAdsList","successApprove","approveHandler","confirm","approveAd","hover","responsive","created_at","toLocaleDateString","HelpPage","FaPhone","ListGroup","number","contact","FaWhatsapp","FaEnvelope","FaClock","AboutPage","teamPhoto","FaShoppingBag","FaThumbsUp","FaHeadset","OrderNowPage","setFormData","region","district","ward","street","showSuccess","setShowSuccess","URLSearchParams","productName","productPrice","supplierName","whatsappLink","handleChange","maxWidth","cleanMessage","whatsappMessage","whatsappURL","open","orderData","whatsapp_message","orderDataWithoutUser","completeOrderData","ordered_at","_error$response","_error$response2","_error$response2$data","_error$response3","_error$response3$data","errorMessage","SearchBarForProducts","SearchPage","App","Router","Switch","Route","path","component","ProductListPage","exact","Login","Register","DeleteUserAccountPage","NotFound","ReactDOM","render","Provider","document","getElementById"],"mappings":"gQACO,MAAMA,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAGrBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBAGvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAGvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAGvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAGvBC,EAA4B,4BAC5BC,EAA4B,4BAC5BC,EAAyB,yBACzBC,EAA0B,0BAG1BC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBACnBC,EAAoB,oBAGpBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBACnBC,EAAoB,oBAGpBC,EAA2B,2BAC3BC,EAA2B,2BAC3BC,EAAwB,wBAGxBC,EAA4B,4BAC5BC,EAA4B,4BAC5BC,EAAyB,yBAGzBC,EAA6B,6BAC7BC,EAA6B,6BAC7BC,EAA0B,0BAC1BC,EAA2B,2BAG3BC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAc,cAGdC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAGrBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAGpBC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAC3BC,GAA4B,4BAG5BC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAC3BC,GAA4B,4BAG5BC,GAAiC,iCACjCC,GAAiC,iCACjCC,GAA8B,8BAG9BC,GAA6B,6BAC7BC,GAA6B,6BAC7BC,GAA0B,0BAC1BC,GAA2B,2BAG3BC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAC3BC,GAA4B,4BAG5BC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAC3BC,GAA4B,4BAG5BC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAC3BC,GAA4B,4BAG5BC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBAGtBC,GAAiC,iCACjCC,GAAiC,iCACjCC,GAA8B,8BAC9BC,GAA+B,+BAG/BC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAEtBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAInBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAGnBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAGlBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBCpJ7BC,GAAe,CACjBC,SAAS,EACTC,MAAO,KACPC,SAAS,EACTC,MAAO,KACPC,cAAe,MCiEJC,OAlCKC,0BAAgB,CAChCC,oBCV+B,WAAuC,IAAtCC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAEG,SAAU,IAAMC,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChE,OAAQE,EAAOC,MACX,KAAKpH,EACD,MAAO,IACA8G,EACHR,SAAS,EACTY,SAAU,GACVX,MAAO,IAEf,KAAKtG,EACD,MAAO,IACA6G,EACHR,SAAS,EACTY,SAAUC,EAAOE,QACjBd,MAAO,IAEf,KAAKrG,EACD,MAAO,IACA4G,EACHR,SAAS,EACTC,MAAOY,EAAOE,SAEtB,QACI,OAAOP,IDZfQ,sBCkBiC,WAAsC,IAArCR,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAEQ,QAAS,IAAMJ,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjE,OAAQE,EAAOC,MACX,KAAKjH,EACD,MAAO,IACA2G,EACHR,SAAS,EACTiB,QAAS,GACThB,MAAO,IAEf,KAAKnG,EACD,MAAO,IACA0G,EACHR,SAAS,EACTiB,QAASJ,EAAOE,QAChBd,MAAO,IAEf,KAAKlG,EACD,MAAO,IACAyG,EACHR,SAAS,EACTC,MAAOY,EAAOE,SAEtB,QACI,OAAOP,IDxCfU,qBC6CgC,WAAsC,IAArCV,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAEQ,QAAS,IAAMJ,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChE,OAAQE,EAAOC,MACX,KAAK9G,EACD,MAAO,IACAwG,EACHR,SAAS,EACTiB,QAAS,GACTf,SAAS,EACTD,MAAO,IAEf,KAAKhG,EACD,MAAO,IACAuG,EACHR,SAAS,EACTE,SAAS,EACTe,QAASJ,EAAOE,QAChBd,MAAO,IAEf,KAAK/F,EACD,MAAO,IACAsG,EACHR,SAAS,EACTE,SAAS,EACTe,QAAS,GACThB,MAAOY,EAAOE,SAEtB,KAAK5G,EACD,MAAO,IACAqG,EACHR,SAAS,EACTE,SAAS,EACTe,QAAS,GACThB,MAAO,IAEf,QACI,OAAOO,ID/EfW,qBCoFgC,WAAsC,IAArCX,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAEQ,QAAS,IAAMJ,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChE,OAAQE,EAAOC,MACX,KAAK1G,EACD,MAAO,IACAoG,EACHR,SAAS,EACTiB,QAAS,GACTf,SAAS,EACTD,MAAO,IAEf,KAAK5F,EACD,MAAO,IACAmG,EACHR,SAAS,EACTE,SAAS,EACTe,QAASJ,EAAOE,QAChBd,MAAO,IAEf,KAAK3F,EACD,MAAO,IACAkG,EACHR,SAAS,EACTE,SAAS,EACTe,QAAS,GACThB,MAAOY,EAAOE,SAEtB,KAAKxG,EACD,MAAO,IACAiG,EACHR,SAAS,EACTE,SAAS,EACTe,QAAS,GACThB,MAAO,IAEf,QACI,OAAOO,IDtHfY,qBC4HgC,WAAyB,IAAxBZ,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQE,EAAOC,MACX,KAAKtG,EACD,MAAO,IACAgG,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAKxF,EACD,MAAO,IACA+F,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAKvF,EACD,MAAO,IACA8F,EACHR,SAAS,EACTE,SAAS,EACTD,MAAOY,EAAOE,SAEtB,KAAKpG,EACD,MAAO,IACA6F,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,QACI,OAAOO,ID1Jfa,kBErB6B,WAAyB,IAAxBb,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQE,EAAOC,MACX,KAAK9F,EACD,MAAO,IACAwF,EACHR,SAAS,EACTsB,SAAU,GACVpB,SAAS,EACTD,MAAO,IAEf,KAAKhF,EACD,MAAO,IACAuF,EACHR,SAAS,EACTE,SAAS,EACToB,SAAUT,EAAOE,QACjBd,MAAO,IAEf,KAAK/E,EACD,MAAO,IACAsF,EACHR,SAAS,EACTsB,SAAU,GACVpB,SAAS,EACTD,MAAOY,EAAOE,SAEtB,KAAK5F,EACD,MAAO,IACAqF,EACHR,SAAS,EACTE,SAAS,EACToB,SAAU,GACVrB,MAAO,IAEf,QACI,OAAOO,IFbfe,kBEkB6B,WAAyB,IAAxBf,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQE,EAAOC,MACX,KAAK1F,EACD,MAAO,IACAoF,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAK5E,EACD,MAAO,IACAmF,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAK3E,EACD,MAAO,IACAkF,EACHR,SAAS,EACTE,SAAS,EACTD,MAAOY,EAAOE,SAEtB,KAAKxF,EACD,MAAO,IACAiF,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,QACI,OAAOO,IFhDfgB,sBEqDiC,WAAwC,IAAvChB,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAACgB,YAAa,IAAKZ,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnE,OAAQE,EAAOC,MACX,KAAKtF,EACD,MAAO,IACAgF,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAKxE,EACD,MAAO,IACA+E,EACHR,SAAS,EACTE,SAAS,EACTuB,YAAaZ,EAAOE,QACpBd,MAAO,IAEf,KAAKvE,EACD,MAAO,IACA8E,EACHR,SAAS,EACTE,SAAS,EACTD,MAAOY,EAAOE,SAEtB,QACI,OAAOP,IF7EfkB,yBEkFoC,WAAyB,IAAxBlB,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAQE,EAAOC,MACX,KAAKhF,EACD,MAAO,CACHkE,SAAS,EACTE,SAAS,EACTyB,WAAY,GACZ1B,MAAO,IAEf,KAAKlE,EACD,MAAO,CACHiE,SAAS,EACTE,SAAS,EACTyB,WAAYd,EAAOE,QACnBd,MAAO,IAEf,KAAKjE,EACD,MAAO,CACHgE,SAAS,EACTE,SAAS,EACTyB,WAAY,GACZ1B,MAAOY,EAAOE,SAEtB,KAAK9E,EACD,MAAO,CACH+D,SAAS,EACTE,SAAS,EACTyB,WAAY,GACZ1B,MAAO,IAEf,QACI,OAAOO,IFhHfoB,uBEsHkC,WAAiC,IAAhCpB,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAACoB,KAAM,IAAKhB,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,OAAQE,EAAOC,MACX,KAAKnF,EACD,MAAO,IACA6E,EACHR,SAAS,EACTC,MAAO,IAEf,KAAKrE,EACD,MAAO,IACA4E,EACHR,SAAS,EACTE,SAAS,EACT2B,KAAMhB,EAAOE,QACbd,MAAO,IAEf,KAAKpE,EACD,MAAO,IACA2E,EACHR,SAAS,EACTC,MAAOY,EAAOE,SAEtB,QACI,OAAOP,IF5IfsB,iBGO4B,WAAyB,IAAxBtB,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQE,EAAOC,MACX,KAAK5E,EACD,MAAO,IACAsE,EACHR,SAAS,GAEjB,KAAK7D,EACD,MAAO,IACAqE,EACHR,SAAS,EACT+B,SAAUlB,EAAOE,SAEzB,KAAK3E,EACD,MAAO,CACH4D,SAAS,EACTC,MAAOY,EAAOE,SAEtB,KAAK1E,EACD,MAAO,GAEX,QACI,OAAOmE,IH5BfwB,oBGiC+B,WAAyB,IAAxBxB,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAQE,EAAOC,MACX,KAAKxE,GACD,MAAO,IACAkE,EACHR,SAAS,GAEjB,KAAKzD,GACD,MAAO,IACAiE,EACHR,SAAS,EACT+B,SAAUlB,EAAOE,SAEzB,KAAKvE,GACD,MAAO,CACHwD,SAAS,EACTC,MAAOY,EAAOE,SAEtB,KAAK1E,EACD,MAAO,GAEX,QACI,OAAOmE,IHtDfyB,wBG2OmC,WAAyB,IAAxBzB,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtD,OAAOE,EAAOC,MACV,KAAKvD,GACD,MAAO,IACAiD,EACHR,SAAS,EACTkC,QAAS,GACThC,SAAS,EACTD,MAAO,IAEf,KAAKzC,GACD,MAAO,IACAgD,EACHR,SAAS,EACTkC,QAASrB,EAAOE,QAChBb,SAAS,EACTD,MAAO,IAEf,KAAKxC,GACD,MAAO,IACA+C,EACHR,SAAS,EACTkC,QAAS,GACThC,SAAS,EACTD,MAAOY,EAAOE,SAEtB,KAAKrD,GACD,MAAO,IACA8C,EACHR,SAAS,EACTkC,QAAS,GACThC,SAAS,EACTD,MAAO,IAEf,QACI,OAAOO,IH7Qf2B,6BG0MwC,WAAyB,IAAxB3B,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,OAAOE,EAAOC,MACV,KAAK1D,GACD,MAAO,IACAoD,EACHR,SAAS,EACToC,UAAW,GACXlC,SAAS,EACTD,MAAO,IAEf,KAAK5C,GACD,MAAO,IACAmD,EACHR,SAAS,EACToC,UAAWvB,EAAOE,QAClBb,SAAS,EACTD,MAAO,IAEf,KAAK3C,GACD,MAAO,IACAkD,EACHR,SAAS,EACToC,UAAW,GACXlC,SAAS,EACTD,MAAOY,EAAOE,SAEtB,QACI,OAAOP,IHpOf6B,yBGiRoC,WAAyB,IAAxB7B,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAOE,EAAOC,MACV,KAAKnD,GACD,MAAO,IACA6C,EACHR,SAAS,EACTkC,QAAS,GACThC,SAAS,EACTD,MAAO,IAEf,KAAKrC,GACD,MAAO,IACA4C,EACHR,SAAS,EACTkC,QAASrB,EAAOE,QAChBb,SAAS,EACTD,MAAO,IAEf,KAAKpC,GACD,MAAO,IACA2C,EACHR,SAAS,EACTE,SAAS,EACTgC,QAAS,GACTjC,MAAOY,EAAOE,SAEtB,KAAKjD,GACD,MAAO,IACA0C,EACHR,SAAS,EACTE,SAAS,EACTgC,QAAS,GACTjC,MAAO,IAEf,QACI,OAAOO,IHnTf8B,yBGwToC,WAAyB,IAAxB9B,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAOE,EAAOC,MACV,KAAK/C,GACD,MAAO,IACAyC,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAKjC,GACD,MAAO,IACAwC,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAKhC,GACD,MAAO,IACAuC,EACHR,SAAS,EACTE,SAAS,EACTD,MAAOY,EAAOE,SAEtB,KAAK7C,GACD,MAAO,IACAsC,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,QACI,OAAOO,IHtVf+B,yBG2VoC,WAAyB,IAAxB/B,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAOE,EAAOC,MACV,KAAK3C,GACD,MAAO,IACAqC,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAK7B,GACD,MAAO,IACAoC,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAK5B,GACD,MAAO,IACAmC,EACHR,SAAS,EACTE,SAAS,EACTD,MAAOY,EAAOE,SAEtB,KAAKzC,GACD,MAAO,IACAkC,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,QACI,OAAOO,IHzXfgC,oBG8X+B,WAAmC,IAAlChC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAACgC,OAAQ,IAAK5B,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5D,OAAOE,EAAOC,MACV,KAAKvC,GACD,MAAO,IACAiC,EACHR,SAAS,EACTyC,OAAQ,GACRxC,MAAO,IAEf,KAAKzB,GACD,MAAO,IACAgC,EACHR,SAAS,EACTyC,OAAQ5B,EAAOE,QACfd,MAAO,IAEf,KAAKxB,GACD,MAAO,IACA+B,EACHR,SAAS,EACTyC,OAAQ,GACRxC,MAAOY,EAAOE,SAEtB,QACI,OAAOP,IHrZfkC,4BCkJuC,WAAyB,IAAxBlC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1D,OAAQE,EAAOC,MACX,KAAKpC,GACD,MAAO,IACA8B,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAKtB,GACD,MAAO,IACA6B,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAKrB,GACD,MAAO,IACA4B,EACHR,SAAS,EACTE,SAAS,EACTD,MAAOY,EAAOE,SAEtB,KAAKlC,GACD,MAAO,IACA2B,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,QACI,OAAOO,IDhLfmC,4BG8JuC,WAAyB,IAAxBnC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1D,OAAOE,EAAOC,MACV,KAAKlG,EACD,MAAO,IACA4F,EACHR,SAAS,EACT4C,OAAO,EACP3C,MAAO,IAEf,KAAKpF,EACD,MAAO,IACA2F,EACHR,SAAS,EACT4C,OAAO,EACP3C,MAAO,IAEf,KAAKnF,EACD,MAAO,IACA0F,EACHR,SAAS,EACT4C,OAAO,EACP3C,MAAOY,EAAOE,SAEtB,KAAKhG,EACD,MAAO,IACAyF,EACHR,SAAS,EACT4C,OAAO,EACP3C,MAAO,IAEf,QACI,OAAOO,IH5LfqC,mBGoD8B,WAAyB,IAAxBrC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAOE,EAAOC,MACV,KAAKrE,GACD,MAAO,IACA+D,EACHR,SAAS,EACT8C,KAAM,GACN7C,MAAO,IAEf,KAAKvD,GACD,MAAO,IACA8D,EACHR,SAAS,EACT8C,KAAMjC,EAAOE,QACbd,MAAO,IAEf,KAAKtD,GACD,MAAO,IACA6D,EACHR,SAAS,EACT8C,KAAM,GACN7C,MAAOY,EAAOE,SAEtB,QACI,OAAOP,IH3EfuC,yBGgFoC,WAAyB,IAAxBvC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAOE,EAAOC,MACV,KAAKlE,GACD,MAAO,IACA4D,EACHR,SAAS,EACT8C,KAAM,GACN5C,SAAS,EACTD,MAAO,IAEf,KAAKpD,GACD,MAAO,IACA2D,EACHR,SAAS,EACTE,SAAS,EACT4C,KAAMjC,EAAOE,QACbd,MAAO,IAEf,KAAKnD,GACD,MAAO,IACA0D,EACHR,SAAS,EACTE,SAAS,EACT4C,KAAM,GACN7C,MAAOY,EAAOE,SAEtB,KAAKhE,GACD,MAAO,IACAyD,EACHR,SAAS,EACTE,SAAS,EACT4C,KAAM,GACN7C,MAAO,IAEf,QACI,OAAOO,IHlHfwC,yBGuHoC,WAAyB,IAAxBxC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAOE,EAAOC,MACV,KAAK9D,GACD,MAAO,IACAwD,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAKhD,GACD,MAAO,IACAuD,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAK/C,GACD,MAAO,IACAsD,EACHR,SAAS,EACTE,SAAS,EACTD,MAAOY,EAAOE,SAEtB,KAAK5D,GACD,MAAO,IACAqD,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,QACI,OAAOO,IHnJfyC,aIrD+B,WAKpB,IALqBzC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CACxCT,SAAS,EACTC,MAAO,KACPC,SAAS,EACTgD,GAAI,MACLrC,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACL,OAAQE,EAAOC,MACX,KAAKhC,GACD,MAAO,IAAK0B,EAAOR,SAAS,EAAMC,MAAO,MAC7C,KAAKlB,GACD,MAAO,IAAKyB,EAAOR,SAAS,EAAOE,SAAS,EAAMgD,GAAIrC,EAAOE,SACjE,KAAK/B,GACD,MAAO,IAAKwB,EAAOR,SAAS,EAAOC,MAAOY,EAAOE,SACrD,KAAK9B,GACD,MAAO,CAAEe,SAAS,EAAOC,MAAO,KAAMC,SAAS,EAAOgD,GAAI,MAC9D,QACI,OAAO1C,IJsCf2C,WIlC6B,WAAyB,IAAxB3C,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQE,EAAOC,MACX,KAAK5B,GACD,MAAO,CAAEc,SAAS,GACtB,KAAKb,GACD,MAAO,CAAEa,SAAS,EAAOE,SAAS,GACtC,KAAKd,GACD,MAAO,CAAEY,SAAS,EAAOC,MAAOY,EAAOE,SAC3C,QACI,OAAOP,IJ0Bf4C,UItBgC,WAAwC,IAAvC5C,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAE2C,UAAW,IAAMvC,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClE,OAAQE,EAAOC,MACX,KAAKtB,GACD,MAAO,CAAEQ,SAAS,EAAMoD,UAAW,IACvC,KAAK3D,GACD,MAAO,CAAEO,SAAS,EAAOoD,UAAWvC,EAAOE,SAC/C,KAAKrB,GACD,MAAO,CAAEM,SAAS,EAAOC,MAAOY,EAAOE,SAC3C,QACI,OAAOP,IJcf6C,WIViC,WAAyC,IAAxC7C,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAE4C,WAAY,IAAMxC,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpE,OAAQE,EAAOC,MACb,KAAKzB,GACH,MAAO,CAAEW,SAAS,EAAMqD,WAAY,IACtC,KAAK/D,GACH,MAAO,CAAEU,SAAS,EAAOqD,WAAYxC,EAAOE,SAC9C,KAAKxB,GACH,MAAO,CAAES,SAAS,EAAOC,MAAOY,EAAOE,SACzC,QACE,OAAOP,IJGX8C,aD3D+B,WAAmC,IAAlC9C,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGV,GAAcc,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5D,OAAQE,EAAOC,MACX,KAAKnB,GACD,MAAO,IACAa,EACHR,SAAS,EACTC,MAAO,KACPC,SAAS,GAGjB,KAAKN,GACD,MAAO,IACAY,EACHR,SAAS,EACTE,SAAS,EACTC,MAAOU,EAAOE,QACdX,eAAe,IAAImD,MAAOC,cAC1BvD,MAAO,MAGf,KAAKJ,GACD,MAAO,IACAW,EACHR,SAAS,EACTC,MAAOY,EAAOE,QACdb,SAAS,GAGjB,KAAKJ,GACD,OAAOC,GAEX,QACI,OAAOS,MM1CnB,MAAMiD,GAAa,CAACC,KAIpB,IAAI3D,GAAe,CACf+B,iBAAkB,CAAEC,SAHI4B,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,OAQ/FG,OAFDC,sBAAY3D,GAAaN,GAAckE,8BAAoBC,6BAAmBT,M,qCCU5F,MAAMU,GAAUC,iCA0BHC,GAAqBC,GAAOC,UACrC,IACIC,EAAS,CACL1D,KAAMjH,IAIV,MAAM,KAAEgI,SAAe4C,KAAMC,IAAI,GAAGP,kBAAuBG,MAE3DE,EAAS,CACL1D,KAAMhH,EACNiH,QAASc,IAEf,MAAO5B,GACLuE,EAAS,CACL1D,KAAM/G,EACNgH,QAASd,EAAM0E,Y,sBCtDZC,OARf,SAAgBC,GAAyB,IAAxB,QAAEC,EAAO,SAAEC,GAAUF,EAClC,OACIG,eAACC,KAAK,CAACH,QAASA,EAAQC,SACnBA,K,0DCuCEG,OAzCf,SAAgBL,GAAe,IAAd,QAAE5D,GAAS4D,EAExB,MAAMM,EAAWlE,EAAQmE,MAAMC,WAAW,QACpCpE,EAAQmE,MACR,iCAAwCnE,EAAQmE,QAEtD,OACIJ,eAAA,OAAAD,SACIC,eAACM,KAAI,CAACC,UAAU,eAAcR,SAC1BS,gBAACF,KAAKG,KAAI,CAAAV,SAAA,CACNC,eAACU,QAAI,CAACC,GAAI,YAAY1E,EAAQqD,KAAMsB,MAAO,CAAEC,MAAO,SAAUd,SAC1DC,eAACM,KAAKQ,IAAG,CACLhB,QAAQ,MACRiB,IAAKZ,EACLS,MAAO,CACHI,MAAO,OACPC,OAAQ,OACRC,YAAa,QACbC,UAAW,QACXC,aAAc,QAElBC,QAAUC,IACNA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAOR,IAAM,QAI3Bf,eAACU,QAAI,CAACC,GAAI,YAAY1E,EAAQqD,KAAMsB,MAAO,CAAEC,MAAO,SAAUd,SAC1DC,eAACM,KAAKmB,MAAK,CAACC,GAAG,MAAMd,MAAO,CAAEe,SAAU,+BAAgCC,WAAY,SAAUC,SAAU,SAAUC,aAAc,YAAa/B,SACzIC,eAAA,UAAAD,SAAS9D,EAAQ8F,WAGzBvB,gBAACF,KAAK0B,KAAI,CAACN,GAAG,KAAKd,MAAO,CAAEe,SAAU,2BAA4BC,WAAY,SAAUC,SAAU,SAAUC,aAAc,YAAa/B,SAAA,CAAC,OAC/H9D,EAAQgG,iB,SCgEtBC,OAjGf,WACI,MAAMC,EAAWC,gBACVC,EAAWC,GAAgBC,mBAASJ,EAASK,UAE9CC,EAAkBC,IACpBJ,EAAaI,IAGjB,OACIlC,gBAAAmC,YAAA,CAAA5C,SAAA,CACIC,eAAA,OAAKY,MAAO,CAAEK,OAAQ,UAAgB,IACtCT,gBAAA,OACII,MAAO,CACHgC,SAAU,QACVC,OAAQ,EACRC,KAAM,EACNC,MAAO,EACPC,gBAAiB,OACjBC,UAAW,iBACXC,QAAS,OACTC,eAAgB,eAChBC,WAAY,SACZC,QAAS,WACTC,OAAQ,IACRrC,OAAQ,QACVlB,SAAA,CAEFC,eAAA,OAAKO,UAAU,cAAaR,SACxBS,gBAACE,QAAI,CACDC,GAAG,IACH4C,QAASA,IAAMd,EAAe,KAC9B7B,MAAO,CACHC,MAAqB,MAAdwB,EAAoB,OAAS,QACpCmB,eAAgB,QAClBzD,SAAA,CAEFC,eAACyD,KAAM,CAACC,KAAM,KACd1D,eAAA,KAAGY,MAAO,CAAEe,SAAU,UAAWgC,OAAQ,GAAI5D,SAAC,cAGtDC,eAAA,OAAKO,UAAU,cAAaR,SACxBS,gBAACE,QAAI,CACDC,GAAG,UACH4C,QAASA,IAAMd,EAAe,WAC9B7B,MAAO,CACHC,MAAqB,YAAdwB,EAA0B,OAAS,QAC1CmB,eAAgB,QAClBzD,SAAA,CAEFC,eAAC4D,KAAQ,CAACF,KAAM,KAChB1D,eAAA,KAAGY,MAAO,CAAEe,SAAU,UAAWgC,OAAQ,GAAI5D,SAAC,gBAGtDC,eAAA,OAAKO,UAAU,cAAaR,SACxBS,gBAACE,QAAI,CACDC,GAAG,IACH4C,QAASA,IAAMd,EAAe,YAC9B7B,MAAO,CACHC,MAAqB,aAAdwB,EAA2B,OAAS,QAC3CmB,eAAgB,QAClBzD,SAAA,CAEFC,eAAC6D,KAAS,CAACH,KAAM,KACjB1D,eAAA,KAAGY,MAAO,CAAEe,SAAU,UAAWgC,OAAQ,GAAI5D,SAAC,iBAGtDC,eAAA,OAAKO,UAAU,cAAaR,SACxBS,gBAACE,QAAI,CACDC,GAAG,aACH4C,QAASA,IAAMd,EAAe,cAC9B7B,MAAO,CACHC,MAAqB,eAAdwB,EAA6B,OAAS,QAC7CmB,eAAgB,QAClBzD,SAAA,CAEFC,eAAC8D,KAAU,CAACJ,KAAM,KAClB1D,eAAA,KAAGY,MAAO,CAAEe,SAAU,UAAWgC,OAAQ,GAAI5D,SAAC,mBAGtDC,eAAA,OAAKO,UAAU,cAAaR,SACxBS,gBAACE,QAAI,CACDC,GAAG,WACH4C,QAASA,IAAMd,EAAe,YAC9B7B,MAAO,CACHC,MAAqB,aAAdwB,EAA2B,OAAS,QAC3CmB,eAAgB,QAClBzD,SAAA,CAEFC,eAAC+D,KAAM,CAACL,KAAM,KACd1D,eAAA,KAAGY,MAAO,CAAEe,SAAU,UAAWgC,OAAQ,GAAI5D,SAAC,wB,UC6GvDiE,OArMEA,KACf,MAAOC,EAAKC,GAAU3B,mBAAS,KACxBvH,EAASmJ,GAAc5B,oBAAS,IAChCtH,EAAOmJ,GAAY7B,mBAAS,OAC5B8B,EAAaC,GAAkB/B,mBAAS,IACxCgC,EAAcC,GAAmBjC,mBAAS,KAC1CkC,EAAiBC,GAAsBnC,mBAAS,IACjDoC,EAAcC,iBAAO,MACrBC,EAAYD,iBAAO,IAEzBE,qBAAU,KACSvF,WACf,IACE,MAAM,KAAE1C,SAAe4C,KAAMC,IAAI,8CACjCwE,EAAOrH,GAGP,MAAMkI,EAAuB,GACvBC,EAAwB,GAC9BnI,EAAKoI,SAAQ,CAAC/G,EAAIgH,KACG,UAAfhH,EAAGiH,UACLJ,EAAqBG,IAAS,EAC9BF,EAAsBE,IAAS,MAInCV,EAAgBO,GAChBL,EAAmBM,GACnBb,GAAW,GACX,MAAOiB,GACPhB,EAASgB,EAAIzF,SACbwE,GAAW,KAGfkB,KACC,IAsBHP,qBAAU,KACJb,EAAIvI,OAAS,IACfmJ,EAAUS,QAAUT,EAAUS,QAAQC,MAAM,EAAGtB,EAAIvI,QAEnDuI,EAAIgB,SAAQ,CAAC/G,EAAIgH,KACf,GAAmB,UAAfhH,EAAGiH,SAAuBN,EAAUS,QAAQJ,GAAQ,CACtD,MAAMM,EAAQX,EAAUS,QAAQJ,GAChCM,EAAMC,QAAU,IA1BAP,KAElBA,EAAQjB,EAAIvI,OAAS,GACvBiJ,EAAYW,QAAQI,QAuBMC,CAAeT,GACrCM,EAAMI,OAAS,IAnBEV,KACvBR,GAAmBmB,IAAI,IAAUA,EAAM,CAACX,IAAQ,OAkBrBY,CAAgBZ,GACrCM,EAAMO,QAAWzE,GAhBA0E,EAACd,EAAO5D,KACF,IAAzBA,EAAEC,OAAO0E,aACXvB,GAAmBmB,IAAI,IAAUA,EAAM,CAACX,IAAQ,OAcrBc,CAAiBd,EAAO5D,GAC/CkE,EAAMU,aAAe,KACnB1B,GAAgBqB,IAAI,IAAUA,EAAM,CAACX,IAAQ,cAKpD,CAACjB,IASJ,OAAIjJ,EAAgBgF,eAAA,OAAKO,UAAU,mBAAkBR,SAACC,eAACmG,KAAO,CAACC,UAAU,aACrEnL,EAAcuF,gBAAA,OAAKD,UAAU,+BAA8BR,SAAA,CAAC,sBAAoB9E,KACjE,IAAfgJ,EAAIvI,OAAqB,KAG3BsE,eAACqG,KAAQ,CACPC,IAAK3B,EACLN,YAAaA,EACbkC,SAAWC,GAAkBlC,EAAekC,GAC5CC,YAAY,EACZC,SAAUzC,EAAIvI,OAAS,EACvBiL,SAAU,KACVpG,UAAU,iBAAgBR,SAEzBkE,EAAI2C,KAAI,CAAC1I,EAAIgH,IACZlF,eAACqG,KAASQ,KAAI,CAAA9G,SACZC,eAACM,KAAI,CAACM,MAAO,CACXkG,WAAY,oDACZC,OAAQ,OACR3F,aAAc,OACdS,SAAU,UACV9B,SACAS,gBAACF,KAAKG,KAAI,CAACF,UAAU,mBAAkBR,SAAA,CACrB,UAAf7B,EAAGiH,QACFnF,eAAA,OACEe,IAAK7C,EAAG8I,YACRC,IAAK/I,EAAGgJ,SACR3G,UAAU,iBACVK,MAAO,CAAEuG,UAAW,QAAShG,UAAW,aAG1CX,gBAAA,OAAKI,MAAO,CAAEgC,SAAU,YAAa7C,SAAA,CAClCwE,EAAaW,IACZlF,eAAA,OAAKO,UAAU,mBAAkBR,SAC/BC,eAACmG,KAAO,CAACC,UAAU,aAGvBpG,eAAA,SACEsG,IAAKc,GAAMvC,EAAUS,QAAQJ,GAASkC,EACtCrG,IAAK7C,EAAG8I,YACRK,UAAQ,EACRC,OAAK,EACLC,aAAW,EACXhH,UAAU,iBACVK,MAAO,CACLuG,UAAW,QACXhG,UAAW,UACX+B,QAASqB,EAAaW,GAAS,OAAS,WAG3CT,EAAgBS,IACflF,eAAA,OACEY,MAAO,CACLgC,SAAU,WACV4E,IAAK,MACL1E,KAAM,MACN2E,UAAW,wBACXnE,OAAQ,GACRvD,SAEFC,eAAC0H,KAAM,CACL5H,QAAQ,UACRyD,QAASA,IApEN2B,KACnBL,EAAUS,QAAQJ,IACpBL,EAAUS,QAAQJ,GAAOyC,QAkEQC,CAAgB1C,GAC/BtE,MAAO,CACLyC,QAAS,gBACTjC,aAAc,OACdyG,UAAW,iCACX9H,SACH,oBAOTC,eAAA,MAAIY,MAAO,CAAEC,MAAO,UAAWiH,WAAY,OAAQC,aAAc,QAAShI,SACvE7B,EAAGgJ,WAENlH,eAAA,KAAGO,UAAU,YAAYK,MAAO,CAAEC,MAAO,UAAWc,SAAU,WAAY5B,SACvE7B,EAAG8J,iBAENhI,eAAA,OAAKO,UAAU,gCAA+BR,SAC5CC,eAACU,QAAI,CAACC,GAAG,aAAaJ,UAAU,yBAC9BK,MAAO,CACLyC,QAAS,eACT1B,SAAU,SACVmG,WAAY,MACZ1G,aAAc,OACdyG,UAAW,gCACXI,WAAY,gBACZjF,gBAAiB,QACjBkF,YAAa,SAEfC,YAAc7G,IACZA,EAAEC,OAAOX,MAAM6G,UAAY,mBAC3BnG,EAAEC,OAAOX,MAAMiH,UAAY,kCAE7BO,WAAa9G,IACXA,EAAEC,OAAOX,MAAM6G,UAAY,gBAC3BnG,EAAEC,OAAOX,MAAMiH,UAAY,iCAC3B9H,SAAC,+BAIPC,eAAA,OAAKO,UAAU,kBAAiBR,SAC9BC,eAAA,SAAAD,SAAO,yBA1FKmF,QC2BbmD,OApHf,WACI,IAAIC,EAAUC,eACVC,EAAaF,EAAQnG,SAASsG,OAASH,EAAQnG,SAASsG,OAAOC,MAAM,KAAK,GAAGC,cAAgB,GACjG,MAAMnJ,EAAWoJ,eACVC,EAAkBC,GAAuBvG,mBAAS,QAClDwG,EAAYC,GAAiBzG,mBAAS,CAAC,QAG9CuC,qBAAU,KACkBvF,WACpB,IACI,MAAM,KAAE1C,SAAe4C,KAAMC,IAAI,kDAC3BuJ,EAAmB,CAAC,SAAU,IAAIC,IAAIrM,EAAK+J,KAAIuC,GAAYA,EAASpH,SAC1EiH,EAAcC,GAChB,MAAOhO,GACLmO,QAAQnO,MAAM,6BAA8BA,KAGpDoO,KACD,IAGH,MAAM9N,EAAsB+N,aAAY9N,GAASA,EAAMD,uBACjD,QAAEP,EAAO,MAAEC,EAAK,SAAEW,GAAaL,EAGrCuJ,qBAAU,KACgBvF,WAClB,UAEUC,GLjBeD,UACjC,IACIC,EAAS,CACL1D,KAAMpH,IAIV,MAAM,KAAEmI,SAAe4C,KAAMC,IAAI,GAAGP,oBAEpCK,EAAS,CACL1D,KAAMnH,EACNoH,QAASc,IAEf,MAAO5B,GACLuE,EAAS,CACL1D,KAAMlH,EACNmH,QAASd,EAAM0E,cKEb,MAAO1E,GACLmO,QAAQnO,MAAM,2BAA4BA,KAGlDsO,GACA/J,EAAS,CAAE1D,KAAM3G,MAClB,CAACqK,EAAUqJ,IAGd/D,qBAAU,KACFlJ,GAAYA,EAASF,OAAS,GAC9BE,EAASqJ,SAAQhJ,IACbmN,QAAQI,IAAI,uBAAuBvN,EAAQmE,cAGpD,CAACxE,IAEJ,MAKM6N,EAAmB7N,EAAS8N,QAAOzN,IACrC,MAAM0N,EAAgB1N,EAAQ8F,KAAK4G,cAAciB,SAASpB,GACpDqB,EAAuC,QAArBhB,GACF5M,EAAQ6N,gBAAkBjB,EAChD,OAAOc,GAAiBE,KAG5B,OACIrJ,gBAAA,OAAAT,SAAA,CAEIC,eAACgE,GAAQ,IAGThE,eAAA,OAAKO,UAAU,mBAAkBR,SAC7BC,eAAC+J,KAAW,CAACxJ,UAAU,YAAWR,SAC7BgJ,EAAWnC,KAAIuC,GACZnJ,eAAC0H,KAAM,CAEH5H,QAAS+I,IAAqBM,EAAW,UAAY,kBACrD5F,QAASA,IAAMuF,EAAoBK,GACnC5I,UAAU,yBACVK,MAAO,CACHoC,gBAAiB6F,IAAqBM,EAAW,QAAU,cAC3DtI,MAAOgI,IAAqBM,EAAW,QAAU,QACjDjB,YAAa,SACfnI,SAEDoJ,GAVIA,SAiBpBlO,GAAS+E,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAE9E,IACpCD,EACGwF,gBAAA,OAAKD,UAAU,mBAAkBR,SAAA,CAC7BC,eAACmG,KAAO,CAACC,UAAU,WACnBpG,eAAA,KAAGO,UAAU,OAAMR,SAAC,2BAGxBC,eAACgK,KAAG,CAAAjK,SACC0J,EAAiB/N,OAAS,EACvB+N,EAAiB7C,KAAI3K,GACjB+D,eAACiK,KAAG,CAAkBC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAEvK,SAEpDC,eAAA,OAAKO,UAAU,oBAAmBR,SAC9BC,eAACE,GAAO,CAACjE,QAAS,IAAKA,EAASgG,MAAOsI,KAAKC,MAAMvO,EAAQgG,OAAOwI,uBAH/DxO,EAAQqD,OAhD9BtE,GAAWgF,eAACJ,GAAO,CAACE,QAAQ,OAAMC,SAAC,sBA8DvCC,eAACkC,GAAY,Q,8BCqDVwI,OAxKf,SAA2B7K,GAAsB,IAAD8K,EAAAC,EAAA,IAApB,QAAEtC,EAAO,MAAEuC,GAAOhL,EAC1C,MAAOiL,EAAMC,GAAWxI,oBAAS,IAC1ByI,EAAUC,GAAe1I,mBAAS,GACnC/C,EAAWoJ,cAEX5M,EAAwBsN,aAAY9N,GAASA,EAAMQ,yBACnD,QAAEhB,EAAO,MAAEC,EAAK,QAAEgB,GAAYD,EAE9Bc,EAAmBwM,aAAY9N,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAEfV,EAAuBkN,aAAY9N,GAASA,EAAMY,wBAChDlB,QAASgQ,GAA2B9O,EAS5C0I,qBAAU,KACNtF,EAASH,GAAkBwL,EAAMM,OAAO7L,KACxCE,EAAS,CAAE1D,KAAMvG,IACjBiK,EAAS,CAAE1D,KAAM3G,IACjBqK,EAAS,CAAE1D,KAAM3F,MAClB,CAACqJ,EAAUqL,IAEd,MAAMO,EAAcA,IAAML,GAAQ,GAclC,OANIG,IACAG,MAAM,iCACN/C,EAAQgD,KAAK,KACb9L,EAAS,CAAE1D,KAAMnG,KAIjB6K,gBAAA,OAAAT,SAAA,CACIS,gBAAC+K,KAAK,CAACT,KAAMA,EAAMU,OAAQJ,EAAYrL,SAAA,CACnCC,eAACuL,KAAME,OAAM,CAACC,aAAW,EAAA3L,SACrBS,gBAAC+K,KAAM9J,MAAK,CAAA1B,SAAA,CACRC,eAAA,KAAGY,MAAO,CAAEC,MAAO,WAAaN,UAAU,gCACzC,IAAI,2BAIbC,gBAAC+K,KAAM9K,KAAI,CAAAV,SAAA,CAAC,gDAA6CS,gBAAA,MAAAT,SAAA,CAAI,IAAE9D,EAAQ8F,KAAK,OAAM,OAClFvB,gBAAC+K,KAAMI,OAAM,CAAA5L,SAAA,CACTC,eAAC0H,KAAM,CAAC5H,QAAQ,SAASyD,QAvBnBqI,KNuEItM,MMtEtBE,GNsEsBF,EMtECuL,EAAMM,OAAO7L,GNsEPC,MAAOC,EAAUqM,KAClD,IACIrM,EAAS,CACL1D,KAAMtG,IAIV,MACIsH,kBAAkB,SAAEC,IACpB8O,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUjP,EAASkP,WAKpC,KAAEpP,SAAe4C,KAAMyM,OACzB,GAAG/M,yBAA8BG,KACjCwM,GAGJtM,EAAS,CACL1D,KAAMrG,EACNsG,QAASc,IAGf,MAAO5B,GACLuE,EAAS,CACL1D,KAAMpG,EACNqG,QAASd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKuP,OAASnR,EAAMkR,SAAStP,KAAKuP,OAASnR,EAAM0E,cMrG/FyL,KAqB4DrL,SAAC,mBAGjDC,eAAC0H,KAAM,CAAC5H,QAAQ,UAAUyD,QAAS6H,EAAYrL,SAAC,iBAMvD/E,GACGwF,gBAAA,QAAMI,MAAO,CAAEsC,QAAS,QAASnD,SAAA,CAC7BC,eAAA,MAAAD,SAAI,4BACJC,eAAA,QAAMO,UAAU,OAAMR,SAClBC,eAACmG,KAAO,CAACC,UAAU,gBAK9BnL,EACG+E,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAE9E,IAE3B+E,eAAA,OAAAD,SACIC,eAACqM,KAAS,CAAAtM,SACNS,gBAACwJ,KAAG,CAAAjK,SAAA,CACAS,gBAACyJ,KAAG,CAACG,GAAI,EAAErK,SAAA,CACPC,eAACM,KAAKQ,IAAG,CACLhB,QAAQ,MACRiB,KAlEXuL,EAkE4BrQ,EAAQmE,MAjEhDkM,EACDA,EAAUjM,WAAW,QAAgBiM,EAClC,iCAAwCA,IAFxB,IAkEKrL,OAAO,MACPI,QAAUC,IACNA,EAAEC,OAAOC,QAAU,KACnBF,EAAEC,OAAOR,IAAM,MAItBhE,GAAYA,EAASwP,OAClB/L,gBAAA,QAAMI,MAAO,CAAEsC,QAAS,QAASnD,SAAA,CAC7BC,eAAC0H,KAAM,CACHnH,UAAU,8CACVK,MAAO,CAAEI,MAAO,QAChBuC,QAjErBiJ,IAAMzB,GAAQ,GAiE2BhL,SACvB,mBAIDC,eAAC0H,KAAM,CACHnH,UAAU,oDACVgD,QAASA,IAAM+E,EAAQgD,KAAK,mBAAmBrP,EAAQqD,OACvDsB,MAAO,CAAEI,MAAO,QAASjB,SAC5B,uBAObS,gBAACyJ,KAAG,CAACE,IAAE,EAAApK,SAAA,CACHC,eAAA,KAAAD,SAAI9D,EAAQ8F,OACZ/B,eAAA,QAAMO,UAAU,6BAA4BR,SACvC9D,EAAQ6N,gBAEb9J,eAAA,SACAA,eAAA,QAAMO,UAAU,0BAAyBR,SACrCC,eAAA,KAAAD,SAAI9D,EAAQwQ,gBAEhBjM,gBAAA,QAAMI,MAAO,CACTsC,QAAS,OACTC,eAAgB,SAChB4D,OAAQ,YACRmB,YAAa,UACb7E,QAAS,OACXtD,SAAA,CAAC,SACOS,gBAAA,QAAMD,UAAU,oBAAmBR,SAAA,CAAC,OAAKwK,KAAKC,MAAMvO,EAAQgG,OAAOwI,0BAGjFjK,gBAACyJ,KAAG,CAACE,IAAE,EAAApK,SAAA,CACHC,eAAA,KAAAD,SAAG,QACHC,eAAA,SACC/D,EAAQyQ,MACLlM,gBAAAmC,YAAA,CAAA5C,SAAA,CACIS,gBAACmM,KAAKC,MAAK,CAACC,UAAU,WAAU9M,SAAA,CAC5BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,aACZC,eAAC2M,KAAKI,QAAO,CACTrL,GAAG,SACHsL,MAAOhC,EACPiC,SAAW3L,GAAM2J,EAAY3J,EAAEC,OAAOyL,OAAOjN,SAE5C,IAAImN,MAAM,IAAIC,QAAQvG,KAAIwG,GACvBpN,eAAA,UAAoBgN,MAAOI,EAAI,EAAErN,SAC5BqN,EAAI,GADIA,EAAI,UAM7BpN,eAACU,QAAI,CACDC,GAAI,sBAAsB1E,EAAQqD,UAAU0L,UAAiBqC,mBAAmBpR,EAAQ8F,eAAe9F,EAAQgG,kBAAkBoL,oBAAwC,QAArB1C,EAAA1O,EAAQqR,qBAAa,IAAA3C,OAAA,EAArBA,EAAuB5I,OAAQ,gBAAgBsL,oBAAwC,QAArBzC,EAAA3O,EAAQqR,qBAAa,IAAA1C,OAAA,EAArBA,EAAuB2C,gBAAiB,MAC9PhN,UAAU,4BAA2BR,SACxC,iBAKLC,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAC,4BAOlDC,eAACkC,GAAY,IAAG,OApJHoK,O,UCElB,MAAMkB,GAAclR,GAAaiD,MAAOC,EAAUqM,KAErD,IAEIrM,EAAS,CACL1D,KAAM9F,IAGV,MACI8G,kBAAkB,SAAEC,IACpB8O,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUjP,EAASkP,QAClC,cAAe3P,EAASmR,cAK1B,KAAE5Q,SAAe4C,KAAMiO,KACzB,yBACA,CACI,MAASpR,EAASqR,MAClB,OAAUrR,EAASmR,WACnB,UAAanR,EAASsR,SACtB,SAAYtR,EAASuR,QACrB,IAAOvR,EAASwR,IAChB,UAAaxR,EAASyR,UAE1BjC,GAGJtM,EAAS,CACL1D,KAAM7F,EACN8F,QAASc,IAGf,MAAO5B,GACLuE,EAAS,CACL1D,KAAM5F,EACN6F,QAASd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKuP,OAASnR,EAAMkR,SAAStP,KAAKuP,OAASnR,EAAM0E,YAgD1FqO,GAAiBA,IAAMzO,MAAOC,EAAUqM,KAEjD,IACIrM,EAAS,CACL1D,KAAMtF,IAGV,MACIsG,kBAAkB,SAAEC,IACpB8O,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUjP,EAASkP,WAKpC,KAAEpP,SAAe4C,KAAMC,IAAI,yBAA0BoM,GAE3DtM,EAAS,CACL1D,KAAMrF,EACNsF,QAASc,IAGf,MAAO5B,GACLuE,EAAS,CACL1D,KAAMpF,EACNqF,QAASd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKuP,OAASnR,EAAMkR,SAAStP,KAAKuP,OAASnR,EAAM0E,YC1FxFsO,OAhDf,SAA4BpO,GAAkF,IAAjF,OAAEqO,EAAM,iBAAEC,EAAgB,qBAAEC,EAAoB,2BAAEC,GAA4BxO,EAEvG,MAAML,EAAWoJ,cAGXgD,EAAiB0C,IDsLKC,MCrLxB/O,GDqLwB+O,ECrLCD,EDqLe/O,MAAOC,EAAUqM,KAE7D,IACIrM,EAAS,CACL1D,KAAMnF,IAGV,MACImG,kBAAkB,SAAEC,IACpB8O,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUjP,EAASkP,WAKpC,KAAEpP,SAAe4C,KAAMiO,KACzB,yBACA,CAAE,YAAea,GACjBzC,GAGJtM,EAAS,CACL1D,KAAMlF,EACNmF,QAASc,IAGf,MAAO5B,GACLuE,EAAS,CACL1D,KAAMjF,EACNkF,QAASd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKuP,OAASnR,EAAMkR,SAAStP,KAAKuP,OAASnR,EAAM0E,cCrN/F0O,KAGJ,OACIrO,eAAA,OAAAD,SAEIC,eAAA,OAAAD,SACIS,gBAAC+K,KAAK,CAACT,KAAMsD,EAAsB5C,OAAQ6C,EAA2BtO,SAAA,CAClEC,eAACuL,KAAME,OAAM,CAACC,aAAW,EAAA3L,SACrBS,gBAAC+K,KAAM9J,MAAK,CAAA1B,SAAA,CACRC,eAAA,KAAGY,MAAO,CAAEC,MAAO,WAAaN,UAAU,gCACzC,IAAI,2BAIbC,gBAAC+K,KAAM9K,KAAI,CAAAV,SAAA,CACPS,gBAAA,KAAAT,SAAA,CACIC,eAAA,KAAAD,SAAG,aAGF,IAAI,0EACL,6CACuCoO,EAAiB,QAGhE3N,gBAAC+K,KAAMI,OAAM,CAAA5L,SAAA,CACTC,eAAC0H,KAAM,CAAC5H,QAAQ,SAASyD,QAASA,IAAMqI,EAAcuC,GAAkBpO,SAAC,mBAGzEC,eAAC0H,KAAM,CAAC5H,QAAQ,UAAUyD,QAAS8K,EAA2BtO,SAAC,sBChCvF,IACIyO,IADc,IAAIjQ,MACSkQ,cAsShBC,OAnSa7O,IAAuC,IAAtC,YAAEpD,EAAW,gBAAEkS,GAAiB9O,EAErDyI,EAAUC,eACd,MAAM/I,EAAWoJ,eAEVsF,GAAU3L,mBAAS,IACnB6L,EAAsBQ,GAA2BrM,oBAAS,IAC1DsM,EAAeC,GAAoBvM,oBAAS,IAC5CwM,EAAaC,GAAkBzM,oBAAS,IACxC0M,EAAeC,GAAoB3M,mBAAS,IAC5C4M,EAAgBC,GAAqB7M,oBAAS,IAC9C4L,GAAoB5L,mBAAS,KAC7BoL,EAAO0B,GAAY9M,mBAAS,KAC5BkL,EAAY6B,GAAiB/M,mBAAS,KACtCqL,EAAU2B,GAAehN,mBAAS,KAClCsL,EAAS2B,GAAcjN,mBAAS,KAChCuL,EAAK2B,GAAUlN,mBAAS,KACxBwL,EAAU2B,GAAenN,oBAAS,GAGnCzF,EAAmBwM,aAAY9N,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfF,EAAyB0M,aAAY9N,GAASA,EAAMoB,0BACpD,QAAE5B,EAAO,QAAEE,EAAO,MAAED,GAAU2B,EAEpCkI,qBAAU,KACD/H,GACDuL,EAAQgD,KAAK,YAElB,CAAChD,EAASvL,EAAU7B,IAGvB,MAmCMyU,EAAmBrT,IACrB,GAAIyS,GACIzS,EAASgD,KAAO2P,EAChB,OACIzO,gBAAA,OAAAT,SAAA,CACIC,eAAA,UACIuD,QAASA,IAAMyL,GAAe,GAC9BzO,UAAU,iDACVK,MAAO,CAAEgP,MAAO,QAAShN,SAAU,WAAY,IAAO,SAAU7C,SAAC,UAGrES,gBAAA,KAAAT,SAAA,CAAGC,eAAA,KAAAD,SAAG,eAAc,IAAEzD,EAASuT,aAC/BrP,gBAAA,KAAAT,SAAA,CAAGC,eAAA,KAAAD,SAAG,cAAa,IAAEzD,EAASwT,gBAkBlD,OANI5U,IACAmQ,MAAM,8BACN0E,OAAO5N,SAAS6N,UAKhBxP,gBAAA,OAAAT,SAAA,CAGIC,eAAA,OAAAD,SACIC,eAAA2C,YAAA,CAAA5C,SACIC,eAACiO,GAAmB,CAChBC,OAAQA,EACRC,iBAAkBA,EAClBC,qBAAsBA,EACtBC,2BArBeA,KAC/BO,GAAyBR,UA2BpBpT,GAEGwF,gBAAA,QAAMI,MAAO,CAAEsC,QAAS,QAASnD,SAAA,CAC7BC,eAAA,MAAAD,SAAI,kBACJC,eAAA,QAAMO,UAAU,OAAMR,SAClBC,eAACmG,KAAO,CAACC,UAAU,gBAG9BnL,GAAS+E,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAE9E,IACrCuF,gBAAA,OAAKD,UAAU,iBAAgBR,SAAA,CAC3BC,eAAA,UAAQO,UAAW4O,EACb,8CACA,+CACF5L,QAASA,IACL6L,GAAmBD,GACtBpP,SACAoP,EACK,QACA,sBAGTA,EACG3O,gBAACmM,KAAI,CAACsD,SAxGQ3O,IAE1B,GADAA,EAAE4O,iBACEvB,EAAiB,CACjB,MAAM9R,EAAO,CACT,MAAmB,KAAV8Q,EAAe5Q,EAAS4Q,MAAQA,EACzC,WAAcF,EACd,SAAYG,EAAWuC,OAAOvC,GAAY,GAC1C,QAAWC,EAAUsC,OAAOtC,GAAW,GACvC,IAAOC,EAAMqC,OAAOrC,GAAO,GAC3B,SAAYC,GAEhBvO,EAASgO,GAAW3Q,SAEpBwO,MAAM,kDA2FuCtL,SAAA,CAEhC8O,EACGrO,gBAACmM,KAAKC,MAAK,CAAA7M,SAAA,CACPC,eAAC2M,KAAKG,MAAK,CAAA/M,SAACC,eAAA,KAAAD,SAAG,gCACfC,eAAC2M,KAAKI,QAAO,CACTqD,WAAW,EACXtU,KAAK,QACLuU,QAAQ,iBACRrD,MAAOW,EACPV,SAAW3L,GAAM+N,EAAS/N,EAAEC,OAAOyL,OACnCsD,YAAY,0CAGpB9P,gBAAA,QAAAT,SAAA,CAAMC,eAAA,KAAAD,SAAG,6BAA6BhD,EAAS4Q,SAEnD3N,eAAA,KAAAD,SACIC,eAACU,QAAI,CAACC,GAAG,IAAI4C,QAASA,KAClBuL,GAAkBD,GAClBQ,EAAS,KACXtP,SACG8O,EAAgB,yBAA2B,2BAIpDrO,gBAACmM,KAAKC,MAAK,CAACrM,UAAU,OAAMR,SAAA,CACxBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAACC,eAAA,KAAAD,SAAG,kBACfC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACLuU,QAAQ,SACRrD,MAAOS,EACPR,SAAW3L,GAAMgO,EAAchO,EAAEC,OAAOyL,OACxCsD,YAAY,yBAAyBC,UAAU,KAC/CC,UAAQ,OAIhBhQ,gBAACwJ,KAAG,CAAAjK,SAAA,CAEAC,eAACiK,KAAG,CAAAlK,SACAS,gBAACmM,KAAKC,MAAK,CAACrM,UAAU,OAAMR,SAAA,CACxBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAACC,eAAA,KAAAD,SAAG,gBACfS,gBAAA,UACID,UAAU,eACVkQ,aAAc7C,EACdX,SAAU3L,GAAKiO,EAAYjO,EAAEC,OAAOyL,OACpCwD,UAAQ,EAAAzQ,SAAA,CAERC,eAAA,UAAAD,SAAQ,UACPmN,MAAMwD,KAAK,CAAEhV,OAAQ,KAAM,CAAC0R,EAAGuD,IAAM3Q,eAAA,UAAAD,SAGjC4Q,EAAI,GAFAA,aASrB3Q,eAACiK,KAAG,CAAAlK,SACAS,gBAACmM,KAAKC,MAAK,CAACrM,UAAU,OAAMR,SAAA,CACxBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAACC,eAAA,KAAAD,SAAG,eACfS,gBAAA,UAAQD,UAAU,eACdkQ,aAAc5C,EACdZ,SAAU3L,GAAKkO,EAAWlO,EAAEC,OAAOyL,OACnCwD,UAAQ,EAAAzQ,SAAA,CAERC,eAAA,UAAAD,SAAQ,UACPmN,MAAMwD,KAAK,CAAEhV,OAAQ,KAAM,CAAC0R,EAAGuD,IAAM3Q,eAAA,UAAAD,SAEpCyO,GAAemC,GADRA,aAMrB3Q,eAACiK,KAAG,CAAAlK,SACAS,gBAACmM,KAAKC,MAAK,CAACrM,UAAU,OAAMR,SAAA,CACxBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAACC,eAAA,KAAAD,SAAG,iBACfC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,UACLmR,SAAW3L,GAAMmO,EAAOnO,EAAEC,OAAOyL,OACjCsD,YAAY,MACZC,UAAU,IACVF,QAAQ,SACRG,UAAQ,YAOxBxQ,eAAC2M,KAAK3K,KAAI,CAACzB,UAAU,kBAAiBR,SAClCS,gBAAA,QAAMI,MAAO,CAAEsC,QAAS,QAASnD,SAAA,CAC7BC,eAAA,SACI4Q,OAAQ/B,EACR/S,KAAK,WACLyE,UAAU,OACVyM,OAAO6B,GAAwBd,EAC/Bd,SAAUA,IAAMyC,GAAa3B,KAEjC/N,eAAA,QAAM4Q,OAAQ/B,EAAetO,UAAU,OAAMR,SAAC,0CAItDC,eAAC0H,KAAM,CAACnH,UAAU,0BAA0BT,QAAQ,UAAUhE,KAAK,SAAQiE,SAAC,cAI9E,MAIVS,gBAAA,OAAKD,UAAU,sBAAqBR,SAAA,CAChCC,eAAA,MAAAD,SAAI,eACHtD,EAAYf,OAAS,EAClBe,EAAYmK,KAAItK,GACZkE,gBAAA,OAAAT,SAAA,CACIS,gBAACF,KAAI,CACDM,MAAO,CAAEmG,OAAQ,YAAamB,YAAa,WAC3C3H,UAAU,MAAKR,SAAA,CACfS,gBAAA,KAAAT,SAAA,CAAGC,eAAA,KAAAD,SAAG,iBAAgB,mBAAiBzD,EAASiS,YAAYhJ,MAAM,GAAG,OACrE/E,gBAAA,OAAAT,SAAA,CACK4P,EAAgBrT,GACjB0D,eAAA,UAAQuD,QAASA,KACbyL,GAAe,GACfE,EAAiB5S,EAASgD,KAC3BiB,UAAU,kDAAiDR,SAC7D,sBAGDC,eAAA,UAAQuD,QAASA,IAxNvBjH,KACtB,GAAIqS,EAAiB,CACjB,MAAM9R,EAAO,CACT,MAASP,EAASqR,MAClB,WAAcrR,EAASiS,YACvB,SAAY4B,OAAO7T,EAASuT,WAC5B,QAAWM,OAAO7T,EAASwT,UAC3B,IAAOK,OAAO7T,EAASwR,KACvB,UAAY,GAEhBtO,EAASgO,GAAW3Q,SAEpBwO,MAAM,kDA4MyCwF,CAAiBvU,GACpCiE,UAAU,uDAAsDR,SAAC,6BAQ7EC,eAAA,QACIuD,QAASA,IAAM+E,EAAQgD,KAAK,yBAAyBvL,SACrDC,eAAA,KACI8Q,MAAM,YACNvQ,UAAU,+CA3BZjE,EAASgD,MA+BlB,wBCjQzB,MAAMH,GAAUC,iCAsCH2R,GAASA,IAAOvR,IACzBb,aAAaqS,WAAW,YACxBxR,EAAS,CACL1D,KAAMzE,IAEVmI,EAAS,CACL1D,KAAM3F,KAyCD8a,GAAuBA,IAAM1R,MAAOC,EAAUqM,KACvD,IAEIrM,EAAS,CACL1D,KAAMlG,IAGV,MACIkH,kBAAkB,SAAEC,IACpB8O,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUjP,EAASkP,WAKpC,KAAEpP,SAAe4C,KAAMC,IAAI,GAAGP,2BAAiC2M,GAErEtM,EAAS,CACL1D,KAAMjG,EACNkG,QAASc,IAGf,MAAO5B,GACLuE,EAAS,CACL1D,KAAMhG,EACNiG,QAASd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKqU,QAAUjW,EAAMkR,SAAStP,KAAKqU,QAAUjW,EAAM0E,YAQ5FwR,GAAe7R,GAAOC,MAAOC,EAAUqM,KAEhD,IAEIrM,EAAS,CACL1D,KAAMrE,KAGV,MACIqF,kBAAkB,SAAEC,IACpB8O,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUjP,EAASkP,WAKpC,KAAEpP,SAAe4C,KAAMC,IAAI,GAAGP,mBAAwBG,IAAMwM,GAElEtM,EAAS,CACL1D,KAAMpE,GACNqE,QAASc,IAGf,MAAO5B,GACLuE,EAAS,CACL1D,KAAMnE,GACNoE,QAASd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKqU,QAAUjW,EAAMkR,SAAStP,KAAKqU,QAAUjW,EAAM0E,YA8F5FyR,GAAgBA,IAAM7R,MAAOC,EAAUqM,KAChD,IACIrM,EAAS,CACL1D,KAAM1D,KAGV,MACI0E,kBAAkB,SAAEC,IACpB8O,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUjP,EAASkP,WAKpC,KAAEpP,SAAe4C,KAAMC,IACzB,GAAGP,kCACH2M,GAGJtM,EAAS,CACL1D,KAAMzD,GACN0D,QAASc,IAGf,MAAO5B,GACLuE,EAAS,CACL1D,KAAMxD,GACNyD,QAASd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKqU,QAAUjW,EAAMkR,SAAStP,KAAKqU,QAAUjW,EAAM0E,YAO5F0R,GAAoB/R,GAAOC,MAAOC,EAAUqM,KACrD,IACIrM,EAAS,CACL1D,KAAMvD,KAGV,MACIuE,kBAAkB,SAAEC,IACpB8O,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUjP,EAASkP,WAKpC,KAAEpP,SAAe4C,KAAMC,IACzB,GAAGP,8BAAmCG,KACtCwM,GAGJtM,EAAS,CACL1D,KAAMtD,GACNuD,QAASc,IAGf,MAAO5B,GACLuE,EAAS,CACL1D,KAAMrD,GACNsD,QAASd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKqU,QAAUjW,EAAMkR,SAAStP,KAAKqU,QAAUjW,EAAM0E,YA2H5F2R,GAAeA,IAAM/R,MAAOC,EAAUqM,KAC/C,IACIrM,EAAS,CACL1D,KAAMvC,KAGV,MACIuD,kBAAkB,SAAEC,IACpB8O,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUjP,EAASkP,WAKpC,KAAEpP,SAAe4C,KAAMC,IACzB,GAAGP,8BACH2M,GAGJtM,EAAS,CACL1D,KAAMtC,GACNuC,QAASc,IAGf,MAAO5B,GACLuE,EAAS,CACL1D,KAAMrC,GACNsC,QAASd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKqU,QAAUjW,EAAMkR,SAAStP,KAAKqU,QAAUjW,EAAM0E,YC5Y1F4R,OA3Ga1R,IAA6D,IAA5D,QAAE5D,EAAO,MAAE4O,EAAK,kBAAE2G,EAAiB,gBAAE7C,GAAiB9O,EAE3EyI,EAAUC,eACd,MAAM/I,EAAWoJ,cAGXvM,EAAoBiN,aAAY9N,GAASA,EAAMa,qBAC/C,SAAEC,GAAaD,EAGfE,EAAoB+M,aAAY9N,GAASA,EAAMe,qBAC7CrB,QAASuW,EAAmBxW,MAAOyW,EAAa1W,QAAS2W,GAAmBpV,EAG9EU,EAA0BqM,aAAY9N,GAASA,EAAMyB,2BACrD,QAAEC,GAAYD,EAEpB6H,qBAAU,KACNtF,EAAS6R,GAAiBG,MAC3B,CAAChS,EAAUqL,EAAO2G,IA+BrB,OARIC,IACAnJ,EAAQgD,KAAK,CACT9I,SAAU,mBACVhH,MAAO,CAAE4Q,OAAQnQ,KAErB8T,OAAO5N,SAAS6N,UAIhBxP,gBAAA,OAAAT,SAAA,CACK2R,EAAc1R,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAE2R,IAAyB,GACnE1R,eAAA,QAAMO,UAAU,YAAWR,SACvBC,eAAA,MAAAD,SAAI,sBAERS,gBAAA,OAAKD,UAAU,OAAMR,SAAA,CAAC,8BACUzD,EAASsV,UAAUC,SAEnD7R,eAAC2M,KAAI,CAACsD,SArCI3O,IACdA,EAAE4O,iBACF,MAAM4B,EAAiB,GAAG5U,EAAQ6U,kBAAkB7U,EAAQ8U,aAAa9U,EAAQ+U,mBAC/E/U,EAAQ1B,UAAU0B,EAAQgV,WACtBrV,EAAO,CACT,MAASP,EAASqR,MAClB,OAAUrR,EAASgD,GACnB,OAAUrD,EAAQgG,MAClB,KAAQ/E,EAAQ6E,KAChB,YAAezF,EAASsV,UAAUC,MAClC,QAAWC,EACX,aAAgB7V,EAAQ8F,KACxB,aAAe,EACf,YAAe9F,EAAQgG,MACvB,cAAgB,EAChB,aAAgB,iBAEpBzC,EJ2BuBlD,IAAaiD,MAAOC,EAAUqM,KAEzD,IAEIrM,EAAS,CACL1D,KAAM1F,IAGV,MACI0G,kBAAkB,SAAEC,IACpB8O,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUjP,EAASkP,WAKpC,KAAEpP,SAAe4C,KAAMiO,KACzB,6BACApR,EACAwP,GAGJtM,EAAS,CACL1D,KAAMzF,EACN0F,QAASc,IAGf,MAAO5B,GACLuE,EAAS,CACL1D,KAAMxF,EACNyF,QAASd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKuP,OAASnR,EAAMkR,SAAStP,KAAKuP,OAASnR,EAAM0E,YI7DtFwS,CAAetV,KAoBKkD,SAEpB4R,EACGnR,gBAACkH,KAAM,CAAC5H,QAAQ,UAAUsS,UAAQ,EAACxR,MAAO,CAAEI,MAAO,QAASjB,SAAA,CACxDC,eAACmG,KAAO,CACJzE,GAAG,OACH0E,UAAU,OACV1C,KAAK,KACL2O,KAAK,SACLC,cAAY,SAEf,IAAI,2BAGT9R,gBAACkH,KAAM,CAAC5H,QAAQ,UAAUhE,KAAK,SAAS8E,MAAO,CAAEI,MAAO,QAASjB,SAAA,CAAC,aACxD9D,EAAQgG,WAK1BjC,eAACM,KAAI,CACDC,UAAU,gBACVK,MAAO,CAAEmG,OAAQ,YAAamB,YAAa,WAAYnI,SAEtD7C,EACGsD,gBAAA,OAAAT,SAAA,CACIC,eAAA,QAAMO,UAAU,YAAWR,SACvBC,eAAA,KAAAD,SAAGC,eAAA,MAAAD,SAAI,2CAEXC,eAAA,QACAQ,gBAAA,KAAAT,SAAA,CAAGC,eAAA,KAAAD,SAAG,WAAW7C,EAAUA,EAAQ6E,KAAO,MAC1CvB,gBAAA,KAAAT,SAAA,CAAGC,eAAA,KAAAD,SAAG,mBAAmB7C,EAAUA,EAAQqV,aAAe,MAC1D/R,gBAAA,KAAAT,SAAA,CAAGC,eAAA,KAAAD,SAAG,mBAAmB7C,EAAUA,EAAQ6U,SAAW,MACtDvR,gBAAA,KAAAT,SAAA,CAAGC,eAAA,KAAAD,SAAG,eAAe7C,EAAUA,EAAQ8U,SAAW,MAClDxR,gBAAA,KAAAT,SAAA,CAAGC,eAAA,KAAAD,SAAG,WAAW7C,EAAUA,EAAQ+U,KAAO,MAC1CzR,gBAAA,KAAAT,SAAA,CAAGC,eAAA,KAAAD,SAAG,YAAY7C,EAAUA,EAAQ1B,MAAQ,MAC5CgF,gBAAA,KAAAT,SAAA,CAAGC,eAAA,KAAAD,SAAG,wBAAwB7C,EAAUA,EAAQgV,SAAW,SAG/D,KAGRlS,eAACU,QAAI,CAACC,GAAG,IAAI4C,QAASA,IAAMwM,OAAO5N,SAAS6N,SAASjQ,SAAC,uCC9CnDyS,OAzDf,SAA6B3S,GAAuB,IAAtB,gBAAE4S,GAAiB5S,EAEzCyI,EAAUC,eACd,MAAM/I,EAAWoJ,cAOX9L,EAAmBwM,aAAY9N,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfK,EAA+BmM,aAAY9N,GAASA,EAAM2B,gCAC1D,UAAEC,GAAcD,EAWtB,OATA2H,qBAAU,KACD/H,EAGDyC,EAAS4R,MAFT9I,EAAQgD,KAAK,YAIlB,CAAC9L,EAAU8I,EAASvL,IAInBiD,eAAA,OAAAD,SACK3C,EAAYA,EAAUwJ,KAAI,CAAC1J,EAASwV,IACjC1S,eAAA,OAAAD,SACIS,gBAACF,KAAI,CACDC,UAAU,WACVK,MAAO,CAAEmG,OAAQ,YAAamB,YAAa,WAAYnI,SAAA,CAIvDC,eAAA,SACIlE,KAAK,QACLiG,KAAK,YACLiL,MAAO,EACPzJ,QAASA,KAAMoP,OAnCRrT,EAmC8BpC,EAAQoC,QAlCjEmT,EAAgBnT,GADWA,SAqCXkB,gBAAA,QAAAT,SAAA,CAAMC,eAAA,KAAAD,SAAG,WAAW7C,EAAQ6E,QAC5BvB,gBAAA,QAAAT,SAAA,CAAMC,eAAA,KAAAD,SAAG,cACR7C,EAAQ6U,SAAS,KAAG7U,EAAQ8U,SAAS,KAAG9U,EAAQ+U,KAAK,IACrD/U,EAAQ1B,MAAM,KAAG0B,EAAQgV,cAZrBhV,EAAQoC,KAJXoT,KAqBV,WCyFDE,OAnIM/S,IAAgB,IAAf,MAAEgL,GAAOhL,EAEvByI,EAAUC,eAEd,MAAM/I,EAAWoJ,eACV+F,EAAiBkE,GAAsBtQ,oBAAS,IAChDiP,EAAmBsB,GAAwBvQ,mBAAS,GAWrD5E,EAA8B2L,aAAY9N,GAASA,EAAMmC,+BACvD1C,MAAO8X,GAAepV,EAGxB3B,EAAwBsN,aAAY9N,GAASA,EAAMQ,yBACnD,QAAEhB,EAAO,MAAEC,EAAK,QAAEgB,GAAYD,EAG9BK,EAAoBiN,aAAY9N,GAASA,EAAMa,qBAC7CpB,MAAO+X,EAAiB,QAAE9X,EAASF,QAASiY,GAAwB5W,EAGtES,EAAmBwM,aAAY9N,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfN,EAAwB8M,aAAY9N,GAASA,EAAMgB,yBACnD,YAAEC,GAAgBD,EAsBxB,OApBAsI,qBAAU,KACD/H,GAGDyC,EAASyR,MACTzR,EAASH,GAAkBwL,EAAMM,OAAO7L,KACxCE,EAASwO,MACTxO,EAAS,CACL1D,KAAMvF,KANV+R,EAAQgD,KAAK,YASlB,CAAC9L,EAAUqL,EAAOvC,EAASpN,EAAS6B,IAEnCA,GAA2B,wCAAfgW,IACZ1H,MAAM,wCACN7L,EAASuR,MACTzI,EAAQgD,KAAK,UACbyE,OAAO5N,SAAS6N,UAIhBxP,gBAAA,OAAAT,SAAA,CACKiT,EAAoBhT,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAEiT,IAA+B,GAC9EhY,GAEGwF,gBAAA,QAAMI,MAAO,CAAEsC,QAAS,QAASnD,SAAA,CAC7BC,eAAA,MAAAD,SAAI,0BACJC,eAAA,QAAMO,UAAU,OAAMR,SAClBC,eAACmG,KAAO,CAACC,UAAU,iBAG7BpL,GAAWiY,EACTzS,gBAAA,QAAMI,MAAO,CAAEsC,QAAS,QAASnD,SAAA,CAC7BC,eAAA,MAAAD,SAAI,uBACJC,eAAA,QAAMO,UAAU,OAAMR,SAClBC,eAACmG,KAAO,CAACC,UAAU,gBAEjB,GACbnL,EAAQ+E,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAE9E,IAChC+E,eAACqM,KAAS,CAAAtM,SACNS,gBAACwJ,KAAG,CAAAjK,SAAA,CACAS,gBAACyJ,KAAG,CAACC,GAAI,EAAEnK,SAAA,CACPC,eAAA,MAAAD,SAAI,qBACJC,eAACM,KAAI,CAACC,UAAU,OAAMR,SAClBC,eAACM,KAAKG,KAAI,CAAAV,SACNC,eAACqM,KAAS,CAAAtM,SACNS,gBAACwJ,KAAG,CAAAjK,SAAA,CACAC,eAACiK,KAAG,CAAAlK,SACAC,eAACkT,KAAK,CAACnS,IAAK9E,EAAQmE,MAAO6G,IAAI,QAAQhG,OAAO,UAElDT,gBAACyJ,KAAG,CAAAlK,SAAA,CACAC,eAAA,MAAIO,UAAU,6BAA4BR,SACrC9D,EAAQ8F,OAEbvB,gBAAA,QAAMD,UAAU,yBAAwBR,SAAA,CAAC,UAAG9D,EAAQgG,qBAOxEzB,gBAAA,QAAMI,MAAO,CAAEsC,QAAS,QAASnD,SAAA,CAC7BC,eAAA,MAAAD,SAAI,oBACJC,eAACU,QAAI,CACDH,UAAU,YACVI,GAAG,kBAAiBZ,SACvB,wBAILC,eAACwS,GAAoB,CAACC,gBAjGrBnT,IACjBA,GACAuT,GAAmB,GAEvBC,EAAqBxT,SA+FLkB,gBAACyJ,KAAG,CAACC,GAAI,EAAEnK,SAAA,CACPC,eAAA,MAAAD,SAAI,qBAGH7E,EACG8E,eAACuR,GAAmB,CAChBC,kBAAmBA,EACnB7C,gBAAiBA,EACjB1S,QAASA,IAGb+D,eAAC0O,GAAmB,CAChBC,gBAAiBA,EACjBlS,YAAaA,YAKrCuD,eAACkC,GAAY,Q,uCC7IV,OAA0B,kCCqG1BiR,OA7Ff,WAEI,IAAI7K,EAAUC,eACd,MAAM/I,EAAWoJ,cAGX9L,EAAmBwM,aAAY9N,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EASrB,OACIkD,eAAA,UAAAD,SACIC,eAACoT,KAAM,CAACC,GAAG,OAAOvT,QAAQ,OAAOwT,OAAO,KAAKC,kBAAgB,EAAAxT,SACzDS,gBAAC6L,KAAS,CAAAtM,SAAA,CACNC,eAACwT,iBAAa,CAAC7S,GAAG,IAAGZ,SACjBC,eAACoT,KAAOK,MAAK,CAAA1T,SACTC,eAAA,OACIe,IAAK2S,GACLzM,IAAI,OACJrG,MAAO,CAAEI,MAAO,OAAQC,OAAQ,OAAQ0S,YAAa,cAIjE3T,eAACoT,KAAOQ,OAAM,CAACC,gBAAc,qBAC7BrT,gBAAC4S,KAAOU,SAAQ,CAACxU,GAAG,mBAAkBS,SAAA,CAClCS,gBAACuT,KAAG,CAACxT,UAAU,UAASR,SAAA,CAEpBC,eAACwT,iBAAa,CAAC7S,GAAG,QAAOZ,SACzBC,eAAC+T,KAAIrT,KAAI,CAAAX,SAAC,WAEVC,eAACwT,iBAAa,CAAC7S,GAAG,SAAQZ,SAC1BC,eAAC+T,KAAIrT,KAAI,CAAAX,SAAC,eAKThD,GAAYA,EAASwP,MAClBvM,eAACwT,iBAAa,CAAC7S,GAAG,gBAAeZ,SAC7BC,eAAC+T,KAAIrT,KAAI,CAAAX,SAAE,kBAEb,GAILhD,GAAYA,EAASiX,SAClBhU,eAACwT,iBAAa,CAAC7S,GAAG,eAAcZ,SAC5BC,eAAC+T,KAAIrT,KAAI,CAAAX,SAAC,qBAQrBhD,EACGiD,eAAA,OAAAD,SACIS,gBAACyT,KAAW,CAAC1T,UAAU,6BAA6BuQ,MAAO/T,EAASmX,SAAU5U,GAAG,WAAUS,SAAA,CACvFC,eAACwT,iBAAa,CAAC7S,GAAG,WAAUZ,SACxBC,eAACiU,KAAYpN,KAAI,CAAA9G,SAAC,uBAEtBC,eAACwT,iBAAa,CAAC7S,GAAG,kBAAiBZ,SAC/BC,eAACiU,KAAYpN,KAAI,CAAA9G,SAAC,uBAEtBC,eAACwT,iBAAa,CAAC7S,GAAG,wBAAuBZ,SACrCC,eAACiU,KAAYpN,KAAI,CAAA9G,SAAC,oBAEtBC,eAACwT,iBAAa,CAAC7S,GAAG,eAAcZ,SAC5BC,eAACiU,KAAYpN,KAAI,CAAA9G,SAAC,iBAEtBC,eAACiU,KAAYpN,KAAI,CAACtD,QAjE5B4Q,KAClB3U,EAASuR,MACTzI,EAAQgD,KAAK,UACbyE,OAAO5N,SAAS6N,UA8DqDjQ,SAAC,gBAOlDC,eAACwT,iBAAa,CAAC7S,GAAG,SAAQZ,SACtBS,gBAACuT,KAAIrT,KAAI,CAAAX,SAAA,CAACC,eAAA,KAAGO,UAAU,gBAAkB,yBCvD1D6T,OA9BOA,KAClB,MAAMjS,EAAWC,eA0BjB,MAxBmBiS,MAEf,IACI,MAAMC,EAAanS,EAAS3G,MAAM4Q,OAElC,OACI5L,gBAAA,OAAAT,SAAA,CACIC,eAAA,MAAIO,UAAU,eAAcR,SAAC,4BAC7BS,gBAACF,KAAI,CAACC,UAAU,MAAKR,SAAA,CAAC,sBAElBC,eAAA,SACAQ,gBAAA,QAAMD,UAAU,OAAOK,MAAO,CAAEsC,QAAS,QAASnD,SAAA,CAC7CuU,EAAWvS,KAAK,WACfuS,EAAWrS,MAAM,IAACjC,eAAA,KAAGO,UAAU,kDAErCP,eAACU,QAAI,CAACC,GAAG,eAAcZ,SAAC,4BAItC,MAAO9E,GACL,OAAO+E,eAACJ,GAAO,CAACE,QAAQ,OAAMC,SAAC,oCAIhCsU,IC+CIE,OAxEf,SAAkB1U,GAAe,IAAd,QAAEyI,GAASzI,EAC1B,MAAOqU,EAAUM,GAAejS,mBAAS,KAClCkS,EAAUC,GAAenS,mBAAS,IAEnC/C,EAAWoJ,cAGX9L,EAAmBwM,aAAY9N,GAASA,EAAMsB,oBAC9C,MAAE7B,EAAK,SAAE8B,GAAaD,EAa5B,OAXAgI,qBAAU,KACF/H,GACAuL,EAAQgD,KAAK,OAElB,CAAChD,EAASvL,IAQTiD,eAAA,OAAAD,SACIC,eAACgK,KAAG,CAACzJ,UAAU,4BAA2BR,SACtCS,gBAACyJ,KAAG,CAACC,GAAI,GAAIE,GAAI,EAAErK,SAAA,CACfC,eAAA,MAAAD,SAAI,YACH9E,GAAS+E,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAE9E,IACrCuF,gBAACmM,KAAI,CAACsD,SAXC3O,IACnBA,EAAE4O,iBACF1Q,EPoBamV,EAACT,EAAUO,IAAalV,UACzC,IACIC,EAAS,CACL1D,KAAM5E,IAGV,MAAM4U,EAAS,CACXC,QAAS,CACL,eAAgB,sBAIlB,KAAElP,SAAe4C,KAAMiO,KACzB,GAAGvO,oBACH,CAAE,SAAY+U,EAAU,SAAYO,GACpC3I,GAGJtM,EAAS,CACL1D,KAAM3E,EACN4E,QAASc,IAGb8B,aAAaiW,QAAQ,WAAY/V,KAAKgW,UAAUhY,IAGlD,MAAO5B,GACLuE,EAAS,CACL1D,KAAM1E,EACN2E,QAASd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKuP,OAASnR,EAAMkR,SAAStP,KAAKuP,OAASnR,EAAM0E,YOjDtFgV,CAAMT,EAAUO,KASiB1U,SAAA,CAC1BS,gBAACmM,KAAKC,MAAK,CAACC,UAAU,WAAU9M,SAAA,CAC5BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,aAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACLwU,YAAY,iBACZtD,MAAOkH,EACPjH,SAAW3L,GAAMkT,EAAYlT,EAAEC,OAAOyL,YAK9CxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,WAAU9M,SAAA,CAC5BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,aAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,WACLwU,YAAY,sBACZtD,MAAOyH,EACPxH,SAAW3L,GAAMoT,EAAYpT,EAAEC,OAAOyL,YAK9ChN,eAAC0H,KAAM,CAAC5L,KAAK,SAASgE,QAAQ,UAASC,SAAC,eAG5CC,eAACgK,KAAG,CAACzJ,UAAU,OAAMR,SACjBS,gBAACyJ,KAAG,CAAAlK,SAAA,CAAC,0BAETC,eAACU,QAAI,CACOC,GAAI,YAAYZ,SACnB,2BCgDd+U,OA/Gf,SAAqBjV,GAAwB,IAAvB,QAAEyI,EAAO,QAAExI,GAASD,EACtC,MAAOqU,EAAUM,GAAejS,mBAAS,KAClCoL,EAAO0B,GAAY9M,mBAAS,KAC5BkS,EAAUC,GAAenS,mBAAS,KAClCwS,EAAiBC,GAAsBzS,mBAAS,KAChD5C,EAASsV,GAAc1S,mBAAS,IAEjC/C,EAAWoJ,cAGX5L,EAAsBsM,aAAY9N,GAASA,EAAMwB,uBACjD,MAAE/B,EAAK,SAAE8B,GAAaC,EAiB5B,OAfA8H,qBAAU,KACF/H,GACAuL,EAAQgD,KAAK,OAElB,CAAChD,EAASvL,IAYTiD,eAAA,OAAAD,SACIC,eAACgK,KAAG,CAACzJ,UAAU,4BAA2BR,SACtCS,gBAACyJ,KAAG,CAACC,GAAI,GAAIE,GAAI,EAAErK,SAAA,CACfC,eAAA,MAAAD,SAAI,YACHJ,GAAWK,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAEJ,IACtC1E,GAAS+E,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAE9E,IACrCuF,gBAACmM,KAAI,CAACsD,SAhBC3O,IACnBA,EAAE4O,iBACEuE,IAAaM,EACbE,EAAW,2BAEXzV,ER6DY0V,EAAChB,EAAUvG,EAAO8G,IAAalV,UACnD,IACIC,EAAS,CAAE1D,KAAMxE,KAEjB,MAAMwU,EAAS,CACXC,QAAS,CACL,eAAgB,sBAIlB,KAAElP,SAAe4C,KAAMiO,KAAK,GAAGvO,uBACjC,CAAE,SAAY+U,EAAU,MAASvG,EAAO,SAAY8G,GACpD3I,GAGJtM,EAAS,CACL1D,KAAMvE,GACNwE,QAASc,IAGb2C,EAAS,CACL1D,KAAM3E,EACN4E,QAASc,IAGb8B,aAAaiW,QAAQ,WAAY/V,KAAKgW,UAAUhY,IAEpD,MAAO5B,GACHuE,EAAS,CACL1D,KAAMtE,GACNuE,QAASd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKuP,OAASnR,EAAMkR,SAAStP,KAAKuP,OAASnR,EAAM0E,YQ3FlFuV,CAAShB,EAAUvG,EAAO8G,KAWG1U,SAAA,CAE1BS,gBAACmM,KAAKC,MAAK,CAACC,UAAU,OAAM9M,SAAA,CACxBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,aAGZC,eAAC2M,KAAKI,QAAO,CACTyD,UAAQ,EACR1U,KAAK,OACLwU,YAAY,sBACZtD,MAAOkH,EACPjH,SAAW3L,GAAMkT,EAAYlT,EAAEC,OAAOyL,YAK9CxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,QAAO9M,SAAA,CACzBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,kBAGZC,eAAC2M,KAAKI,QAAO,CACTyD,UAAQ,EACR1U,KAAK,QACLwU,YAAY,mBACZtD,MAAOW,EACPV,SAAW3L,GAAM+N,EAAS/N,EAAEC,OAAOyL,YAK3CxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,WAAU9M,SAAA,CAC5BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,aAGZC,eAAC2M,KAAKI,QAAO,CACTyD,UAAQ,EACR1U,KAAK,WACLwU,YAAY,sBACZtD,MAAOyH,EACPxH,SAAW3L,GAAMoT,EAAYpT,EAAEC,OAAOyL,YAK9CxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,kBAAiB9M,SAAA,CACnCC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,qBAGZC,eAAC2M,KAAKI,QAAO,CACTyD,UAAQ,EACR1U,KAAK,WACLwU,YAAY,wBACZtD,MAAO+H,EACP9H,SAAW3L,GAAM0T,EAAmB1T,EAAEC,OAAOyL,YAKrDhN,eAAC0H,KAAM,CAAC5L,KAAK,SAASgE,QAAQ,UAASC,SAAC,eAG5CC,eAACgK,KAAG,CAACzJ,UAAU,OAAMR,SACjBS,gBAACyJ,KAAG,CAAAlK,SAAA,CAAC,2BAETC,eAACU,QAAI,CACOC,GAAI,SAASZ,SAChB,wBCkIdoV,OApOQA,KAEnB,IAAI7M,EAAUC,eAGd,MAAM5K,EAA8B2L,aAAY9N,GAASA,EAAMmC,+BACvD1C,MAAO8X,GAAepV,EAGxB6B,EAAWoJ,eACV6E,EAAY6B,GAAiB/M,mBAAS,KACtCR,EAAMqT,GAAW7S,mBAAS,KAC1BqL,EAAU2B,GAAehN,mBAAS,KAClCsL,EAAS2B,GAAcjN,mBAAS,KAChC8S,EAAaC,GAAkB/S,mBAAS,KACxCgT,EAAgBC,GAAqBjT,mBAAS,KAC9CkT,EAAcC,GAAmBnT,mBAAS,KAC1CoT,EAAYC,GAAiBrT,mBAAS,KACtCsT,EAAYC,GAAiBvT,mBAAS,KACtCwT,EAAQC,GAAazT,mBAAS,IAI/BzF,EAAmBwM,aAAY9N,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfN,EAAwB8M,aAAY9N,GAASA,EAAMgB,yBACnD,YAAEC,EAAW,QAAEzB,GAAYwB,EAG3BE,EAA2B4M,aAAY9N,GAASA,EAAMkB,4BACtD,QAAExB,GAAYwB,EAEpBoI,qBAAU,KACD/H,GAGDyC,EAASyR,MACTzR,EAASwO,OAHT1F,EAAQgD,KAAK,YAKlB,CAAC9L,EAAU8I,EAASvL,EAAU7B,IAE7B6B,GAA2B,wCAAfgW,IACZ1H,MAAM,wCACN7L,EAASuR,MACTzI,EAAQgD,KAAK,UACbyE,OAAO5N,SAAS6N,UAIpB,MAAMC,EAAY3O,IAEd,GADAA,EAAE4O,iBACE2F,GAAcE,EAAQ,CActBvW,GZ2EqBlD,EYxFC,CAClBiS,YAAad,EACbwI,YAAaJ,EACbK,QAASH,EACTlG,UAAWjC,EACXkC,SAAUjC,EACVsI,aAAcpU,EACdqU,aAAcf,EACdgB,gBAAiBd,EACjBe,cAAeb,EACfc,YAAaZ,GZ8EiBpW,MAAOC,EAAUqM,KAE3D,IAEIrM,EAAS,CACL1D,KAAMhF,IAGV,MACIgG,kBAAkB,SAAEC,IACpB8O,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUjP,EAASkP,WAKpC,KAAEpP,SAAe4C,KAAMiO,KACzB,yBACApR,EACAwP,GAGJtM,EAAS,CACL1D,KAAM/E,EACNgF,QAASc,IAGf,MAAO5B,GACLuE,EAAS,CACL1D,KAAM9E,EACN+E,QAASd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKuP,OAASnR,EAAMkR,SAAStP,KAAKuP,OAASnR,EAAM0E,cAlCtErD,OYzD7B,OARIpB,IACAmQ,MAAM,6BACN/C,EAAQgD,KAAK,wBACb9L,EAAS,CACL1D,KAAM7E,KAKVuJ,gBAAA,OAAAT,SAAA,CACIC,eAACgK,KAAG,CAACzJ,UAAU,4BAA2BR,SACtCS,gBAACyJ,KAAG,CAACC,GAAI,GAAIE,GAAI,EAAErK,SAAA,CACfC,eAAA,QACIO,UAAU,gCACVK,MAAO,CAAEsC,QAAS,OAAQ6E,aAAc,OAAQlH,MAAO,WAAYd,SACnEC,eAAA,MAAAD,SAAI,0BAEP/E,GAAWgF,eAACmG,KAAO,CAACC,UAAU,WAC9B3J,EAAYmK,KAAI,CAAC4P,EAAM9D,IACpB1S,eAAA,OAAAD,SACIC,eAACM,KAAI,CACDC,UAAU,WACVK,MAAO,CAAEmG,OAAQ,YAAamB,YAAa,WAAYnI,SAEvDS,gBAACmM,KAAI,CAACsD,SAAUA,EAASlQ,SAAA,CAErBS,gBAACmM,KAAKC,MAAK,CAACC,UAAU,OAAM9M,SAAA,CACxBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,iBAGZC,eAAC2M,KAAKI,QAAO,CACTqD,WAAW,EACXtU,KAAK,OACL2U,aAAc+F,EAAKL,aACnB7F,YAAY,YACZrD,SAAW3L,GAAM8T,EAAQ9T,EAAEC,OAAOyL,YAK1CxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,QAAO9M,SAAA,CACzBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,cAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACLuU,QAAQ,SACRE,UAAU,IACVE,aAAc+F,EAAK3G,UACnBS,YAAY,YACZrD,SAAW3L,GAAMiO,EAAYjO,EAAEC,OAAOyL,YAK9CxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,OAAM9M,SAAA,CACxBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,aAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACLuU,QAAQ,SACRI,aAAc+F,EAAK1G,SACnBQ,YAAY,WACZC,UAAU,IACVtD,SAAW3L,GAAMkO,EAAWlO,EAAEC,OAAOyL,YAK7CxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,OAAM9M,SAAA,CACxBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,iBAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACL2U,aAAc+F,EAAKJ,aACnB9F,YAAY,eACZrD,SAAW3L,GAAMgU,EAAehU,EAAEC,OAAOyL,YAKjDxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,UAAS9M,SAAA,CAC3BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,oBAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACL2U,aAAc+F,EAAKH,gBACnB/F,YAAY,kBACZrD,SAAW3L,GAAMkU,EAAkBlU,EAAEC,OAAOyL,YAKpDxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,QAAO9M,SAAA,CACzBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,kBAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACL2U,aAAc+F,EAAKF,cACnBhG,YAAY,gBACZrD,SAAW3L,GAAMoU,EAAgBpU,EAAEC,OAAOyL,YAKlDxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,MAAK9M,SAAA,CACvBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,gBAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACL2U,aAAc+F,EAAKD,YACnBjG,YAAY,cACZD,QAAQ,SACRE,UAAU,IACVtD,SAAW3L,GAAMsU,EAActU,EAAEC,OAAOyL,YAKhDhN,eAAC0H,KAAM,CACH5L,KAAK,SACLgE,QAAQ,UACRyD,QAASA,KAAMkT,OArIpBC,EAqI0CF,EAAKP,YArIvCU,EAqIoDH,EAAKN,QArIhDU,EAqIyDJ,EAAKjI,YApI1GuH,EAAcY,GACdV,EAAUW,QACVrH,EAAcsH,GAHYH,IAACC,EAAQC,EAASC,GAsIZhW,MAAO,CAAEI,MAAO,QAChBT,UAAU,0BAAyBR,SAAC,iBAGxCC,eAAC0H,KAAM,CACH5L,KAAK,SACLgE,QAAQ,UACRyD,QAASA,IAAM+E,EAAQgD,KAAK,yBAC5B1K,MAAO,CAAEI,MAAO,QAChBT,UAAU,+BAA8BR,SAAC,iBAtH/C2S,UA+HtB1S,eAACkC,GAAY,IAAG,QCnFb2U,OAzISA,KAEpB,IAAIvO,EAAUC,eAEd,MAAM/I,EAAWoJ,eACVsF,EAAQ4I,GAAavU,mBAAS,IAC9B6L,EAAsBQ,GAA2BrM,oBAAS,IAC1D4L,EAAkB4I,GAAuBxU,mBAAS,IAGnDzF,EAAmBwM,aAAY9N,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfa,EAA8B2L,aAAY9N,GAASA,EAAMmC,+BACvD1C,MAAO8X,GAAepV,EAGxBnB,EAAwB8M,aAAY9N,GAASA,EAAMgB,yBACnD,YAAEC,EAAW,QAAEzB,GAAYwB,EAG3BI,EAAyB0M,aAAY9N,GAASA,EAAMoB,0BACpD,QAAE1B,GAAY0B,EA+BpB,OAvBAkI,qBAAU,KACD/H,GAGDyC,EAASyR,MACTzR,EAASwO,OAHT1F,EAAQgD,KAAK,YAKlB,CAAC9L,EAAU8I,EAASvL,IAEnBA,GAA2B,wCAAfgW,IACZ1H,MAAM,wCACN7L,EAASuR,MACTzI,EAAQgD,KAAK,UACbyE,OAAO5N,SAAS6N,UAIhB9U,IACAmQ,MAAM,8BACN0E,OAAO5N,SAAS6N,UAKhBxP,gBAAA,OAAAT,SAAA,CACK/E,GAAWwF,gBAAA,QAAMI,MAAO,CAAEsC,QAAS,QAASnD,SAAA,CACzCC,eAAA,MAAAD,SAAI,6BACJC,eAAA,QAAMO,UAAU,OAAMR,SAClBC,eAACmG,KAAO,CAACC,UAAU,gBAK3BpG,eAAA,OAAAD,SACIC,eAAA2C,YAAA,CAAA5C,SACIC,eAACiO,GAAmB,CAChBC,OAAQA,EACRC,iBAAkBA,EAClBC,qBAAsBA,EACtBC,2BA3CeA,KAC/BO,GAAyBR,UA+CpB3R,EAAYf,OAAS,EAAIe,EAAYmK,KAAI,CAAC4P,EAAM9D,IAC7ClS,gBAAA,OAAAT,SAAA,CACIS,gBAAC6L,KAAS,CAAAtM,SAAA,CACNS,gBAACwJ,KAAG,CAACzJ,UAAU,+BAA8BR,SAAA,CACzCC,eAACiK,KAAG,CAACC,GAAI,EAAG3J,UAAU,yBAAwBR,SAAC,kBAC/CC,eAACiK,KAAG,CAAC1J,UAAU,MAAKR,SACfyW,EAAKL,aAAenW,eAAA,QAAAD,SAChByW,EAAKL,eAEJ,eAId3V,gBAACwJ,KAAG,CAACzJ,UAAU,0BAAyBR,SAAA,CACpCC,eAACiK,KAAG,CAACC,GAAI,EAAG3J,UAAU,yBAAwBR,SAAC,eAC/CC,eAACiK,KAAG,CAAC1J,UAAU,MAAKR,SAAEyW,EAAK3G,UAAY2G,EAAK3G,UAAY,eAE5DrP,gBAACwJ,KAAG,CAACzJ,UAAU,0BAAyBR,SAAA,CACpCC,eAACiK,KAAG,CAACC,GAAI,EAAG3J,UAAU,yBAAwBR,SAAC,cAC/CC,eAACiK,KAAG,CAAC1J,UAAU,MAAKR,SAAEyW,EAAK1G,SAAW0G,EAAK1G,SAAW,eAE1DtP,gBAACwJ,KAAG,CAACzJ,UAAU,+BAA8BR,SAAA,CACzCC,eAACiK,KAAG,CAACC,GAAI,EAAG3J,UAAU,yBAAwBR,SAAC,kBAC/CC,eAACiK,KAAG,CAAC1J,UAAU,MAAKR,SAAEyW,EAAKJ,aAAeI,EAAKJ,aAAe,eAElE5V,gBAACwJ,KAAG,CAACzJ,UAAU,0BAAyBR,SAAA,CACpCC,eAACiK,KAAG,CAACC,GAAI,EAAG3J,UAAU,yBAAwBR,SAAC,qBAC/CC,eAACiK,KAAG,CAAC1J,UAAU,MAAKR,SAAEyW,EAAKH,gBAAkBG,EAAKH,gBAAkB,eAExE7V,gBAACwJ,KAAG,CAACzJ,UAAU,0BAAyBR,SAAA,CACpCC,eAACiK,KAAG,CAACC,GAAI,EAAG3J,UAAU,yBAAwBR,SAAC,mBAC/CC,eAACiK,KAAG,CAAC1J,UAAU,MAAKR,SAAEyW,EAAKF,cAAgBE,EAAKF,cAAgB,eAEpE9V,gBAACwJ,KAAG,CAACzJ,UAAU,0BAAyBR,SAAA,CACpCC,eAACiK,KAAG,CAACC,GAAI,EAAG3J,UAAU,yBAAwBR,SAAC,iBAC/CC,eAACiK,KAAG,CAAC1J,UAAU,MAAKR,SAAEyW,EAAKD,YAAcC,EAAKD,YAAc,kBAGpE/V,gBAAA,QAAMI,MAAO,CAAEsC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,UAAWrD,SAAA,CAC7EC,eAACU,QAAI,CAACC,GAAG,uBAAsBZ,SAAC,wBAChCC,eAAA,QAAMO,UAAU,oBAAmBR,SAAC,OACpCC,eAAA,QAAMO,UAAU,SAEhBP,eAACU,QAAI,CAACC,GAAG,IACL4C,QAASA,KACLwT,EAAoBP,EAAKjI,aACzBuI,EAAUN,EAAK1Y,MACf8Q,GAAyBR,IAC3BrO,SACL,qBAhDC2S,KAoDV1S,eAAA,OAAAD,SACIC,eAACJ,GAAO,CAACE,QAAQ,OAAMC,SAAC,kCAGhCC,eAACkC,GAAY,QC9CV8U,OAxFf,WAEI,IAAI1O,EAAUC,eACd,MAAM/I,EAAWoJ,cAGXjL,EAA8B2L,aAAY9N,GAASA,EAAMmC,+BACvD1C,MAAO8X,GAAepV,EAGxBb,EAAmBwM,aAAY9N,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfe,EAAqByL,aAAY9N,GAASA,EAAMqC,sBAC9CC,KAAMmZ,EAAc,QAAEjc,GAAY6C,EAE1CiH,qBAAU,KACN,GAAK/H,EAGD,IACIyC,EAASyR,MACTzR,EAAS2R,GAAYpU,EAASuC,KAChC,MAAOrE,GACLqN,EAAQgD,KAAK,UANjBhD,EAAQgD,KAAK,YASlB,CAAChD,EAASvL,EAAUyC,IAGvB,MAAM2U,EAAgBA,KAClB3U,EAASuR,OA+Cb,OA5CIhU,GAA2B,wCAAfgW,IACZ1H,MAAM,wCACN7L,EAASuR,MACTzI,EAAQgD,KAAK,UACbyE,OAAO5N,SAAS6N,UAyChBxP,gBAAAmC,YAAA,CAAA5C,SAAA,CAtCesU,MACf,IAEI,OACI7T,gBAAA,OAAAT,SAAA,CACK/E,GAAWwF,gBAAA,QAAMI,MAAO,CAAEsC,QAAS,QAASnD,SAAA,CAACC,eAAA,MAAAD,SAAI,6BAA6BC,eAAA,QAAMO,UAAU,OAAMR,SAACC,eAACmG,KAAO,CAACC,UAAU,gBACzH5F,gBAAC6L,KAAS,CAAAtM,SAAA,CACNS,gBAACwJ,KAAG,CAACzJ,UAAU,+BAA8BR,SAAA,CACzCC,eAACiK,KAAG,CAACC,GAAI,EAAG3J,UAAU,yBAAwBR,SAAC,UAC/CC,eAACiK,KAAG,CAAC1J,UAAU,MAAKR,SAAEkX,EAAe/C,cAEzC1T,gBAACwJ,KAAG,CAACzJ,UAAU,0BAAyBR,SAAA,CACpCC,eAACiK,KAAG,CAACC,GAAI,EAAG3J,UAAU,yBAAwBR,SAAC,WAC/CC,eAACiK,KAAG,CAAC1J,UAAU,MAAKR,SAAEkX,EAAetJ,WAEzCnN,gBAACwJ,KAAG,CAACzJ,UAAU,0BAAyBR,SAAA,CACpCC,eAACiK,KAAG,CAACC,GAAI,EAAG3J,UAAU,yBAAwBR,SAAC,sBAC/CC,eAACiK,KAAG,CAAC1J,UAAU,MAAKR,SAAEkX,EAAe1K,MAAQ,MAAQ,aAG7D/L,gBAAA,QAAMI,MAAO,CAAEsC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,UAAWrD,SAAA,CAC7EC,eAACU,QAAI,CAACC,GAAI,kBAAkBZ,SAAC,2BAC7BC,eAAA,QAAMO,UAAU,oBAAmBR,SAAC,OACpCC,eAAA,QAAMO,UAAU,SAEhBP,eAACU,QAAI,CAACC,GAAI,mBAAmBZ,SAAC,yBAI5C,MAAO9E,GACL,OAAOuF,gBAACZ,GAAO,CAACE,QAAQ,SAAQC,SAAA,CAAC,oCAAiCC,eAACU,QAAI,CACnE6C,QAAS4Q,EAAexT,GAAI,SAASZ,SACxC,WAAa,cAObsU,GACDrU,eAACkC,GAAY,IAAG,QCiFbgV,OAnKf,WAEI,IAAI5O,EAAUC,eACd,MAAM/I,EAAWoJ,cAIXjL,EAA8B2L,aAAY9N,GAASA,EAAMmC,+BACvD1C,MAAO8X,GAAepV,GAEvBuW,EAAUM,GAAejS,mBAAS,KAClCoL,EAAO0B,GAAY9M,mBAAS,KAC5BkS,EAAUC,GAAenS,mBAAS,KAClCwS,EAAiBC,GAAsBzS,mBAAS,IAGjDzF,EAAmBwM,aAAY9N,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfe,EAAqByL,aAAY9N,GAASA,EAAMqC,sBAC9CC,KAAMmZ,EAAc,QAAEjc,GAAY6C,EAGpCE,EAA2BuL,aAAY9N,GAASA,EAAMuC,4BACtD,QAAE7C,GAAY6C,EAEpB+G,qBAAU,KACD/H,GACDuL,EAAQgD,KAAK,UAEjB9L,EAASyR,MACTzR,EAAS2R,GAAYpU,EAASuC,OAC/B,CAACE,EAAU8I,EAASvL,IAEnBA,GAA2B,wCAAfgW,IACZ1H,MAAM,wCACN7L,EAASuR,MACTzI,EAAQgD,KAAK,UACbyE,OAAO5N,SAAS6N,UAGpB,MAAMC,EAAY3O,IACdA,EAAE4O,iBACF,MAAMiH,EAA+B,KAAbjD,EAAkB+C,EAAe/C,SAAWA,EAC9DkD,EAAyB,KAAVzJ,EAAesJ,EAAetJ,MAAQA,EAE3D,GAAI8G,IAAaM,EACb1J,MAAM,8BACH,CAMH7L,EZuIsB6X,IAAa9X,MAAOC,EAAUqM,KAE5D,IAEIrM,EAAS,CACL1D,KAAMlE,KAGV,MACIkF,kBAAkB,SAAEC,IACpB8O,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUjP,EAASkP,WAKpC,KAAEpP,SAAe4C,KAAM6X,IACzB,GAAGnY,0BAA+BpC,EAASuC,MAC3C,CACI,SAAY+X,EAASnD,SACrB,MAASmD,EAAS1J,MAClB,SAAY0J,EAAS5C,UAEzB3I,GAGJtM,EAAS,CACL1D,KAAMjE,GACNkE,QAASc,IAGf,MAAO5B,GACLuE,EAAS,CACL1D,KAAMhE,GACNiE,QAASd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKqU,QAAUjW,EAAMkR,SAAStP,KAAKqU,QAAUjW,EAAM0E,YY7KpF4X,CALQ,CACb,SAAYJ,EACZ,MAASC,EACT,SAAY3C,OAOlBN,EAAgBA,KAClB7L,EAAQgD,KAAK,UACb9L,EAASuR,OAkGb,OA/FG7V,IACCmQ,MAAM,iCACN7L,EAAS,CACL1D,KAAM/D,KAEVuQ,EAAQgD,KAAK,aACb9L,EAAS2R,GAAYpU,EAASuC,MAGf+U,MACf,IACI,OACI7T,gBAAA,OAAAT,SAAA,CACIC,eAACgK,KAAG,CAACzJ,UAAU,4BAA2BR,SACtCS,gBAACyJ,KAAG,CAACC,GAAI,GAAIE,GAAI,EAAErK,SAAA,CACfC,eAAA,QACIO,UAAU,gCACVK,MAAO,CAAEsC,QAAS,OAAQ6E,aAAc,OAAQlH,MAAO,WAAYd,SACnEC,eAAA,MAAAD,SAAI,0BAEP/E,GAAWgF,eAACmG,KAAO,CAACC,UAAU,WAC/B5F,gBAACmM,KAAI,CAACsD,SAAUA,EAASlQ,SAAA,CAErBS,gBAACmM,KAAKC,MAAK,CAACC,UAAU,WAAU9M,SAAA,CAC5BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,aAGZC,eAAC2M,KAAKI,QAAO,CACTqD,WAAW,EACXtU,KAAK,OACL2U,aAAcwG,EAAe/C,SAC7B5D,YAAY,WACZrD,SAAW3L,GAAMkT,EAAYlT,EAAEC,OAAOyL,YAK9CxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,QAAO9M,SAAA,CACzBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,kBAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,QACLwU,YAAY,cACZG,aAAcwG,EAAetJ,MAC7BV,SAAW3L,GAAM+N,EAAS/N,EAAEC,OAAOyL,YAK3CxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,WAAU9M,SAAA,CAC5BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,mBAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,WACLwU,YAAY,qBACZrD,SAAW3L,GAAMoT,EAAYpT,EAAEC,OAAOyL,YAK9CxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,kBAAiB9M,SAAA,CACnCC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,qBAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,WACLwU,YAAY,uBACZrD,SAAW3L,GAAM0T,EAAmB1T,EAAEC,OAAOyL,YAKrDhN,eAAC0H,KAAM,CAAC5L,KAAK,SAASgE,QAAQ,UAAUS,UAAU,SAAQR,SAAC,iBAC3DC,eAACU,QAAI,CAACC,GAAI,WAAWZ,SACjBC,eAAA,UAAQO,UAAU,8BAA8BzE,KAAK,SAAQiE,SAAC,qBAO9EC,eAACkC,GAAY,OAGvB,MAAOjH,GACL,OACIuF,gBAACZ,GAAO,CAACE,QAAQ,SAAQC,SAAA,CAAC,6BACIC,eAACU,QAAI,CAAC6C,QAAS4Q,EAAexT,GAAI,SAASZ,SAAC,UAAY,eAM3FsU,IC7FImD,OApEf,WAEI,IAAIlP,EAAUC,eACd,MAAM/I,EAAWoJ,eACV6O,EAAYC,GAAiBnV,mBAAS,IAIvCzF,EAAmBwM,aAAY9N,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfkB,EAA2BsL,aAAY9N,GAASA,EAAMwC,4BACtD,QAAE9C,EAAO,QAAEF,EAAO,MAAEC,GAAU+C,EAsBpC,OAVG9C,IACCmQ,MAAM,iCACN7L,EAAS,CACL1D,KAAM3D,KAEVqH,EAASuR,MACTzI,EAAQgD,KAAK,UACbyE,OAAO5N,SAAS6N,UAIhBxP,gBAAA,OAAAT,SAAA,CACIC,eAACgK,KAAG,CAACzJ,UAAU,4BAA2BR,SACtCS,gBAACyJ,KAAG,CAACC,GAAI,GAAIE,GAAI,EAAErK,SAAA,CACfC,eAAA,MAAAD,SAAI,kDACH/E,GAAWwF,gBAAA,QAAMI,MAAS,CAAEsC,QAAS,QAASnD,SAAA,CAACC,eAAA,MAAAD,SAAI,gBAAgBC,eAAA,QAAMO,UAAY,OAAMR,SAACC,eAACmG,KAAO,CAACC,UAAU,gBAC/GnL,GAAS+E,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAC,wBACpCC,eAAA,OAAKO,UAAU,OAAMR,SACjBS,gBAACmM,KAAI,CAACsD,SA5BR3O,IACdA,EAAE4O,iBACF,MAAMmH,EAAW,CACb,GAAMta,EAASuC,GACf,SAAYmY,GAEhBjY,EAASyR,MACTzR,EbsN0B6X,IAAa9X,MAAOC,EAAUqM,KAE5D,IAEIrM,EAAS,CACL1D,KAAM9D,KAGV,MACI8E,kBAAkB,SAAEC,IACpB8O,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUjP,EAASkP,WAKpC,KAAEpP,SAAe4C,KAAMiO,KACzB,GAAGvO,0BAA+BkY,EAAS/X,MAC3C,CACI,SAAY+X,EAAS5C,UAEzB3I,GAGJtM,EAAS,CACL1D,KAAM7D,GACN8D,QAASc,IAGf,MAAO5B,GACLuE,EAAS,CACL1D,KAAM5D,GACN6D,QAASd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKqU,QAAUjW,EAAMkR,SAAStP,KAAKqU,QAAUjW,EAAM0E,Ya1PxFgY,CAAkBN,KAqBctX,SAAA,CACrBS,gBAACmM,KAAKC,MAAK,CAACC,UAAU,WAAU9M,SAAA,CAC5BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,aAGZC,eAAC2M,KAAKI,QAAO,CACTyD,UAAQ,EACR1U,KAAK,WACLwU,YAAY,sBACZtD,MAAOyK,EACPxK,SAAW3L,GAAMoW,EAAcpW,EAAEC,OAAOyL,YAKhDhN,eAAC0H,KAAM,CAAC5L,KAAK,SAASgE,QAAQ,SAAQC,SAAC,6BAKvDC,eAACkC,GAAY,IAAG,Q,UCgHb0V,OAjLgB/X,IAA8B,IAA7B,oBAAEgY,GAAqBhY,EAEnD,MAAML,EAAWoJ,eAEV7G,EAAMqT,GAAW7S,mBAAS,KAC1BuV,EAAaC,GAAkBxV,mBAAS,KACxCyV,EAASC,GAAc1V,mBAAS,KAChC2V,EAAaC,GAAkB5V,mBAAS,KACxCyP,EAAUoG,GAAe7V,mBAAS,KAClC0P,EAAMoG,GAAW9V,mBAAS,KAC1B/G,EAAO8c,GAAY/V,mBAAS,IAG7BlF,EAA2BiM,aAAY9N,GAASA,EAAM6B,4BACpDnC,QAASqd,EAAwBtd,MAAOud,GAAyBnb,EAyBzE,OATIkb,IACAlN,MAAM,iCACNwM,IACArY,EAAS,CACL1D,KAAMhD,KAEV0G,EAAS4R,OAIT5Q,gBAAA,OAAAT,SAAA,CACIC,eAAA,KAAGO,UAAU,wBAAuBR,SAACC,eAAA,MAAAD,SAAI,kBACxCyY,EACKxY,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SACtByY,IAGL,GACJxY,eAACM,KAAI,CACDC,UAAU,eACVK,MAAO,CAAEI,MAAO,MAAO+F,OAAQ,YAAamB,YAAa,WAAYnI,SAErEC,eAACM,KAAKG,KAAI,CAAAV,SACNS,gBAACmM,KAAI,CAACsD,SArCQ3O,IAC1BA,EAAE4O,iBAUF1Q,Ed0U0BiZ,IAAgBlZ,MAAOC,EAAUqM,KAE/D,IACIrM,EAAS,CACL1D,KAAMnD,KAGV,MACImE,kBAAkB,SAAEC,IACpB8O,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUjP,EAASkP,WAKpC,KAAEpP,SAAe4C,KAAMiO,KACzB,GAAGvO,6BACHsZ,EACA3M,GAGJtM,EAAS,CACL1D,KAAMlD,GACNmD,QAASc,IAGf,MAAO5B,GACLuE,EAAS,CACL1D,KAAMjD,GACNkD,QAASd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKqU,QAAUjW,EAAMkR,SAAStP,KAAKqU,QAAUjW,EAAM0E,Yc3WxF+Y,CATW,CAChB,KAAQ3W,EACR,aAAgB+V,EAChB,SAAYE,EACZ,SAAYE,EACZ,SAAYlG,EACZ,KAAQC,EACR,MAASzW,MA4BoCuE,SAAA,CAEjCS,gBAACmM,KAAKC,MAAK,CAACC,UAAU,OAAM9M,SAAA,CACxBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,SAGZC,eAAC2M,KAAKI,QAAO,CACTqD,WAAW,EACXtU,KAAK,OACLwU,YAAY,kBACZtD,MAAOjL,EACPkL,SAAW3L,GAAM8T,EAAQ9T,EAAEC,OAAOyL,YAK1CxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,cAAa9M,SAAA,CAC/BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,iBAGZS,gBAACmY,KAAU,CAAA5Y,SAAA,CACPC,eAAC2Y,KAAW3W,KAAI,CAAAjC,SAAC,QACjBC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACLwU,YAAY,eACZD,QAAQ,SACRE,UAAU,KACVvD,MAAO8K,EACP7K,SAAW3L,GAAMyW,EAAezW,EAAEC,OAAOyL,eAMrDxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,UAAS9M,SAAA,CAC3BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,aAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACLwU,YAAY,WACZtD,MAAOgL,EACP3H,QAAQ,SACRE,UAAU,IACVtD,SAAW3L,GAAM2W,EAAW3W,EAAEC,OAAOyL,YAK7CxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,cAAa9M,SAAA,CAC/BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,sBAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACLwU,YAAY,eACZtD,MAAOkL,EACPjL,SAAW3L,GAAM6W,EAAe7W,EAAEC,OAAOyL,YAKjDxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,WAAU9M,SAAA,CAC5BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,aAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACLwU,YAAY,WACZtD,MAAOgF,EACP/E,SAAW3L,GAAM8W,EAAY9W,EAAEC,OAAOyL,YAK9CxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,OAAM9M,SAAA,CACxBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,SAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACLwU,YAAY,OACZtD,MAAOiF,EACPhF,SAAW3L,GAAM+W,EAAQ/W,EAAEC,OAAOyL,YAK1CxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,QAAO9M,SAAA,CACzBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,UAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACLwU,YAAY,QACZtD,MAAOxR,EACPyR,SAAW3L,GAAMgX,EAAShX,EAAEC,OAAOyL,YAK3ChN,eAAC0H,KAAM,CACH9G,MAAO,CAAEI,MAAO,QAChBT,UAAU,SACVzE,KAAK,SACLgE,QAAQ,UAASC,SACpB,iBAGDC,eAAC0H,KAAM,CACH9G,MAAO,CAAEI,MAAO,QAChBT,UAAU,cACVT,QAAQ,UACRyD,QAASA,IAAMsU,IAAsB9X,SAAC,sBCgBnD6Y,OApLf,WAEI,IAAItQ,EAAUC,eAGd,MAAM5K,EAA8B2L,aAAY9N,GAASA,EAAMmC,+BACvD1C,MAAO8X,GAAepV,EAGxB6B,EAAWoJ,eACViQ,EAAeC,GAAoBvW,mBAAS,KAC5CwW,EAAeC,GAAoBzW,oBAAS,IAG5CuI,EAAMC,GAAWxI,oBAAS,GAC3B6I,EAAcA,IAAML,GAAQ,GAI5BjO,EAAmBwM,aAAY9N,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfK,EAA+BmM,aAAY9N,GAASA,EAAM2B,gCAC1D,UAAEC,EAAWpC,QAASie,GAAwB9b,EAG9CI,EAA2B+L,aAAY9N,GAASA,EAAM+B,4BACpDrC,QAASge,GAA2B3b,EAE5CuH,qBAAU,KACD/H,GAGDyC,EAASyR,MACTzR,EAAS4R,MACT5R,EAAS,CACL1D,KAAMpD,MALV4P,EAAQgD,KAAK,YAQlB,CAAC9L,EAAU8I,EAASvL,EAAUmc,IAG7Bnc,GAA2B,wCAAfgW,IACZ1H,MAAM,wCACN7L,EAASuR,MACTzI,EAAQgD,KAAK,UACbyE,OAAO5N,SAAS6N,UAGhBkJ,IACA7N,MAAM,iCACN7L,EAAS,CACL1D,KAAMxC,KAEVkG,EAAS4R,OAIb,MAAM+H,EAAwBjc,IAC1B4b,EAAiB5b,GA5CI6N,GAAQ,IAiD3Ba,EAAiBtM,IACnBE,EfgX0BF,IAAOC,MAAOC,EAAUqM,KACtD,IACIrM,EAAS,CACL1D,KAAM3C,KAGV,MACI2D,kBAAkB,SAAEC,IACpB8O,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUjP,EAASkP,WAKpC,KAAEpP,SAAe4C,KAAMyM,OACzB,GAAG/M,6BAAkCG,KACrCwM,GAGJtM,EAAS,CACL1D,KAAM1C,GACN2C,QAASc,IAGf,MAAO5B,GACLuE,EAAS,CACL1D,KAAMzC,GACN0C,QAASd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKqU,QAAUjW,EAAMkR,SAAStP,KAAKqU,QAAUjW,EAAM0E,Ye/YxFyZ,CAAkB9Z,IAC3B8L,KAIEyM,EAAsBA,KACxBmB,GAAkBD,IAItB,OACIvY,gBAAA,OAAAT,SAAA,CAGIC,eAAA,OAAAD,SACIC,eAAA2C,YAAA,CAAA5C,SACIS,gBAAC+K,KAAK,CAACT,KAAMA,EAAMU,OAAQJ,EAAYrL,SAAA,CACnCC,eAACuL,KAAME,OAAM,CAACC,aAAW,EAAA3L,SACrBS,gBAAC+K,KAAM9J,MAAK,CAAA1B,SAAA,CACRC,eAAA,KAAGY,MAAO,CAAEC,MAAO,WAAaN,UAAU,gCACzC,IAAI,2BAIbC,gBAAC+K,KAAM9K,KAAI,CAAAV,SAAA,CAAC,+CAEP,IAAIS,gBAAA,MAAAT,SAAA,CAAI,IAAE8Y,EAAc9G,SAAS,KAAG8G,EAAc5G,KAAK,KAAG4G,EAAcrd,MAAM,OAAM,OAEzFgF,gBAAC+K,KAAMI,OAAM,CAAA5L,SAAA,CACTC,eAAC0H,KAAM,CAAC5H,QAAQ,SAASyD,QAASA,IAAMqI,EAAciN,EAAcvZ,IAAIS,SAAC,mBAGzEC,eAAC0H,KAAM,CAAC5H,QAAQ,UAAUyD,QAAS6H,EAAYrL,SAAC,qBAY/DkZ,GAAuBzY,gBAAA,QAAMI,MAAO,CAAEsC,QAAS,QAASnD,SAAA,CACrDC,eAAA,MAAAD,SAAI,sBACJC,eAAA,QAAMO,UAAU,OAAMR,SAClBC,eAACmG,KAAO,CAACC,UAAU,gBAK1B2S,EACG/Y,eAAA,OAAAD,SACIC,eAAC4X,GAAsB,CAACC,oBAAqBA,MAGjD7X,eAAA,UACIO,UAAU,+CACVgD,QAASA,IAAMsU,IAAsB9X,SACxC,sBAKJ3C,IAAc2b,EAAgB3b,EAAUwJ,KAAI,CAAC1J,EAASwV,IACnD1S,eAAA,OAAAD,SACIS,gBAACF,KAAI,CACDC,UAAU,WAEVK,MAAO,CAAEmG,OAAQ,YAAamB,YAAa,WAAYnI,SAAA,CAIvDS,gBAAA,QAAAT,SAAA,CAAMC,eAAA,KAAAD,SAAG,WAAW7C,EAAQ6E,QAC5BvB,gBAAA,QAAAT,SAAA,CAAMC,eAAA,KAAAD,SAAG,eAAc,OAAK7C,EAAQqV,gBACpC/R,gBAAA,QAAAT,SAAA,CAAMC,eAAA,KAAAD,SAAG,cAAc7C,EAAQ6U,SAAS,UAC9B7U,EAAQ8U,SAAS,KAAG9U,EAAQ+U,KAAK,KAAG/U,EAAQ1B,MAAM,IACvD0B,EAAQgV,SAITlS,eAAA,QACIuD,QAASA,IAAM4V,EAAqBjc,GAAS6C,SAC7CC,eAAA,KACI8Q,MAAM,iBACNvQ,UAAU,oDAMlBP,eAAA,QACIuD,QAASA,IAAM+E,EAAQgD,KAAK,kBAAkBpO,EAAQoC,OAAOS,SAC7DC,eAAA,KACI8Q,MAAM,eACNvQ,UAAU,uDAzBjBrD,EAAQoC,KALXoT,KAwCV,GAGJ1S,eAACkC,GAAY,QC0BVmX,OA5MWxZ,IAAgB,IAAf,MAAEgL,GAAOhL,EAE5ByI,EAAUC,eACd,MAAM/I,EAAWoJ,eAEV7G,EAAMqT,GAAW7S,mBAAS,KAC1BuV,EAAaC,GAAkBxV,mBAAS,KACxCyV,EAASC,GAAc1V,mBAAS,KAChC2V,EAAaC,GAAkB5V,mBAAS,KACxCyP,EAAUoG,GAAe7V,mBAAS,KAClC0P,EAAMoG,GAAW9V,mBAAS,KAC1B/G,EAAO8c,GAAY/V,mBAAS,IAG7BzF,EAAmBwM,aAAY9N,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfa,EAA8B2L,aAAY9N,GAASA,EAAMmC,+BACvD1C,MAAO8X,GAAepV,EAGxBV,EAA0BqM,aAAY9N,GAASA,EAAMyB,2BACrD,QAAEC,EAASjC,MAAOqe,GAAyBrc,EAG3CK,EAA2BgM,aAAY9N,GAASA,EAAM8B,4BACpDpC,QAASqe,GAAyBjc,EAE1CwH,qBAAU,KACD/H,GAGDyC,EAASyR,MACTzR,EAAS6R,GAAiBxG,EAAMM,OAAO7L,MAHvCgJ,EAAQgD,KAAK,YAKlB,CAAC9L,EAAU8I,EAASvL,EAAU8N,IAG7B9N,GAA2B,wCAAfgW,IACZ1H,MAAM,wCACN7L,EAASuR,MACTzI,EAAQgD,KAAK,UACbyE,OAAO5N,SAAS6N,UA0BpB,OATGuJ,IACClO,MAAM,iCACN7L,EAAS,CACL1D,KAAM5C,KAEVoP,EAAQgD,KAAK,mBACb9L,EAAS4R,OAIT5Q,gBAAA,OAAAT,SAAA,CACIC,eAAA,KAAGO,UAAU,wBAAuBR,SAACC,eAAA,MAAAD,SAAI,qBACxCuZ,GAAwBtZ,eAAA,MAAAD,SAAI,4BAC7BC,eAACM,KAAI,CACDC,UAAU,eACVK,MAAO,CAAEI,MAAO,MAAO+F,OAAQ,YAAamB,YAAa,WAAYnI,SAErEC,eAACM,KAAKG,KAAI,CAAAV,SACNS,gBAACmM,KAAI,CAACsD,SAhCQ3O,IAC1BA,EAAE4O,iBACF,MAAMsJ,EAAiB,CACnB,KAAQzX,EACR,aAAgB+V,EAChB,SAAYE,EACZ,SAAYE,EACZ,SAAYlG,EACZ,KAAQC,EACR,MAASzW,GhBuVYie,IAACna,EAAImZ,EgBrV9BjZ,GhBqV0BF,EgBrVCuL,EAAMM,OAAO7L,GhBqVVmZ,EgBrVce,EhBqVEja,MAAOC,EAAUqM,KACnE,IACIrM,EAAS,CACL1D,KAAM/C,KAGV,MACI+D,kBAAkB,SAAEC,IACpB8O,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUjP,EAASkP,WAKpC,KAAEpP,SAAe4C,KAAM6X,IACzB,GAAGnY,6BAAkCG,KACrCmZ,EACA3M,GAGJtM,EAAS,CACL1D,KAAM9C,GACN+C,QAASc,IAGf,MAAO5B,GACLuE,EAAS,CACL1D,KAAM7C,GACN8C,QAASd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKqU,QAAUjW,EAAMkR,SAAStP,KAAKqU,QAAUjW,EAAM0E,egBhWhDI,SAAA,CAEjCS,gBAACmM,KAAKC,MAAK,CAACC,UAAU,OAAM9M,SAAA,CACxBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,SAGZC,eAAC2M,KAAKI,QAAO,CACTqD,WAAW,EACXtU,KAAK,OACLwU,YAAY,kBACZG,aAAcvT,EAAUA,EAAQ6E,KAAO,GACvCkL,SAAW3L,GAAM8T,EAAQ9T,EAAEC,OAAOyL,YAK1CxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,cAAa9M,SAAA,CAC/BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,iBAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACLwU,YAAY,eACZD,QAAQ,SACRE,UAAU,KACVE,aAAcvT,EAAUA,EAAQqV,aAAe,GAC/CtF,SAAW3L,GAAMyW,EAAezW,EAAEC,OAAOyL,YAKjDxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,UAAS9M,SAAA,CAC3BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,aAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACLwU,YAAY,WACZG,aAAcvT,EAAUA,EAAQgV,SAAW,GAC3C7B,QAAQ,SACRE,UAAU,IACVtD,SAAW3L,GAAM2W,EAAW3W,EAAEC,OAAOyL,YAK7CxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,cAAa9M,SAAA,CAC/BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,sBAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACLwU,YAAY,eACZG,aAAcvT,EAAUA,EAAQ6U,SAAW,GAC3C9E,SAAW3L,GAAM6W,EAAe7W,EAAEC,OAAOyL,YAKjDxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,WAAU9M,SAAA,CAC5BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,aAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACLwU,YAAY,WACZG,aAAcvT,EAAUA,EAAQ8U,SAAW,GAC3C/E,SAAW3L,GAAM8W,EAAY9W,EAAEC,OAAOyL,YAK9CxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,OAAM9M,SAAA,CACxBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,SAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACLwU,YAAY,OACZG,aAAcvT,EAAUA,EAAQ+U,KAAO,GACvChF,SAAW3L,GAAM+W,EAAQ/W,EAAEC,OAAOyL,YAK1CxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,QAAO9M,SAAA,CACzBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,UAGZC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACLwU,YAAY,QACZG,aAAcvT,EAAUA,EAAQ1B,MAAQ,GACxCyR,SAAW3L,GAAMgX,EAAShX,EAAEC,OAAOyL,YAM3ChN,eAAC0H,KAAM,CACH9G,MAAO,CAAEI,MAAO,QAChBT,UAAU,SACVzE,KAAK,SACLgE,QAAQ,UAASC,SACpB,iBAIDC,eAAC0H,KAAM,CACH9G,MAAO,CAAEI,MAAO,QAChBT,UAAU,cACVT,QAAQ,UACRyD,QAASA,IAAM+E,EAAQgD,KAAK,mBAAmBvL,SAClD,sB,UCtMlB,MAAM2Z,GAAaC,IAGtB,MAAMC,EAAYD,EAAMpU,MAAM,EAAG,IAC3BsU,EAAaF,EAAMpU,MAAM,EAAG,GAC5BuU,EAAYH,EAAMpU,MAAM,EAAG,GAEjC,OAAQsU,GACN,IAAK,KACH,MAAO,GAAGD,aAAqBE,IACjC,IAAK,KACH,MAAO,GAAGF,cAAsBE,IAClC,IAAK,KACH,MAAO,GAAGF,WAAmBE,IAC/B,IAAK,KACH,MAAO,GAAGF,WAAmBE,IAC/B,IAAK,KACH,MAAO,GAAGF,SAAiBE,IAC7B,IAAK,KACH,MAAO,GAAGF,UAAkBE,IAC9B,IAAK,KACH,MAAO,GAAGF,UAAkBE,IAC9B,IAAK,KACH,MAAO,GAAGF,YAAoBE,IAChC,IAAK,KACH,MAAO,GAAGF,eAAuBE,IACnC,IAAK,KACH,MAAO,GAAGF,aAAqBE,IACjC,IAAK,KACH,MAAO,GAAGF,cAAsBE,IAClC,IAAK,KACH,MAAO,GAAGF,cAAsBE,IAClC,QACE,OAAO,OCGAC,OAlCgBla,IAA6C,IAA5C,iBAAEma,EAAgB,iBAAEC,GAAkBpa,EAElE,MAAO2I,EAAY0R,GAAiB3X,mBAAS,IAO7C,OACIvC,eAAA,OAAAD,SACIC,eAAA,QAAMiQ,SAPI3O,IACdA,EAAE4O,iBACF8J,EAAiBxR,IAKYzI,SACrBS,gBAAA,QACII,MAAO,CAAEsC,QAAS,QAClB3C,UAAU,GAAER,SAAA,CAEZC,eAAA,SACIlE,KAAK,OACLkR,MAAOxE,EACP8H,YAAa2J,EACb1Z,UAAU,eACV0M,SAAW3L,GAAM4Y,EAAc5Y,EAAEC,OAAOyL,SAE5ChN,eAAA,UACIlE,KAAK,SACLyE,UAAU,wCAAuCR,SACpDC,eAAA,KAAGO,UAAU,4BC0JnB4Z,OA1Kf,WAEI,IAAI7R,EAAUC,eACd,MAAM/I,EAAWoJ,cAGXwR,EAAcV,IAAU,IAAInb,MAAOC,cAAc+G,MAAM,EAAG,MAEzD8U,GAAmB9X,mBAAS6X,IAC5BE,EAA0BC,GAA+BhY,mBAAS,IAClEiY,EAAiBC,GAAsBlY,mBAAS,IAGjDzF,EAAmBwM,aAAY9N,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfU,EAAsB8L,aAAY9N,GAASA,EAAMgC,uBACjD,OAAEC,EAAQzC,QAAS0f,GAAkBld,EAGrCE,EAA8B4L,aAAY9N,GAASA,EAAMkC,+BACvDxC,QAASyf,EAA6B3f,QAAS4f,GAAgCld,EAGjFC,EAA8B2L,aAAY9N,GAASA,EAAMmC,+BACvD1C,MAAO8X,GAAepV,EAE9BmH,qBAAU,KACD/H,GAGDyC,EAASyR,MACTzR,EAAS8R,OAHThJ,EAAQgD,KAAK,YAKlB,CAACvO,EAAUyC,EAAU8I,IAEpBvL,GAA2B,wCAAfgW,IACZ1H,MAAM,wCACN7L,EAASuR,MACTzI,EAAQgD,KAAK,UACbyE,OAAO5N,SAAS6N,UAGpB,MAAM6K,EAA8BA,CAACvb,EAAIwb,KACrCP,EAA4Bjb,GAK5BE,E7BgI4Bub,EAACzb,EAAIrD,IAAYsD,MAAOC,EAAUqM,KAElE,IACIrM,EAAS,CACL1D,KAAMpC,KAIV,MACIoD,kBAAkB,SAAEC,IACpB8O,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUjP,EAASkP,WAKpC,KAAEpP,SAAe4C,KAAM6X,IACzB,GAAGnY,kCAAuCG,KAC1CrD,EACA6P,GAGJtM,EAAS,CACL1D,KAAMnC,GACNoC,QAASc,IAGf,MAAO5B,GACLuE,EAAS,CACL1D,KAAMlC,GACNmC,QAASd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKuP,OAASnR,EAAMkR,SAAStP,KAAKuP,OAASnR,EAAM0E,Y6BlKtFob,CAAqBzb,EAJV,CAChB,aAAgBwb,EAChB,aAAgBA,EAAST,EAAkB,oBAkBnD,OAbIM,IACAtP,MAAM,wCACN7L,EAAS,CACL1D,KAAMjC,KAEV2F,EAAS8R,OAST9Q,gBAAA,OAAAT,SAAA,CACK2a,GAAiBla,gBAAA,QAAMI,MAAO,CAAEsC,QAAS,QAASnD,SAAA,CAC/CC,eAAA,MAAAD,SAAI,mBACJC,eAAA,QAAMO,UAAU,OAAMR,SAClBC,eAACmG,KAAO,CAACC,UAAU,gBAG1BrJ,EAASwP,OAASvM,eAAC+Z,GAAsB,CAACC,iBAbzBgB,IACtBP,EAAmBO,IAYgEf,iBAtE9D,+DAuEZxc,EAAO/B,OAAS,EACjB8E,gBAACya,KAAK,CAAC1a,UAAU,OAAO2a,SAAO,EAACC,UAAQ,EAAApb,SAAA,CACpCC,eAAA,SAAAD,SACIS,gBAAA,MAAID,UAAU,qCAAoCR,SAAA,CAC9CC,eAAA,MAAAD,SAAI,aACJC,eAAA,MAAAD,SAAI,kBACJC,eAAA,MAAAD,SAAI,cACJC,eAAA,MAAAD,SAAI,qBACJC,eAAA,MAAAD,SAAI,iBACJC,eAAA,MAAAD,SAAI,gBACJC,eAAA,MAAAD,SAAI,YACJC,eAAA,MAAAD,SAAI,iBACJC,eAAA,MAAAD,SAAI,qBACJC,eAAA,MAAAD,SAAI,iBACHhD,EAASwP,OACNvM,eAAA,MAAAD,SAAI,yBAOftC,EAAOiM,QAAQ0R,GAEZA,EAAKrZ,KAAK4G,cAAciB,SAAS4Q,IAEjCY,EAAKC,aAAa1S,cAAciB,SAAS4Q,IAEzCY,EAAKle,QAAQyL,cAAciB,SAAS4Q,KAGtC5T,KAAI,CAACzL,EAAOuX,IACV1S,eAAA,SAAAD,SACIS,gBAAA,MAAID,UAAU,cAAaR,SAAA,CACvBC,eAAA,MAAAD,SACK5E,EAAMmE,KAEXU,eAAA,MAAAD,SAAK5E,EAAM4G,OACX/B,eAAA,MAAAD,SAAK5E,EAAMoT,cACXvO,eAAA,MAAAD,SAAK5E,EAAM+B,UACX8C,eAAA,MAAAD,SAAK5E,EAAMkgB,eACXrb,eAAA,MAAAD,SAAK5E,EAAMmgB,YACPtb,eAAA,KAAGO,UAAU,qCAEbP,eAAA,KAAGO,UAAU,sCAEjBP,eAAA,MAAAD,SAAK2Z,GAAUve,EAAMogB,WACrB/a,gBAAA,MAAAT,SAAA,CAAK5E,EAAMqgB,YAAY,UACvBxb,eAAA,MAAAD,SAAK5E,EAAMsgB,aACPzb,eAAA,KAAGO,UAAU,qCAEbP,eAAA,KAAGO,UAAU,sCAEjBP,eAAA,MAAAD,SAAK5E,EAAMugB,eACV3e,EAASwP,OACNvM,eAAA,MAAAD,SACK5E,EAAMsgB,aACHzb,eAAA,UACIO,UAAU,gCACVgD,QAASA,IAAMsX,EAA4B1f,EAAMmE,IAAI,GAAOS,SAE3D6a,GAEGN,IAA6Bnf,EAAMmE,GAEnCU,eAACmG,KAAO,CAACC,UAAU,WAEnB,wBAGRpG,eAAA,UACIO,UAAU,iCACVgD,QAASA,IAAMsX,EAA4B1f,EAAMmE,IAAI,GAAMS,SAE1D6a,GAEGN,IAA6Bnf,EAAMmE,GAEnCU,eAACmG,KAAO,CAACC,UAAU,WAEnB,4BAhDhBsM,QAyDlB1S,eAACJ,GAAO,CAACE,QAAQ,OAAMC,SAAC,mBAC9BC,eAACkC,GAAY,QCpKVyZ,OAVAA,IAEP3b,eAAA,OAAKO,UAAU,mDAAmDK,MAAO,CAAEK,OAAQ,SAAUlB,SACzFC,eAACmG,KAAO,CAACC,UAAU,SAASiM,KAAK,SAAQtS,SACrCC,eAAA,QAAMO,UAAU,UAASR,SAAC,mBCwN3B6b,OApNWA,KAEtB,IAAItT,EAAUC,eACd,MAAM/I,EAAWoJ,eAEV7G,EAAMqT,GAAW7S,mBAAS,KAC1BkK,EAAaoP,GAAkBtZ,mBAAS,KACxCN,EAAO6Z,GAAYvZ,mBAAS,KAC5BmK,EAAOqP,GAAYxZ,oBAAS,IAC5BnC,EAAO4b,GAAYzZ,mBAAS,OAC5B4G,EAAU8S,GAAe1Z,mBAAS,KAClCwG,EAAYC,GAAiBzG,mBAAS,KACtCvH,EAASmJ,GAAc5B,oBAAS,GAGjCzF,EAAmBwM,aAAY9N,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfZ,EAAuBoN,aAAY9N,GAASA,EAAMU,wBAClD,QAAED,EAASf,QAASghB,EAAwBjhB,MAAOkhB,GAAyBjgB,EAG5EyB,EAA8B2L,aAAY9N,GAASA,EAAMmC,+BACvD1C,MAAO8X,GAAepV,EAE9BmH,qBAAU,KACD/H,GACDuL,EAAQgD,KAAK,UAEjB9L,EAASyR,MAGe1R,WACpB,IACI,MAAM4M,QAAiBiQ,MAAM,kDACvBvf,QAAasP,EAASkQ,OAC5BrT,EAAcnM,GAChB,MAAO5B,GACLmO,QAAQnO,MAAM,8BAA+BA,KAGrDoO,KACD,CAAC7J,EAAUzC,EAAUuL,IAkCxB,OAfI4T,IACA7Q,MAAM,iCACN/C,EAAQgD,KAAK,YAAYrP,EAAQqD,OACjCE,EAAS,CACL1D,KAAM3G,KAIV4H,GAA2B,wCAAfgW,IACZ1H,MAAM,wCACN7L,EAASuR,MACTzI,EAAQgD,KAAK,UACbyE,OAAO5N,SAAS6N,UAIhBxP,gBAAA,OAAAT,SAAA,CACK/E,GAAWgF,eAAC2b,GAAM,IAAI,IACtBQ,GACGnc,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SACY,kBAAzBoc,EACFA,EACAA,EAAqB/b,MACrB+b,EAAqB/b,MAAM,GAC3B,sBAGdJ,eAAA,QACIO,UAAU,0CAAyCR,SAEnDC,eAAA,MAAAD,SAAI,kBAERS,gBAACmM,KAAI,CAACsD,SAjDI3O,IACdA,EAAE4O,iBACF/L,GAAW,GAEX,IAAImY,EAAY,IAAIC,SACpBD,EAAUE,OAAO,OAAQza,GACzBua,EAAUE,OAAO,cAAe/P,GAChC6P,EAAUE,OAAO,QAASva,GAC1Bqa,EAAUE,OAAO,QAAS9P,GAC1B4P,EAAUE,OAAO,QAASpc,GAC1Bkc,EAAUE,OAAO,WAAYrT,GAE7BC,QAAQI,IAAI,wBAAyBiT,OAAOC,YAAYJ,EAAUK,YAElEnd,E/BEsBvD,IAAYsD,MAAOC,EAAUqM,KACvD,IACIrM,EAAS,CACL1D,KAAM9G,IAGV,MACI8H,kBAAkB,SAAEC,IACpB8O,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,sBAChBC,cAAe,UAAUjP,EAASkP,WAIpC,KAAEpP,SAAe4C,KAAMiO,KACzB,GAAGvO,yBACHlD,EACA6P,GAGJtM,EAAS,CACL1D,KAAM7G,EACN8G,QAASc,IAEf,MAAO5B,GACLmO,QAAQnO,MAAM,0BAA2BA,EAAMkR,SAAWlR,EAAMkR,SAAStP,KAAO5B,EAAM0E,SACtFH,EAAS,CACL1D,KAAM5G,EACN6G,QAASd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KACpC5B,EAAMkR,SAAStP,KACf,CAAEuP,OAAQnR,EAAM0E,a+BnCjBid,CAAcN,IAAYO,SAAQ,IAAM1Y,GAAW,MAmC/BpE,SAAA,CAErBS,gBAACmM,KAAKC,MAAK,CAACC,UAAU,OAAM9M,SAAA,CACxBC,eAAC2M,KAAKG,MAAK,CAAA/M,SACPC,eAAA,KAAAD,SAAG,mBAIPC,eAAC2M,KAAKI,QAAO,CACTyD,UAAQ,EACRJ,WAAW,EACXtU,KAAK,OACLkR,MAAOjL,EACPuO,YAAY,eACZrD,SAAW3L,GAAM8T,EAAQ9T,EAAEC,OAAOyL,YAK1CxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,cAAa9M,SAAA,CAC/BC,eAAC2M,KAAKG,MAAK,CAAA/M,SACPC,eAAA,KAAAD,SAAG,0BAIPC,eAAC2M,KAAKI,QAAO,CACTyD,UAAQ,EACR1U,KAAK,OACLkR,MAAOP,EACP6D,YAAY,sBACZrD,SAAW3L,GAAMua,EAAeva,EAAEC,OAAOyL,YAKjDxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,QAAO9M,SAAA,CACzBC,eAAC2M,KAAKG,MAAK,CAAA/M,SACPC,eAAA,KAAAD,SAAG,YAIPC,eAAC2M,KAAKI,QAAO,CACTyD,UAAQ,EACR1U,KAAK,OACLuU,QAAQ,2BACRrD,MAAO/K,EACPqO,YAAY,SACZwM,KAAK,OACLvM,UAAU,IACVtD,SAAW3L,GAAMwa,EAASxa,EAAEC,OAAOyL,YAK3CxM,gBAAA,QAAMI,MAAO,CAAEsC,QAAS,QAASnD,SAAA,CAC7BC,eAAA,SAAAD,SAAO,aACPC,eAAA,SACIlE,KAAK,WACLkR,MAAON,EACPnM,UAAU,YACV0M,SAAUA,IAAM8O,GAAUrP,QAIlClM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,QAAO9M,SAAA,CACzBC,eAAC2M,KAAKG,MAAK,CAAA/M,SACPC,eAAA,KAAAD,SAAG,oBAIPC,eAAC2M,KAAKI,QAAO,CACTyD,UAAQ,EACR1U,KAAK,OACLmR,SAAW3L,GAAM0a,EAAS1a,EAAEC,OAAOwb,MAAM,SAKjDvc,gBAACmM,KAAKC,MAAK,CAACC,UAAU,WAAU9M,SAAA,CAC5BC,eAAC2M,KAAKG,MAAK,CAAA/M,SACPC,eAAA,KAAAD,SAAG,eAEPS,gBAACmM,KAAKI,QAAO,CACTrL,GAAG,SACH8O,UAAQ,EACRxD,MAAO7D,EACP8D,SAAW3L,GAAM2a,EAAY3a,EAAEC,OAAOyL,OAAOjN,SAAA,CAE7CC,eAAA,UAAQgN,MAAM,GAAEjN,SAAC,oBAChBgJ,EAAWnC,KAAKoW,GACbhd,eAAA,UAAqBgN,MAAOgQ,EAAI1d,GAAGS,SAC9Bid,EAAIjb,MADIib,EAAI1d,YAO7BkB,gBAACkH,KAAM,CACH5L,KAAK,SACLgE,QAAQ,UACRS,UAAU,0BAAyBR,SAAA,CAElC/E,EAAUgF,eAAC2b,GAAM,IAAM,eAAe,OAE3C3b,eAAC0H,KAAM,CACH5L,KAAK,SACLgE,QAAQ,UACRS,UAAU,+BACVgD,QAASA,IAAM+E,EAAQgD,KAAK,KAAKvL,SACpC,cAILC,eAACkC,GAAY,IAAG,QCsBb+a,OArOWpd,IAAgB,IAAf,MAAEgL,GAAOhL,EAGhC,MAAM7D,EAAwBsN,aAAY9N,GAASA,EAAMQ,yBACjDhB,QAASkiB,EAAkB,QAAEjhB,GAAYD,GAW1C+F,EAAMqT,GAAW7S,mBAAS,KAC1BkK,EAAaoP,GAAkBtZ,mBAAS,KACxCN,EAAO6Z,GAAYvZ,mBAAS,KAC5BmK,EAAOqP,GAAYxZ,mBAAStG,EAAQyQ,QACpCtM,EAAO4b,GAAYzZ,mBAAS,IAEnC,IAAI+F,EAAUC,eACd,MAAM/I,EAAWoJ,eAEVuU,EAAUC,GAAe7a,oBAAS,GAGnCzF,EAAmBwM,aAAY9N,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfX,EAAuBmN,aAAY9N,GAASA,EAAMW,wBAEpDjB,QAASmiB,EACTriB,QAASsiB,EACTriB,MAAOsiB,GACPphB,EAGEwB,EAA8B2L,aAAY9N,GAASA,EAAMmC,+BACvD1C,MAAO8X,GAAepV,EAG9BmH,qBAAU,KACD/H,GAAaA,EAASwP,OACvBjE,EAAQgD,KAAK,UAEjB9L,EAASyR,MACTzR,EAASH,GAAkBwL,EAAMM,OAAO7L,OACzC,CAACE,EAAUzC,EAAUuL,EAASuC,IA+BjC,OAhBIwS,IACAhS,MAAM,iCACN7L,EAAS,CACL1D,KAAMvG,IAEV+S,EAAQgD,KAAK,YAAYrP,EAAQqD,OAIjCvC,GAA2B,wCAAfgW,IACZ1H,MAAM,wCACN7L,EAASuR,MACTzI,EAAQgD,KAAK,UACbyE,OAAO5N,SAAS6N,UAIhBxP,gBAAA,OAAAT,SAAA,CACIC,eAAA,QACIO,UAAU,0CAAyCR,SAEnDC,eAAA,MAAAD,SAAI,mBAEPwd,EACG/c,gBAAA,OAAAT,SAAA,MAhFRgQ,OAAOyN,SAAS,CACZhW,IAAK,EACLiW,SAAU,WAgFFzd,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAEwd,EAAqBnd,MAAM,QAE1D,GACH8c,GAAsB1c,gBAAA,QAAMI,MAAO,CAAEsC,QAAS,QAASnD,SAAA,CACpDC,eAAA,MAAAD,SAAI,4BACJC,eAAA,QAAMO,UAAU,OAAMR,SAClBC,eAACmG,KAAO,CAACC,UAAU,gBAG1BkX,EAA0B9c,gBAAA,QAAMI,MAAO,CAAEsC,QAAS,QAASnD,SAAA,CACxDC,eAAA,MAAAD,SAAI,qBACJC,eAAA,QAAMO,UAAU,OAAMR,SAClBC,eAACmG,KAAO,CAACC,UAAU,gBAEjB,GACV5F,gBAACmM,KAAI,CAACsD,SAtDI3O,IACdA,EAAE4O,iBACF,MAAMwN,EAAYzhB,EAAQqD,GAC1B,IAAIgd,EAAY,IAAIC,SACpBD,EAAUE,OAAO,OAAQza,GACzBua,EAAUE,OAAO,cAAe/P,GAChC6P,EAAUE,OAAO,QAASva,GAC1Bqa,EAAUE,OAAO,QAAS9P,GAC1B4P,EAAUE,OAAO,QAASpc,GAE1BZ,EhC6EqBme,EAACre,EAAIrD,IAAYsD,MAAOC,EAAUqM,KAE3D,IACIrM,EAAS,CACL1D,KAAM1G,IAIV,MACI0H,kBAAkB,SAAEC,IACpB8O,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,sBAChBC,cAAe,UAAUjP,EAASkP,WAKpC,KAAEpP,SAAe4C,KAAM6X,IACzB,GAAGnY,yBAA8BG,KACjCrD,EACA6P,GAGJtM,EAAS,CACL1D,KAAMzG,EACN0G,QAASc,IAGf,MAAO5B,GACLuE,EAAS,CACL1D,KAAMxG,EACNyG,QAASd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKuP,OAASnR,EAAMkR,SAAStP,KAAKuP,OAASnR,EAAM0E,YgC/GtFge,CAAcD,EAAWpB,KA4CLvc,SAAA,CAErBS,gBAACmM,KAAKC,MAAK,CAACC,UAAU,QAAO9M,SAAA,CACzBC,eAAC2M,KAAKG,MAAK,CAAA/M,SACPC,eAAA,KAAAD,SAAG,oBAIPC,eAAA,KAAAD,SACIC,eAAA,OAAKe,IAAK9E,EAAQmE,MAAO6G,IAAKhL,EAAQ8F,KAAMd,OAAO,UAGtDkc,EACG3c,gBAAA,OAAAT,SAAA,CACIC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACLmR,SAAW3L,GAAM0a,EAAS1a,EAAEC,OAAOwb,MAAM,MAI7C/c,eAAA,QACIuD,QAASA,KACL6Z,GAAaD,GACbnB,EAAS,IACTxc,EAAS,CACL1D,KAAMvG,KAGdgL,UAAU,8BAA6BR,SAC1C,cAKLC,eAAA,KAAAD,SACIC,eAAA,QACIuD,QAASA,IAAM6Z,GAAaD,GAC5B5c,UAAU,yBAAwBR,SACrC,gCAObS,gBAACmM,KAAKC,MAAK,CAACC,UAAU,OAAM9M,SAAA,CACxBC,eAAC2M,KAAKG,MAAK,CAAA/M,SACPC,eAAA,KAAAD,SAAG,mBAIPC,eAAC2M,KAAKI,QAAO,CACTqD,WAAW,EACXtU,KAAK,OACL2U,aAAcxU,EAAQ8F,KACtBuO,YAAY,eACZrD,SAAW3L,GAAM8T,EAAQ9T,EAAEC,OAAOyL,YAK1CxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,cAAa9M,SAAA,CAC/BC,eAAC2M,KAAKG,MAAK,CAAA/M,SACPC,eAAA,KAAAD,SAAG,0BAIPC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACL2U,aAAcxU,EAAQwQ,YACtB6D,YAAY,sBACZrD,SAAW3L,GAAMua,EAAeva,EAAEC,OAAOyL,YAKjDxM,gBAACmM,KAAKC,MAAK,CAACC,UAAU,QAAO9M,SAAA,CACzBC,eAAC2M,KAAKG,MAAK,CAAA/M,SACPC,eAAA,KAAAD,SAAG,YAIPC,eAAC2M,KAAKI,QAAO,CACTjR,KAAK,OACLuU,QAAQ,2BACRI,aAAcxU,EAAQgG,MACtBqO,YAAY,SACZwM,KAAK,OACLvM,UAAU,IACVtD,SAAW3L,GAAMwa,EAASxa,EAAEC,OAAOyL,YAK3CxM,gBAAA,QAAMI,MAAO,CAAEsC,QAAS,QAASnD,SAAA,CAC7BC,eAAA,SAAAD,SAAO,aACPC,eAAA,SACIlE,KAAK,WACL8hB,eAAgB3hB,EAAQyQ,MACxBnM,UAAU,YACV0M,SAAUA,IAAM8O,GAAUrP,QAIlC1M,eAAC0H,KAAM,CACH5L,KAAK,SACLgE,QAAQ,UACRS,UAAU,+BAA8BR,SAC3C,iBAGDC,eAAC0H,KAAM,CACHnE,QAASA,IAAM+E,EAAQgD,KAAK,YAAYrP,EAAQqD,MAChDQ,QAAQ,UACRS,UAAU,oCAAmCR,SAChD,cAILC,eAACkC,GAAY,QC5NV2b,OAXf,WACI,OACIrd,gBAAA,OAAAT,SAAA,CACIC,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAC,kBAG1BC,eAACkC,GAAY,QCMzB,MAAM/C,GAAUC,iCAsGH0e,GAAiBA,IAAMve,MAAOC,EAAUqM,KACjD,IACErM,EAAS,CAAE1D,KAAMzB,KAEjB,MAAMyR,EAAS,CACbC,QAAS,KAIL,KAAElP,SAAe4C,KAAMC,IAC3B,GAAGP,kBACH2M,GAGFtM,EAAS,CACP1D,KAAMxB,GACNyB,QAASc,IAGX,MAAO5B,GACPuE,EAAS,CACP1D,KAAMvB,GACNwB,QACEd,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKuP,OAClCnR,EAAMkR,SAAStP,KAAKuP,OACpBnR,EAAM0E,YCpDLoe,OArFf,WACE,MAAOC,EAAQC,GAAa1b,oBAAS,IAC9B2b,EAAgBC,GAAqB5b,mBAAS,GAE/C/C,EAAWoJ,cAEXwV,EAAgB9U,aAAY9N,GAASA,EAAM4iB,eAAiB,MAC5D,QAAEpjB,EAAO,UAAEoD,GAAcggB,EAGzBC,EAAWC,uBAAY,KACvBlgB,GAAaA,EAAU1C,OAAS,GAClCyiB,GAAkBI,IAAcA,EAAY,GAAKngB,EAAU1C,WAE5D,CAAC0C,IAwBJ,GAtBA0G,qBAAU,KACR,IAAI0Z,GAAY,EAEZA,GACFhf,GDsE6BD,UAC/B,IACIC,EAAS,CAAE1D,KAAMtB,KAEjB,MAAM,KAAEqC,SAAe4C,KAAMC,IAAI,GAAGP,kBAEpCK,EAAS,CACL1D,KAAMrB,GACNsB,QAASc,IAGf,MAAO5B,GACLuE,EAAS,CACL1D,KAAMpB,GACNqB,QACId,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKuP,OAChCnR,EAAMkR,SAAStP,KAAKuP,OACpBnR,EAAM0E,cCpFxB,MAAM8e,EAAeC,YAAW,KAC1BtgB,GAAaA,EAAU1C,OAAS,GAClCuiB,GAAU,KAEX,KAEGtX,EAAWgY,YAAYN,EAAU,KAEvC,MAAO,KACLG,GAAY,EACZI,aAAaH,GACbI,cAAclY,MAEf,CAACnH,EAAUpB,EAAWigB,IAErBrjB,IAAYoD,GAAkC,IAArBA,EAAU1C,OACrC,OAAO,KAGT,MAAMojB,EAAY1gB,EAAU8f,GAE5B,OACE1d,gBAAC+K,KAAK,CACJT,KAAMkT,EACNxS,OAAQA,IAAMyS,GAAU,GACxBva,KAAK,KACLqb,UAAQ,EACRC,SAAS,SAAQjf,SAAA,CAEjBC,eAACuL,KAAME,OAAM,CAACC,aAAW,EAAA3L,SACvBC,eAACuL,KAAM9J,MAAK,CAAA1B,SAAE+e,EAAU5X,aAE1B1G,gBAAC+K,KAAM9K,KAAI,CAAAV,SAAA,CACc,UAAtB+e,EAAU3Z,QACTnF,eAAA,OACEe,IAAK+d,EAAU9X,YACfC,IAAK6X,EAAU5X,SACftG,MAAO,CAAEI,MAAO,OAAQmG,UAAW,OAAQhG,UAAW,aAGxDnB,eAAA,SACE0G,UAAQ,EACR9F,MAAO,CAAEI,MAAO,OAAQmG,UAAW,QACnCE,UAAQ,EAAAtH,SAERC,eAAA,UAAQe,IAAK+d,EAAU9X,YAAalL,KAAK,gBAG7CkE,eAAA,KAAGO,UAAU,OAAMR,SAAE+e,EAAU9W,oBAEjCxH,gBAAC+K,KAAMI,OAAM,CAAA5L,SAAA,CACXC,eAAC0H,KAAM,CAAChG,GAAIhB,QAAMC,GAAI,iBAAiBme,EAAUxf,KAAMQ,QAAQ,UAASC,SAAC,cAGzEC,eAAC0H,KAAM,CAAC5H,QAAQ,YAAYyD,QAASA,IAAM0a,GAAU,GAAOle,SAAC,iB,OCStDkf,OArFf,WACE,OACEze,gBAAC6L,KAAS,CAAC9L,UAAU,sBAAqBR,SAAA,CACxCC,eAACgK,KAAG,CAACzJ,UAAU,8BAA6BR,SAC1CS,gBAACyJ,KAAG,CAACI,GAAI,EAAG9J,UAAU,cAAaR,SAAA,CACjCS,gBAAA,MAAID,UAAU,iBAAgBR,SAAA,CAC5BC,eAACkf,KAAI,CAAC3e,UAAU,sBAAsB,uBAGxCP,eAAA,KAAGO,UAAU,kBAAiBR,SAAC,uEAMnCS,gBAACwJ,KAAG,CAACzJ,UAAU,yBAAwBR,SAAA,CACrCC,eAACiK,KAAG,CAACG,GAAI,EAAGC,GAAI,EAAG9J,UAAU,OAAMR,SACjCC,eAACM,KAAI,CAACC,UAAU,wCAAuCR,SACrDS,gBAACF,KAAKG,KAAI,CAACF,UAAU,kBAAiBR,SAAA,CACpCC,eAAA,OAAKO,UAAU,2CAA0CR,SAAC,YAC1DC,eAAA,MAAIO,UAAU,OAAMR,SAAC,oBACrBS,gBAAA,MAAID,UAAU,iBAAgBR,SAAA,CAC5BC,eAAA,QAAMO,UAAU,eAAcR,SAAC,YAAc,UAE/CS,gBAAA,MAAID,UAAU,qBAAoBR,SAAA,CAChCS,gBAAA,MAAID,UAAU,OAAMR,SAAA,CAACC,eAACmf,KAAa,CAAC5e,UAAU,sBAAsB,wBACpEC,gBAAA,MAAID,UAAU,OAAMR,SAAA,CAACC,eAACmf,KAAa,CAAC5e,UAAU,sBAAsB,wBACpEC,gBAAA,MAAID,UAAU,OAAMR,SAAA,CAACC,eAACmf,KAAa,CAAC5e,UAAU,sBAAsB,2BAEtEC,gBAACkH,KAAM,CACLhG,GAAIhB,QACJC,GAAG,iBACHb,QAAQ,UACR4D,KAAK,KACLnD,UAAU,aAAYR,SAAA,CACvB,eACaC,eAACof,KAAY,CAAC7e,UAAU,mBAM5CP,eAACiK,KAAG,CAACG,GAAI,EAAGC,GAAI,EAAG9J,UAAU,OAAMR,SACjCC,eAACM,KAAI,CAACC,UAAU,wCAAuCR,SACrDS,gBAACF,KAAKG,KAAI,CAACF,UAAU,kBAAiBR,SAAA,CACpCC,eAAA,MAAIO,UAAU,OAAMR,SAAC,oBACrBS,gBAAA,MAAID,UAAU,iBAAgBR,SAAA,CAC5BC,eAAA,QAAMO,UAAU,eAAcR,SAAC,aAAe,YAEhDS,gBAAA,MAAID,UAAU,qBAAoBR,SAAA,CAChCS,gBAAA,MAAID,UAAU,OAAMR,SAAA,CAACC,eAACmf,KAAa,CAAC5e,UAAU,sBAAsB,uBACpEC,gBAAA,MAAID,UAAU,OAAMR,SAAA,CAACC,eAACmf,KAAa,CAAC5e,UAAU,sBAAsB,uBACpEC,gBAAA,MAAID,UAAU,OAAMR,SAAA,CAACC,eAACmf,KAAa,CAAC5e,UAAU,sBAAsB,wBACpEC,gBAAA,MAAID,UAAU,OAAMR,SAAA,CAACC,eAACmf,KAAa,CAAC5e,UAAU,sBAAsB,qBAEtEC,gBAACkH,KAAM,CACLhG,GAAIhB,QACJC,GAAG,iBACHb,QAAQ,kBACR4D,KAAK,KACLnD,UAAU,aAAYR,SAAA,CACvB,eACaC,eAACof,KAAY,CAAC7e,UAAU,sBAO9CP,eAACgK,KAAG,CAACzJ,UAAU,8BAA6BR,SAC1CC,eAACiK,KAAG,CAACI,GAAI,EAAG9J,UAAU,cAAaR,SACjCS,gBAAA,OAAKD,UAAU,uBAAsBR,SAAA,CACnCC,eAAA,MAAIO,UAAU,OAAMR,SAAC,oBACrBS,gBAAA,KAAGD,UAAU,OAAMR,SAAA,CAAC,mCACcC,eAAA,KAAGqf,KAAK,yBAAwBtf,SAAC,oBAAmB,WAC5EC,eAAA,KAAGqf,KAAK,oBAAmBtf,SAAC,+BAK5CC,eAACkC,GAAY,IAAG,QCvFP,OAA0B,wCCqP1Bod,OA5Of,WACE,MAAOvd,EAAMqT,GAAW7S,mBAAS,KAC1BoL,EAAO0B,GAAY9M,mBAAS,KAC5Bgd,EAAOC,GAAYjd,mBAAS,KAC5Bkd,EAASC,GAAcnd,mBAAS,KAChCod,EAAeC,GAAoBrd,mBAAS,KAC5Csd,EAAQC,GAAavd,mBAAS,UAC9Bwd,EAAQC,GAAazd,mBAAS,OAC9B0d,EAAcC,GAAmB3d,mBAAS,OAC1C4d,EAAWC,GAAgB7d,oBAAS,IACpC8d,EAAeC,GAAoB/d,mBAAS,cAE7C/C,EAAWoJ,cACXN,EAAUC,gBAGV,SAAExL,GAAauM,aAAY9N,GAASA,EAAMsB,oBAC1C,QACJ9B,GAAU,EAAK,MACfC,EAAQ,KAAI,QACZC,GAAU,GACRoO,aAAY9N,GAASA,EAAM+kB,qBAAuB,KAsCtD,OAnCAzb,qBAAU,KACH/H,GACHuL,EAAQgD,KAAK,YAEd,CAACvO,EAAUuL,IAGdxD,qBAAU,IACD,KACLtF,EAAS,CAAE1D,KAAM7B,OAElB,CAACuF,IAwBAtE,GACFsE,EAAS,CAAE1D,KAAM7B,KACjBqO,EAAQgD,KAAK,KACN,MAGJvO,EAWHyD,gBAAAmC,YAAA,CAAA5C,SAAA,CACEC,eAACqM,KAAS,CAAAtM,SACRC,eAACgK,KAAG,CAACzJ,UAAU,4BAA2BR,SACxCS,gBAACyJ,KAAG,CAACC,GAAI,GAAIE,GAAI,EAAErK,SAAA,CACjBC,eAAA,MAAIO,UAAU,OAAMR,SAAC,mBACpB9E,GAAS+E,eAACC,KAAK,CAACH,QAAQ,SAAQC,SAAE9E,IAEnCuF,gBAACmM,KAAI,CAACsD,SA9CO3O,IAGrB,GAFAA,EAAE4O,kBAEGnT,EACH,OAGF,MAAMyjB,EAAW,IAAIjE,SACrBiE,EAAShE,OAAO,OAAQza,GACxBye,EAAShE,OAAO,QAAS7O,GACzB6S,EAAShE,OAAO,eAAgB+C,GAChCiB,EAAShE,OAAO,WAAYiD,GAC5Be,EAAShE,OAAO,iBAAkBmD,GAClCa,EAAShE,OAAO,UAAWqD,GAC3BW,EAAShE,OAAO,iBAAkB6D,GAClCG,EAAShE,OAAO,gBAAiB,IACjCgE,EAAShE,OAAO,UAAWuD,GAC3BS,EAAShE,OAAO,gBAAiByD,GAEjCzgB,EJ/CqBghB,IAAajhB,MAAOC,EAAUqM,KACnD,IACIrM,EAAS,CAAE1D,KAAMhC,KACjBsP,QAAQI,IAAI,kCAEZ,MAAM,iBAAE1M,GAAqB+O,KACvB,SAAE9O,GAAaD,EAErB,IAAKC,EACD,MAAM,IAAI0jB,MAAM,gCAGpB,MAAM3U,EAAS,CACXC,QAAS,CACL,eAAgB,sBAChBC,cAAe,UAAUjP,EAASkP,OAASlP,EAAS2jB,UAExDC,iBAAiB,IAGf,KAAE9jB,SAAe4C,KAAMiO,KACzB,GAAGvO,iBACHqhB,EACA1U,GAGJ1C,QAAQI,IAAI,4BAA6B3M,GAEzC2C,EAAS,CACL1D,KAAM/B,GACNgC,QAASc,IAGf,MAAO5B,GACLmO,QAAQnO,MAAM,wBAAyBA,EAAMkR,UAAYlR,EAAM0E,SAE/DH,EAAS,CACL1D,KAAM9B,GACN+B,QACId,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKuP,OAChCnR,EAAMkR,SAAStP,KAAKuP,OACpBnR,EAAM0E,YIMfihB,CAASJ,KA2BoBzgB,SAAA,CAC5BS,gBAACmM,KAAKC,MAAK,CAACC,UAAU,OAAM9M,SAAA,CAC1BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,SACZC,eAAC2M,KAAKI,QAAO,CACXjR,KAAK,OACLwU,YAAY,kBACZtD,MAAOjL,EACPkL,SAAW3L,GAAM8T,EAAQ9T,EAAEC,OAAOyL,OAClCwD,UAAQ,OAIZhQ,gBAACmM,KAAKC,MAAK,CAACC,UAAU,QAAO9M,SAAA,CAC3BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,kBACZC,eAAC2M,KAAKI,QAAO,CACXjR,KAAK,QACLwU,YAAY,cACZtD,MAAOW,EACPV,SAAW3L,GAAM+N,EAAS/N,EAAEC,OAAOyL,OACnCwD,UAAQ,OAIZhQ,gBAACmM,KAAKC,MAAK,CAACC,UAAU,QAAO9M,SAAA,CAC3BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,iBACZC,eAAC2M,KAAKI,QAAO,CACXjR,KAAK,OACLwU,YAAY,qBACZtD,MAAOuS,EACPtS,SAAW3L,GAAMke,EAASle,EAAEC,OAAOyL,OACnCwD,UAAQ,OAIZhQ,gBAACmM,KAAKC,MAAK,CAACC,UAAU,UAAS9M,SAAA,CAC7BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,aACZC,eAAC2M,KAAKI,QAAO,CACXjR,KAAK,OACLwU,YAAY,iBACZtD,MAAOyS,EACPxS,SAAW3L,GAAMoe,EAAWpe,EAAEC,OAAOyL,OACrCwD,UAAQ,OAIZhQ,gBAACmM,KAAKC,MAAK,CAACC,UAAU,gBAAe9M,SAAA,CACnCC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,mBACZC,eAAC2M,KAAKI,QAAO,CACXrL,GAAG,WACHmf,KAAM,EACNvQ,YAAY,uBACZtD,MAAO2S,EACP1S,SAAW3L,GAAMse,EAAiBte,EAAEC,OAAOyL,OAC3CwD,UAAQ,OAIZhQ,gBAACmM,KAAKC,MAAK,CAACC,UAAU,SAAQ9M,SAAA,CAC5BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,YACZS,gBAACmM,KAAKI,QAAO,CACXrL,GAAG,SACHsL,MAAO6S,EACP5S,SAAW3L,GAAMwe,EAAUxe,EAAEC,OAAOyL,OAAOjN,SAAA,CAE3CC,eAAA,UAAQgN,MAAM,QAAOjN,SAAC,UACtBC,eAAA,UAAQgN,MAAM,QAAOjN,SAAC,gBAI1BS,gBAACmM,KAAKC,MAAK,CAACC,UAAU,SAAQ9M,SAAA,CAC5BC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,mBACZC,eAAC2M,KAAKmU,KAAI,CACR7T,SAAW3L,GAAM0e,EAAU1e,EAAEC,OAAOwb,MAAM,IAC1CgE,OAAmB,UAAXlB,EAAqB,UAAY,UACzCrP,UAAQ,OAIZhQ,gBAACmM,KAAKC,MAAK,CAACC,UAAU,sBAAqB9M,SAAA,CACzCC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,yBACZC,eAAA,OAAKO,UAAU,cAAaR,SAC1BC,eAAA,OACEe,IAAKigB,GACL/Z,IAAI,uBACJ1G,UAAU,mBAKhBC,gBAACmM,KAAKC,MAAK,CAACC,UAAU,gBAAe9M,SAAA,CACnCC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,mBACZS,gBAACmM,KAAKI,QAAO,CACXrL,GAAG,SACHsL,MAAOqT,EACPpT,SAAW3L,GAAMgf,EAAiBhf,EAAEC,OAAOyL,OAAOjN,SAAA,CAElDC,eAAA,UAAQgN,MAAM,aAAYjN,SAAC,eAC3BC,eAAA,UAAQgN,MAAM,QAAOjN,SAAC,aAEL,eAAlBsgB,GACCrgB,eAAA,SAAOO,UAAU,aAAYR,SAAC,2DAMlCS,gBAACmM,KAAKC,MAAK,CAACC,UAAU,eAAc9M,SAAA,CAClCC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,+BACZC,eAAC2M,KAAKmU,KAAI,CACR7T,SAAW3L,GAAM4e,EAAgB5e,EAAEC,OAAOwb,MAAM,IAChDgE,OAAO,UACPvQ,UAAQ,OAIZxQ,eAAC2M,KAAKC,MAAK,CAACC,UAAU,YAAW9M,SAC/BC,eAAC2M,KAAKsU,MAAK,CACTnlB,KAAK,WACLolB,MAAM,4EACNC,QAAShB,EACTlT,SAAW3L,GAAM8e,EAAa9e,EAAEC,OAAO4f,SACvC3Q,UAAQ,MAIZxQ,eAAC0H,KAAM,CACL5H,QAAQ,UACRhE,KAAK,SACLsW,SAAUpX,IAAYmlB,EACtB5f,UAAU,OAAMR,SAEf/E,EACCwF,gBAAAmC,YAAA,CAAA5C,SAAA,CACEC,eAACmG,KAAO,CACNzE,GAAG,OACH0E,UAAU,SACV1C,KAAK,KACL2O,KAAK,SACLC,cAAY,SAEb,oBAED,wBAMdtS,eAACkC,GAAY,OApKblC,eAACqM,KAAS,CAAC9L,UAAU,mBAAkBR,SACrCC,eAACmG,KAAO,CAACC,UAAU,SAASiM,KAAK,SAAQtS,SACvCC,eAAA,QAAMO,UAAU,UAASR,SAAC,iCCuBrBqhB,OA9Ff,SAAuBvhB,GAAe,IAAd,QAAEyI,GAASzI,EACjC,MAAML,EAAWoJ,cAEXyY,EAAY/X,aAAY9N,GAASA,EAAM6lB,aACvC,SAAEtkB,GAAaskB,EAEfC,EAAiBhY,aAAY9N,GAASA,EAAM8lB,kBAC5C,QAAEtmB,EAAO,MAAEC,EAAK,WAAEoD,GAAeijB,EAEjCnjB,EAAamL,aAAY9N,GAASA,EAAM2C,cACtCjD,QAASqmB,GAAmBpjB,EAEpC2G,qBAAU,KACR,IAAI0Z,GAAY,EAehB,OAbIA,IACGzhB,GAAaA,EAASiX,SACzB1L,EAAQgD,KAAK,UAGf9L,EAASse,MAELyD,IACF/hB,EAAS,CAAE1D,K/C6Gc,sB+C5GzB0D,EAASse,QAIN,KACLU,GAAY,KAEb,CAAChf,EAAU8I,EAASvL,EAAUwkB,IAEjC,MAAMC,EAAkBliB,IAClByQ,OAAO0R,QAAQ,8CACjBjiB,ELsBoBF,IAAOC,MAAOC,EAAUqM,KAC9C,IACIrM,EAAS,CAAE1D,KAAM5B,KAEjB,MAAM4R,EAAS,CACXC,QAAS,CACL,eAAgB,sBAIlB,KAAElP,SAAe4C,KAAM6X,IACzB,GAAGnY,kBAAuBG,KAC1B,GACAwM,GAGJtM,EAAS,CACL1D,KAAM3B,GACN4B,QAASc,IAGf,MAAO5B,GACLuE,EAAS,CACL1D,KAAM1B,GACN2B,QACId,EAAMkR,UAAYlR,EAAMkR,SAAStP,KAAKuP,OAChCnR,EAAMkR,SAAStP,KAAKuP,OACpBnR,EAAM0E,YKjDb+hB,CAAUpiB,KAIvB,OACEkB,gBAAC6L,KAAS,CAAAtM,SAAA,CACRC,eAACgK,KAAG,CAACzJ,UAAU,qBAAoBR,SACjCC,eAACiK,KAAG,CAAAlK,SACFC,eAAA,MAAIO,UAAU,OAAMR,SAAC,iCAIxB/E,EACCgF,eAACmG,KAAO,CAACC,UAAU,SAASiM,KAAK,SAAQtS,SACvCC,eAAA,QAAMO,UAAU,UAASR,SAAC,iBAE1B9E,EACF+E,eAACC,KAAK,CAACH,QAAQ,SAAQC,SAAE9E,IAEzBuF,gBAACya,KAAK,CAACC,SAAO,EAACC,UAAQ,EAACwG,OAAK,EAACC,YAAU,EAACrhB,UAAU,WAAUR,SAAA,CAC3DC,eAAA,SAAAD,SACES,gBAAA,MAAAT,SAAA,CACEC,eAAA,MAAAD,SAAI,OACJC,eAAA,MAAAD,SAAI,aACJC,eAAA,MAAAD,SAAI,eACJC,eAAA,MAAAD,SAAI,UACJC,eAAA,MAAAD,SAAI,UACJC,eAAA,MAAAD,SAAI,cACJC,eAAA,cAGJA,eAAA,SAAAD,SACG1B,EAAWuI,KAAI1I,GACdsC,gBAAA,MAAAT,SAAA,CACEC,eAAA,MAAAD,SAAK7B,EAAGoB,KACRU,eAAA,MAAAD,SAAK7B,EAAGgJ,WACRlH,eAAA,MAAAD,SAAK7B,EAAG6D,OACR/B,eAAA,MAAAD,SAAIC,eAAA,KAAGqf,KAAM,UAAUnhB,EAAGyP,QAAQ5N,SAAE7B,EAAGyP,UACvC3N,eAAA,MAAAD,SAAIC,eAAA,KAAGqf,KAAM,OAAOnhB,EAAGqU,eAAexS,SAAE7B,EAAGqU,iBAC3CvS,eAAA,MAAAD,SAAK,IAAIxB,KAAKL,EAAG2jB,YAAYC,uBAC7B9hB,eAAA,MAAAD,SACEC,eAAC0H,KAAM,CACL5H,QAAQ,UACRS,UAAU,SACVgD,QAASA,IAAMie,EAAetjB,EAAGoB,IAAIS,SACtC,gBAZI7B,EAAGoB,WAqBpBU,eAACkC,GAAY,Q,iBCwBJ6f,OAlHf,WAOE,OACEvhB,gBAAC6L,KAAS,CAAC9L,UAAU,iBAAgBR,SAAA,CACnCC,eAACgK,KAAG,CAACzJ,UAAU,OAAMR,SACnBS,gBAACyJ,KAAG,CAACI,GAAI,EAAG9J,UAAU,sBAAqBR,SAAA,CACzCC,eAAA,MAAIO,UAAU,iBAAgBR,SAAC,gBAC/BC,eAAA,KAAGO,UAAU,kBAAiBR,SAAC,6DAMnCS,gBAACwJ,KAAG,CAACzJ,UAAU,OAAMR,SAAA,CACnBC,eAACiK,KAAG,CAACI,GAAI,EAAG9J,UAAU,OAAMR,SAC1BC,eAACM,KAAI,CAACC,UAAU,2BAA0BR,SACxCS,gBAACF,KAAKG,KAAI,CAACF,UAAU,MAAKR,SAAA,CACxBC,eAAA,OAAKO,UAAU,qCAAoCR,SACjDC,eAACgiB,KAAO,CAACzhB,UAAU,eAAemD,KAAM,OAE1C1D,eAAA,MAAIO,UAAU,OAAMR,SAAC,oBACrBC,eAACiiB,KAAS,CAACniB,QAAQ,QAAOC,SAzBrB,CACf,CAAEmiB,OAAQ,gBAAiBpmB,KAAM,SACjC,CAAEomB,OAAQ,gBAAiBpmB,KAAM,YACjC,CAAEomB,OAAQ,gBAAiBpmB,KAAM,UAuBX8K,KAAI,CAACub,EAASjd,IACtBlF,eAACiiB,KAAUpb,KAAI,CAAatG,UAAU,gBAAeR,SACnDS,gBAAA,OAAKD,UAAU,4BAA2BR,SAAA,CACtB,aAAjBoiB,EAAQrmB,KACPkE,eAACoiB,KAAU,CAAC7hB,UAAU,oBAAoBmD,KAAM,KAEhD1D,eAACgiB,KAAO,CAACzhB,UAAU,oBAAoBmD,KAAM,KAE/ClD,gBAAA,OAAAT,SAAA,CACEC,eAAA,MAAIO,UAAU,OAAMR,SAAEoiB,EAAQD,SAC9BliB,eAAA,SAAOO,UAAU,aAAYR,SACT,aAAjBoiB,EAAQrmB,KAAsB,qBAAuB,eAG1DkE,eAAC0H,KAAM,CACL5H,QAAQ,OACRuf,KAAM,OAAO8C,EAAQD,SACrB3hB,UAAU,UAASR,SACpB,iBAjBgBmF,cA4B/BlF,eAACiK,KAAG,CAACI,GAAI,EAAG9J,UAAU,OAAMR,SAC1BC,eAACM,KAAI,CAACC,UAAU,2BAA0BR,SACxCS,gBAACF,KAAKG,KAAI,CAACF,UAAU,MAAKR,SAAA,CACxBC,eAAA,OAAKO,UAAU,qCAAoCR,SACjDC,eAACqiB,KAAU,CAAC9hB,UAAU,eAAemD,KAAM,OAE7C1D,eAAA,MAAIO,UAAU,OAAMR,SAAC,sBACrBS,gBAAA,OAAKD,UAAU,OAAMR,SAAA,CACnBS,gBAAA,MAAID,UAAU,4BAA2BR,SAAA,CACvCC,eAACgiB,KAAO,CAACzhB,UAAU,oBAAoBmD,KAAM,KAC7C1D,eAAA,QAAAD,SAAM,qBAERC,eAAA,KAAGO,UAAU,aAAYR,SAAC,2DAI5BS,gBAAA,OAAAT,SAAA,CACES,gBAAA,MAAID,UAAU,iCAAgCR,SAAA,CAC5CC,eAACqiB,KAAU,CAAC9hB,UAAU,oBAAoBmD,KAAM,KAChD1D,eAAA,QAAAD,SAAM,2BAERC,eAAC0H,KAAM,CACL5H,QAAQ,UACRuf,KAAK,6BACL9e,UAAU,QAAOR,SAClB,+BASXC,eAACgK,KAAG,CAAAjK,SACFC,eAACiK,KAAG,CAACI,GAAI,EAAG9J,UAAU,UAASR,SAC7BC,eAACM,KAAI,CAACC,UAAU,qBAAoBR,SAClCC,eAACM,KAAKG,KAAI,CAACF,UAAU,MAAKR,SACxBS,gBAAA,OAAKD,UAAU,4BAA2BR,SAAA,CACxCC,eAAA,OAAKO,UAAU,qCAAoCR,SACjDC,eAACsiB,KAAO,CAAC/hB,UAAU,eAAemD,KAAM,OAE1ClD,gBAAA,OAAAT,SAAA,CACEC,eAAA,MAAIO,UAAU,OAAMR,SAAC,oBACrBS,gBAAA,KAAGD,UAAU,OAAMR,SAAA,CAACC,eAAA,UAAAD,SAAQ,qBAAyB,wBACrDS,gBAAA,KAAGD,UAAU,OAAMR,SAAA,CAACC,eAAA,UAAAD,SAAQ,cAAkB,wBAC9CS,gBAAA,KAAGD,UAAU,OAAMR,SAAA,CAACC,eAAA,UAAAD,SAAQ,YAAgB,uCAOxDC,eAACkC,GAAY,IAAG,Q,OCtBPqgB,OAtFf,WACE,OACE/hB,gBAAC6L,KAAS,CAAC9L,UAAU,kBAAiBR,SAAA,CACpCC,eAACgK,KAAG,CAACzJ,UAAU,OAAMR,SACnBS,gBAACyJ,KAAG,CAACI,GAAI,EAAG9J,UAAU,sBAAqBR,SAAA,CACzCC,eAAA,MAAIO,UAAU,iBAAgBR,SAAC,mBAC/BC,eAAA,KAAGO,UAAU,kBAAiBR,SAAC,0EAMnCS,gBAACwJ,KAAG,CAACzJ,UAAU,0BAAyBR,SAAA,CACtCC,eAACiK,KAAG,CAACI,GAAI,EAAG9J,UAAU,eAAcR,SAClCC,eAAA,OAAKO,UAAU,gDAA+CR,SAC5DC,eAAA,OACEe,IAAKyhB,GACLvb,IAAI,gBACJ1G,UAAU,kBAIhBC,gBAACyJ,KAAG,CAACI,GAAI,EAAEtK,SAAA,CACTC,eAAA,MAAIO,UAAU,OAAMR,SAAC,cACrBC,eAAA,KAAGO,UAAU,OAAMR,SAAC,wQAKpBS,gBAAA,OAAKD,UAAU,iCAAgCR,SAAA,CAC7CC,eAACyiB,KAAa,CAACliB,UAAU,oBAAoBmD,KAAM,KACnDlD,gBAAA,OAAAT,SAAA,CACEC,eAAA,MAAIO,UAAU,OAAMR,SAAC,mBACrBC,eAAA,KAAGO,UAAU,kBAAiBR,SAAC,wCAGnCS,gBAAA,OAAKD,UAAU,iCAAgCR,SAAA,CAC7CC,eAAC0iB,KAAU,CAACniB,UAAU,oBAAoBmD,KAAM,KAChDlD,gBAAA,OAAAT,SAAA,CACEC,eAAA,MAAIO,UAAU,OAAMR,SAAC,mBACrBC,eAAA,KAAGO,UAAU,kBAAiBR,SAAC,4CAGnCS,gBAAA,OAAKD,UAAU,4BAA2BR,SAAA,CACxCC,eAAC2iB,KAAS,CAACpiB,UAAU,oBAAoBmD,KAAM,KAC/ClD,gBAAA,OAAAT,SAAA,CACEC,eAAA,MAAIO,UAAU,OAAMR,SAAC,iBACrBC,eAAA,KAAGO,UAAU,kBAAiBR,SAAC,0CAMvCC,eAACgK,KAAG,CAACzJ,UAAU,OAAMR,SACnBC,eAACiK,KAAG,CAAC1J,UAAU,cAAaR,SAC1BC,eAACM,KAAI,CAACC,UAAU,0BAAyBR,SACvCS,gBAACF,KAAKG,KAAI,CAAAV,SAAA,CACRC,eAAA,MAAIO,UAAU,OAAMR,SAAC,qBACrBC,eAACgK,KAAG,CAACzJ,UAAU,yBAAwBR,SACrCC,eAACiK,KAAG,CAACG,GAAI,EAAG7J,UAAU,OAAMR,SAC1BS,gBAAA,OAAKD,UAAU,cAAaR,SAAA,CAC1BC,eAAA,MAAAD,SAAI,8BACJC,eAAA,KAAGO,UAAU,aAAYR,SAAC,4BASxCC,eAACgK,KAAG,CAAAjK,SACFC,eAACiK,KAAG,CAAC1J,UAAU,cAAaR,SAC1BS,gBAAA,OAAKD,UAAU,eAAcR,SAAA,CAC3BC,eAAA,MAAIO,UAAU,OAAMR,SAAC,oBACrBS,gBAAA,KAAG6e,KAAK,6CAA6C9e,UAAU,+BAA8BR,SAAA,CAC3FC,eAAA,KAAGO,UAAU,qBAAuB,mCAK5CP,eAACkC,GAAY,IAAG,QCsIP0gB,OAvNf,WACIxZ,QAAQI,IAAI,6BAEZ,MAAOgX,EAAUqC,GAAetgB,mBAAS,CACrCR,KAAM,GACN+gB,OAAQ,GACRC,SAAU,GACVC,KAAM,GACNC,OAAQ,MAELC,EAAaC,GAAkB5gB,oBAAS,GAE/C6G,QAAQI,IAAI,oBAAqBgX,GAEjC,MAAMre,EAAWC,eACXkG,EAAUC,eACV/I,EAAWoJ,eACX,SAAE7L,EAAQ,QAAE/B,GAAYsO,aAAY9N,GAASA,EAAMsB,kBAAoB,KAG7EsM,QAAQI,IAAI,aAAczM,GAE1B,MAAMoO,EAAS,IAAIiY,gBAAgBjhB,EAASsG,QAEtC4a,EAAclY,EAAOzL,IAAI,SAAW,UACpC4jB,EAAenY,EAAOzL,IAAI,UAAY,IACtC6jB,EAAepY,EAAOzL,IAAI,aAAe,mBACzC8jB,EAAerY,EAAOzL,IAAI,aAAe,YAE/C0J,QAAQI,IAAI,4BAA6B,CAAE6Z,cAAaC,eAAcC,eAAcC,iBAEpF,MA+EMC,EAAgBniB,IAClB,MAAM,GAAEhC,EAAE,MAAE0N,GAAU1L,EAAEC,OACxB6H,QAAQI,IAAI,kBAAkBlK,aAAc0N,KAC5C6V,GAAYhd,IAAI,IAAUA,EAAM,CAACvG,GAAK0N,OAG1C,OACIxM,gBAAC6L,KAAS,CAAC9L,UAAU,OAAMR,SAAA,CACvBS,gBAAA,OAAKD,UAAU,UAAUK,MAAO,CAAE8iB,SAAU,SAAU3jB,SAAA,CAClDC,eAAA,MAAIO,UAAU,mBAAkBR,SAAC,wBACjCS,gBAAA,KAAAT,SAAA,CAAGC,eAAA,UAAAD,SAAQ,aAAiB,IAAEsjB,KAC9B7iB,gBAAA,KAAAT,SAAA,CAAGC,eAAA,UAAAD,SAAQ,WAAe,QAAMujB,KAChC9iB,gBAAA,KAAAT,SAAA,CAAGC,eAAA,UAAAD,SAAQ,cAAkB,IAAEwjB,KAC9BL,GACGljB,eAACC,KAAK,CAACH,QAAQ,UAAUS,UAAU,cAAaR,SAAC,+BAKrDS,gBAACmM,KAAI,CAACsD,SAlGI3O,IAKlB,GAJAA,EAAE4O,iBACF9G,QAAQI,IAAI,gCAAiCgX,IAGxCxlB,KAAa+B,IAAaA,EAASuC,IAGpC,OAFA8J,QAAQI,IAAI,wDACZlB,EAAQgD,KAAK,6BAA6BnJ,EAASsG,UAKvD,MAAMuC,EAAWG,EAAOzL,IAAI,QAAU,EAChCge,EAAYvS,EAAOzL,IAAI,WAE7B0J,QAAQI,IAAI,iBAAkB,CAAEwB,WAAU0S,cAE1C,MAAMiG,EACF,0IAGgBN,4CACElT,OAAOmT,GAAc7Y,0DACtBO,0FAGJwV,EAASze,kGAGNye,EAASsC,sDACPtC,EAASuC,8CACdvC,EAASwC,4CACPxC,EAASyC,6NAStBW,EAAkBvW,mBAAmBsW,GAE3Cva,QAAQI,IAAI,2BAA4Bma,GACxCva,QAAQI,IAAI,4BAA6Boa,GAGzC,MAAMC,EAAcL,EACd,GAAGA,UAAqBI,IACxB,mCAAmCA,IAEzCxa,QAAQI,IAAI,gBAAiBqa,GAE7B,IAEI9T,OAAO+T,KAAKD,EAAa,UACzBza,QAAQI,IAAI,iCACd,MAAOvO,GACLmO,QAAQnO,MAAM,2BAA4BA,GAG9C,IAEIuE,GC5FuBukB,ED4FK,IACrBvD,EACH1iB,KAAMf,EAASuC,GACfrD,QAASyhB,EACT1S,SAAUA,EACVgZ,iBAAkBJ,GCjGerkB,MAAOC,EAAUqM,KAC9D,IACIrM,EAAS,CAAE1D,KAAMnB,KAEjB,MAAQmC,kBAAkB,SAAEC,IAAe8O,IAE3C,IAAK9O,IAAaA,EAASkP,MACvB,MAAM,IAAIwU,MAAM,2BAGpB,MAAM3U,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUjP,EAASkP,WAKpC,KAAEnO,KAASmmB,GAAyBF,EAEpCG,EAAoB,IACnBD,EACHE,YAAY,IAAI5lB,MAAOC,cACvBsc,OAAQ,WAGZ1R,QAAQI,IAAI,oBAAqB0a,GAEjC,MAAM,KAAErnB,SAAe4C,KAAMiO,KACzB,qDACAwW,EACApY,GAQJ,OALAtM,EAAS,CACL1D,KAAMlB,GACNmB,QAASc,IAGNA,EACT,MAAO5B,GAAQ,IAADmpB,EAAAC,EAAAC,EAAAC,EAAAC,EACZpb,QAAQnO,MAAM,yBAA0B,CACpC0E,QAAS1E,EAAM0E,QACfwM,SAAwB,QAAhBiY,EAAEnpB,EAAMkR,gBAAQ,IAAAiY,OAAA,EAAdA,EAAgBvnB,OAG9B,MAAM4nB,GAA6B,QAAdJ,EAAAppB,EAAMkR,gBAAQ,IAAAkY,GAAM,QAANC,EAAdD,EAAgBxnB,YAAI,IAAAynB,OAAN,EAAdA,EAAsBrpB,SACzB,QAD8BspB,EAC5CtpB,EAAMkR,gBAAQ,IAAAoY,GAAM,QAANC,EAAdD,EAAgB1nB,YAAI,IAAA2nB,OAAN,EAAdA,EAAsBpY,SACtBnR,EAAM0E,SACN,yBAOJ,MALAH,EAAS,CACL1D,KAAMjB,GACNkB,QAAS0oB,IAGPxpB,MD2CFmO,QAAQI,IAAI,0CACd,MAAOvO,GACLmO,QAAQnO,MAAM,oCAAqCA,GCrG5B8oB,MDwG3BZ,GAAe,GACf/Z,QAAQI,IAAI,oCAsB0BjJ,UAAU,0CAAyCR,SAAA,CAC7ES,gBAACmM,KAAKC,MAAK,CAACrM,UAAU,OAAMR,SAAA,CACxBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,cACZC,eAAC2M,KAAKI,QAAO,CACTzN,GAAG,OACHxD,KAAK,OACLkR,MAAOwT,EAASze,KAChBkL,SAAUwW,EACVjT,UAAQ,EACRF,YAAY,gBAIpBtQ,eAAA,MAAIO,UAAU,YAAWR,SAAC,qBAE1BS,gBAAA,OAAKD,UAAU,UAASR,SAAA,CACpBC,eAAA,OAAKO,UAAU,WAAUR,SACrBS,gBAACmM,KAAKC,MAAK,CAACrM,UAAU,OAAMR,SAAA,CACxBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,WACZC,eAAC2M,KAAKI,QAAO,CACTzN,GAAG,SACHxD,KAAK,OACLkR,MAAOwT,EAASsC,OAChB7V,SAAUwW,EACVjT,UAAQ,EACRF,YAAY,uBAIxBtQ,eAAA,OAAKO,UAAU,WAAUR,SACrBS,gBAACmM,KAAKC,MAAK,CAACrM,UAAU,OAAMR,SAAA,CACxBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,aACZC,eAAC2M,KAAKI,QAAO,CACTzN,GAAG,WACHxD,KAAK,OACLkR,MAAOwT,EAASuC,SAChB9V,SAAUwW,EACVjT,UAAQ,EACRF,YAAY,eAIxBtQ,eAAA,OAAKO,UAAU,WAAUR,SACrBS,gBAACmM,KAAKC,MAAK,CAACrM,UAAU,OAAMR,SAAA,CACxBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,SACZC,eAAC2M,KAAKI,QAAO,CACTzN,GAAG,OACHxD,KAAK,OACLkR,MAAOwT,EAASwC,KAChB/V,SAAUwW,EACVjT,UAAQ,EACRF,YAAY,kBAIxBtQ,eAAA,OAAKO,UAAU,WAAUR,SACrBS,gBAACmM,KAAKC,MAAK,CAACrM,UAAU,OAAMR,SAAA,CACxBC,eAAC2M,KAAKG,MAAK,CAAA/M,SAAC,iBACZC,eAAC2M,KAAKI,QAAO,CACTzN,GAAG,SACHxD,KAAK,OACLkR,MAAOwT,EAASyC,OAChBhW,SAAUwW,EACVjT,UAAQ,EACRF,YAAY,kCAM5B9P,gBAACkH,KAAM,CACH5H,QAAQ,UACRhE,KAAK,SACL4H,KAAK,KACLnD,UAAU,kBAAiBR,SAAA,CAE3BC,eAAA,KAAGO,UAAU,yBAA2B,mCAKpDP,eAACkC,GAAY,IAAG,QEhLbwiB,OArCf,WAEI,IAAIpc,EAAUC,eACd,MAAOC,EAAY0R,GAAiB3X,mBAAS,IAS7C,OACIvC,eAAA,OAAAD,SACIC,eAAA,QAAMiQ,SATI3O,IACdA,EAAE4O,iBACC1H,GACCF,EAAQgD,KAAK,gBAAgB9C,MAMJzI,SACrBS,gBAAA,QACII,MAAO,CAAEsC,QAAS,QAClB3C,UAAU,GAAER,SAAA,CAEZC,eAAA,SACIlE,KAAK,OACLkR,MAAOxE,EACP8H,YAAY,kBACZ/P,UAAU,eACV0M,SAAW3L,GAAM4Y,EAAc5Y,EAAEC,OAAOyL,SAE5ChN,eAAA,UACIlE,KAAK,SACLyE,UAAU,wCAAuCR,SACpDC,eAAA,KAAGO,UAAU,4BChBnBokB,OAbf,WACI,OACI3kB,eAAA,OAAKO,UAAU,iBAAgBR,SAC3BC,eAAA,OAAKO,UAAU,6BAA4BR,SACvCS,gBAAA,OAAKD,UAAU,WAAUR,SAAA,CACrBC,eAAA,MAAIO,UAAU,OAAMR,SAAC,oBACrBC,eAAC0kB,GAAoB,YCiE1BE,OA3CHA,IAGR5kB,eAAA,OAAAD,SACES,gBAACqkB,iBAAM,CAAA9kB,SAAA,CACLC,eAACmT,GAAM,IACPnT,eAAC+d,GAAY,IACb/d,eAAA,OAAKO,UAAU,iBAAgBR,SAC7BS,gBAACskB,KAAM,CAAA/kB,SAAA,CACLC,eAAC+kB,KAAK,CAACC,KAAK,IAAIC,UAAWC,GAAiBC,OAAK,IACjDnlB,eAAC+kB,KAAK,CAACC,KAAK,gBAAgBC,UAAWrJ,GAAmBuJ,OAAK,IAC/DnlB,eAAC+kB,KAAK,CAACC,KAAK,gBAAgBC,UAAWva,GAAoBya,OAAK,IAChEnlB,eAAC+kB,KAAK,CAACC,KAAK,uBAAuBC,UAAWhI,GAAmBkI,OAAK,IACtEnlB,eAAC+kB,KAAK,CAACC,KAAK,yBAAyBC,UAAWrS,GAAcuS,OAAK,IACnEnlB,eAAC+kB,KAAK,CAACC,KAAK,kBAAkBC,UAAW7Q,GAAe+Q,OAAK,IAC7DnlB,eAAC+kB,KAAK,CAACC,KAAK,SAASC,UAAWG,GAAOD,OAAK,IAC5CnlB,eAAC+kB,KAAK,CAACC,KAAK,YAAYC,UAAWI,GAAUF,OAAK,IAClDnlB,eAAC+kB,KAAK,CAACC,KAAK,WAAWC,UAAWjO,GAAamO,OAAK,IACpDnlB,eAAC+kB,KAAK,CAACC,KAAK,mBAAmBC,UAAW/N,GAAmBiO,OAAK,IAClEnlB,eAAC+kB,KAAK,CAACC,KAAK,mBAAmBC,UAAWK,GAAuBH,OAAK,IACtEnlB,eAAC+kB,KAAK,CAACC,KAAK,uBAAuBC,UAAWpO,GAAiBsO,OAAK,IACpEnlB,eAAC+kB,KAAK,CAACC,KAAK,sBAAsBC,UAAW9P,GAAgBgQ,OAAK,IAClEnlB,eAAC+kB,KAAK,CAACC,KAAK,kBAAkBC,UAAWrM,GAAwBuM,OAAK,IACtEnlB,eAAC+kB,KAAK,CAACC,KAAK,sBAAsBC,UAAW5L,GAAmB8L,OAAK,IACrEnlB,eAAC+kB,KAAK,CAACC,KAAK,eAAeC,UAAW9K,GAAgBgL,OAAK,IAE3DnlB,eAAC+kB,KAAK,CAACC,KAAK,aAAaC,UAAWhG,GAAekG,OAAK,IACxDnlB,eAAC+kB,KAAK,CAACC,KAAK,iBAAiBC,UAAW3F,GAAkB6F,OAAK,IAC/DnlB,eAAC+kB,KAAK,CAACC,KAAK,eAAeC,UAAW7D,GAAgB+D,OAAK,IAC3DnlB,eAAC+kB,KAAK,CAACC,KAAK,QAAQC,UAAWlD,GAAUoD,OAAK,IAC9CnlB,eAAC+kB,KAAK,CAACC,KAAK,SAASC,UAAW1C,GAAW4C,OAAK,IAChDnlB,eAAC+kB,KAAK,CAACC,KAAK,aAAaC,UAAWrC,GAAcuC,OAAK,IAEvDnlB,eAAC+kB,KAAK,CAACC,KAAK,UAAUC,UAAWN,GAAYQ,OAAK,IAElDnlB,eAAC+kB,KAAK,CAACC,KAAK,GAAGC,UAAWM,GAAUJ,OAAK,c,OC5DrDK,IAASC,OACPzlB,eAAC0lB,IAAQ,CAAC3mB,MAASA,GAAMgB,SACvBC,eAAC4kB,GAAG,MAENe,SAASC,eAAe,W","file":"static/js/main.984f9728.chunk.js","sourcesContent":["// products list\nexport const PRODUCTS_LIST_REQUEST = \"PRODUCTS_LIST_REQUEST\" \nexport const PRODUCTS_LIST_SUCCESS = \"PRODUCTS_LIST_SUCCESS\"\nexport const PRODUCTS_LIST_FAIL = \"PRODUCTS_LIST_FAIL\"\n\n// product details\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\" \nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\"\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\"\n\n// create product\nexport const CREATE_PRODUCT_REQUEST = \"CREATE_PRODUCT_REQUEST\" \nexport const CREATE_PRODUCT_SUCCESS = \"CREATE_PRODUCT_SUCCESS\" \nexport const CREATE_PRODUCT_FAIL = \"CREATE_PRODUCT_FAIL\" \nexport const CREATE_PRODUCT_RESET = \"CREATE_PRODUCT_RESET\" \n\n// update product\nexport const UPDATE_PRODUCT_REQUEST = \"UPDATE_PRODUCT_REQUEST\" \nexport const UPDATE_PRODUCT_SUCCESS = \"UPDATE_PRODUCT_SUCCESS\" \nexport const UPDATE_PRODUCT_FAIL = \"UPDATE_PRODUCT_FAIL\" \nexport const UPDATE_PRODUCT_RESET = \"UPDATE_PRODUCT_RESET\" \n\n// delete product\nexport const DELETE_PRODUCT_REQUEST = \"DELETE_PRODUCT_REQUEST\" \nexport const DELETE_PRODUCT_SUCCESS = \"DELETE_PRODUCT_SUCCESS\" \nexport const DELETE_PRODUCT_FAIL = \"DELETE_PRODUCT_FAIL\" \nexport const DELETE_PRODUCT_RESET = \"DELETE_PRODUCT_RESET\" \n\n// check token validation\nexport const CHECK_TOKEN_VALID_REQUEST = \"CHECK_TOKEN_VALID_REQUEST\"\nexport const CHECK_TOKEN_VALID_SUCCESS = \"CHECK_TOKEN_VALID_SUCCESS\"\nexport const CHECK_TOKEN_VALID_FAIL = \"CHECK_TOKEN_VALID_FAIL\"\nexport const CHECK_TOKEN_VALID_RESET = \"CHECK_TOKEN_VALID_RESET\"\n\n// create card\nexport const CARD_CREATE_REQUEST = \"CARD_CREATE_REQUEST\" \nexport const CARD_CREATE_SUCCESS = \"CARD_CREATE_SUCCESS\"\nexport const CARD_CREATE_FAIL = \"CARD_CREATE_FAIL\"\nexport const CARD_CREATE_RESET = \"CARD_CREATE_RESET\"\n\n// charge card\nexport const CHARGE_CARD_REQUEST = \"CHARGE_CARD_REQUEST\" \nexport const CHARGE_CARD_SUCCESS = \"CHARGE_CARD_SUCCESS\"\nexport const CHARGE_CARD_FAIL = \"CHARGE_CARD_FAIL\"\nexport const CHARGE_CARD_RESET = \"CHARGE_CARD_RESET\"\n\n// saved cards list\nexport const SAVED_CARDS_LIST_REQUEST = \"SAVED_CARDS_LIST_REQUEST\"\nexport const SAVED_CARDS_LIST_SUCCESS = \"SAVED_CARDS_LIST_SUCCESS\"\nexport const SAVED_CARDS_LIST_FAIL = \"SAVED_CARDS_LIST_FAIL\"\n\n// delete saved card\nexport const DELETE_SAVED_CARD_REQUEST = \"DELETE_SAVED_CARD_REQUEST\"\nexport const DELETE_SAVED_CARD_SUCCESS = \"DELETE_SAVED_CARD_SUCCESS\"\nexport const DELETE_SAVED_CARD_FAIL = \"DELETE_SAVED_CARD_FAIL\"\n\n// update saved card\nexport const UPDATE_STRIPE_CARD_REQUEST = \"UPDATE_STRIPE_CARD_REQUEST\"\nexport const UPDATE_STRIPE_CARD_SUCCESS = \"UPDATE_STRIPE_CARD_SUCCESS\"\nexport const UPDATE_STRIPE_CARD_FAIL = \"UPDATE_STRIPE_CARD_FAIL\"\nexport const UPDATE_STRIPE_CARD_RESET = \"UPDATE_STRIPE_CARD_RESET\"\n\n// user login/logout\nexport const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\nexport const USER_LOGOUT = \"USER_LOGOUT\"\n\n// user registration/signup\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\"\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\"\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\"\n\n// user info/details\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\"\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\"\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\"\n\n// user update details\nexport const UPDATE_USER_DETAILS_REQUEST = \"UPDATE_USER_DETAILS_REQUEST\"\nexport const UPDATE_USER_DETAILS_SUCCESS = \"UPDATE_USER_DETAILS_SUCCESS\"\nexport const UPDATE_USER_DETAILS_FAIL = \"UPDATE_USER_DETAILS_FAIL\"\nexport const UPDATE_USER_DETAILS_RESET = \"UPDATE_USER_DETAILS_RESET\"\n\n// delete user account\nexport const DELETE_USER_ACCOUNT_REQUEST = \"DELETE_USER_ACCOUNT_REQUEST\" \nexport const DELETE_USER_ACCOUNT_SUCCESS = \"DELETE_USER_ACCOUNT_SUCCESS\" \nexport const DELETE_USER_ACCOUNT_FAIL = \"DELETE_USER_ACCOUNT_FAIL\" \nexport const DELETE_USER_ACCOUNT_RESET = \"DELETE_USER_ACCOUNT_RESET\" \n\n// user all address\nexport const GET_USER_ALL_ADDRESSES_REQUEST = \"GET_USER_ALL_ADDRESSES_REQUEST\"\nexport const GET_USER_ALL_ADDRESSES_SUCCESS = \"GET_USER_ALL_ADDRESSES_SUCCESS\"\nexport const GET_USER_ALL_ADDRESSES_FAIL = \"GET_USER_ALL_ADDRESSES_FAIL\"\n\n// user single address details\nexport const GET_SINGLE_ADDRESS_REQUEST = \"GET_SINGLE_ADDRESS_REQUEST\"\nexport const GET_SINGLE_ADDRESS_SUCCESS = \"GET_SINGLE_ADDRESS_SUCCESS\"\nexport const GET_SINGLE_ADDRESS_FAIL = \"GET_SINGLE_ADDRESS_FAIL\"\nexport const GET_SINGLE_ADDRESS_RESET = \"GET_SINGLE_ADDRESS_RESET\"\n\n// create address\nexport const CREATE_USER_ADDRESS_REQUEST = \"CREATE_USER_ADDRESS_REQUEST\"\nexport const CREATE_USER_ADDRESS_SUCCESS = \"CREATE_USER_ADDRESS_SUCCESS\"\nexport const CREATE_USER_ADDRESS_FAIL = \"CREATE_USER_ADDRESS_FAIL\"\nexport const CREATE_USER_ADDRESS_RESET = \"CREATE_USER_ADDRESS_RESET\"\n\n// update address\nexport const UPDATE_USER_ADDRESS_REQUEST = \"UPDATE_USER_ADDRESS_REQUEST\"\nexport const UPDATE_USER_ADDRESS_SUCCESS = \"UPDATE_USER_ADDRESS_SUCCESS\"\nexport const UPDATE_USER_ADDRESS_FAIL = \"UPDATE_USER_ADDRESS_FAIL\"\nexport const UPDATE_USER_ADDRESS_RESET = \"UPDATE_USER_ADDRESS_RESET\"\n\n// delete user address\nexport const DELETE_USER_ADDRESS_REQUEST = \"DELETE_USER_ADDRESS_REQUEST\"\nexport const DELETE_USER_ADDRESS_SUCCESS = \"DELETE_USER_ADDRESS_SUCCESS\"\nexport const DELETE_USER_ADDRESS_FAIL = \"DELETE_USER_ADDRESS_FAIL\"\nexport const DELETE_USER_ADDRESS_RESET = \"DELETE_USER_ADDRESS_RESET\"\n\n// all orders list\nexport const GET_ALL_ORDERS_REQUEST = \"GET_ALL_ORDERS_REQUEST\"\nexport const GET_ALL_ORDERS_SUCCESS = \"GET_ALL_ORDERS_SUCCESS\"\nexport const GET_ALL_ORDERS_FAIL = \"GET_ALL_ORDERS_FAIL\"\n\n// change order delivery status\nexport const CHANGE_DELIVERY_STATUS_REQUEST = \"CHANGE_DELIVERY_STATUS_REQUEST\"\nexport const CHANGE_DELIVERY_STATUS_SUCCESS = \"CHANGE_DELIVERY_STATUS_SUCCESS\"\nexport const CHANGE_DELIVERY_STATUS_FAIL = \"CHANGE_DELIVERY_STATUS_FAIL\"\nexport const CHANGE_DELIVERY_STATUS_RESET = \"CHANGE_DELIVERY_STATUS_RESET\"\n\n// Ads\nexport const AD_SUBMISSION_REQUEST = \"AD_SUBMISSION_REQUEST\"\nexport const AD_SUBMISSION_SUCCESS = \"AD_SUBMISSION_SUCCESS\"\nexport const AD_SUBMISSION_FAIL = \"AD_SUBMISSION_FAIL\"\nexport const AD_SUBMISSION_RESET = \"AD_SUBMISSION_RESET\"\n\nexport const AD_APPROVAL_REQUEST = \"AD_APPROVAL_REQUEST\"\nexport const AD_APPROVAL_SUCCESS = \"AD_APPROVAL_SUCCESS\"\nexport const AD_APPROVAL_FAIL = \"AD_APPROVAL_FAIL\"\nexport const AD_APPROVAL_RESET = \"AD_APPROVAL_RESET\"\n\n// Pending Ads List\nexport const PENDING_ADS_REQUEST = \"PENDING_ADS_REQUEST\"\nexport const PENDING_ADS_SUCCESS = \"PENDING_ADS_SUCCESS\"\nexport const PENDING_ADS_FAIL = \"PENDING_ADS_FAIL\"\n\n// Active Ads\nexport const ACTIVE_ADS_REQUEST = \"ACTIVE_ADS_REQUEST\"\nexport const ACTIVE_ADS_SUCCESS = \"ACTIVE_ADS_SUCCESS\"\nexport const ACTIVE_ADS_FAIL = \"ACTIVE_ADS_FAIL\"\n\n// Orders\nexport const ORDER_REQUEST_REQUEST = \"ORDER_REQUEST_REQUEST\"\nexport const ORDER_REQUEST_SUCCESS = \"ORDER_REQUEST_SUCCESS\"\nexport const ORDER_REQUEST_FAIL = \"ORDER_REQUEST_FAIL\"\nexport const ORDER_REQUEST_RESET = \"ORDER_REQUEST_RESET\"","import {\n    ORDER_REQUEST_REQUEST,\n    ORDER_REQUEST_SUCCESS,\n    ORDER_REQUEST_FAIL,\n    ORDER_REQUEST_RESET\n} from '../constants'\n\nconst initialState = {\n    loading: false,\n    error: null,\n    success: false,\n    order: null,\n    lastSubmitted: null\n}\n\nexport const orderRequestReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ORDER_REQUEST_REQUEST:\n            return { \n                ...state,\n                loading: true,\n                error: null,\n                success: false\n            }\n            \n        case ORDER_REQUEST_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                order: action.payload,\n                lastSubmitted: new Date().toISOString(),\n                error: null\n            }\n            \n        case ORDER_REQUEST_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload,\n                success: false\n            }\n            \n        case ORDER_REQUEST_RESET:\n            return initialState\n            \n        default:\n            return state\n    }\n}","import { combineReducers } from \"redux\";\nimport {\n    productsListReducer,\n    productDetailsReducer,\n    createProductReducer,\n    updateProductReducer,\n    deleteProductReducer,\n    changeDeliveryStatusReducer,\n} from \"./productReducers\";\n\nimport {\n    createCardReducer,\n    chargeCardReducer,\n    savedCardsListReducer,\n    deleteSavedCardReducer,\n    updateStripeCardtReducer\n} from \"./cardReducers\";\n\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userDetailsUpdateReducer,\n    deleteUserAccountReducer,\n    checkTokenValidationReducer,\n    getSingleAddressReducer,\n    getAllAddressesOfUserReducer,\n    createUserAddressReducer,\n    updateUserAddressReducer,\n    deleteUserAddressReducer,\n    getAllOrdersReducer,\n} from \"./userReducers\";\n\n// Import the new ad reducers\nimport {\n    adSubmissionReducer,\n    adApprovalReducer,\n    activeAdsListReducer,\n    pendingAdsListReducer\n} from \"./adReducers\";\n\nimport { orderRequestReducer } from './orderReducers'\n\nconst allReducers = combineReducers({\n    productsListReducer,\n    productDetailsReducer,\n    createProductReducer,\n    updateProductReducer,\n    deleteProductReducer,\n    createCardReducer,\n    chargeCardReducer,\n    savedCardsListReducer,\n    updateStripeCardtReducer,\n    deleteSavedCardReducer,\n    userLoginReducer,\n    userRegisterReducer,    \n    getSingleAddressReducer,\n    getAllAddressesOfUserReducer,\n    createUserAddressReducer,\n    updateUserAddressReducer,\n    deleteUserAddressReducer,\n    getAllOrdersReducer,\n    changeDeliveryStatusReducer,\n    checkTokenValidationReducer,\n    userDetailsReducer,\n    userDetailsUpdateReducer,\n    deleteUserAccountReducer,\n    \n    // Add the new ad reducers\n    adSubmission: adSubmissionReducer, // Changed from adSubmissionReducer\n    adApproval: adApprovalReducer,\n    activeAds: activeAdsListReducer,\n    pendingAds: pendingAdsListReducer,\n\n    orderRequest: orderRequestReducer,\n})\n\nexport default allReducers;","import {\n    PRODUCTS_LIST_REQUEST,\n    PRODUCTS_LIST_SUCCESS,\n    PRODUCTS_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    CREATE_PRODUCT_REQUEST,\n    CREATE_PRODUCT_SUCCESS,\n    CREATE_PRODUCT_FAIL,\n    CREATE_PRODUCT_RESET,\n\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_RESET, \n\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    DELETE_PRODUCT_RESET,\n\n    CHANGE_DELIVERY_STATUS_REQUEST,\n    CHANGE_DELIVERY_STATUS_SUCCESS,\n    CHANGE_DELIVERY_STATUS_FAIL,\n    CHANGE_DELIVERY_STATUS_RESET,\n\n\n} from '../constants/index'\n\n\n// products list\nexport const productsListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCTS_LIST_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                products: [],   // always pass the object during the request\n                error: \"\"\n            }\n        case PRODUCTS_LIST_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                products: action.payload,\n                error: \"\"\n            }\n        case PRODUCTS_LIST_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n\n// product details\nexport const productDetailsReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                product: {},        // always pass the object during the request\n                error: \"\"\n            }\n        case PRODUCT_DETAILS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                product: action.payload,\n                error: \"\"\n            }\n        case PRODUCT_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// create product reducer\nexport const createProductReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case CREATE_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                product: {},\n                success: false,\n                error: \"\"\n            }\n        case CREATE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                product: action.payload,\n                error: \"\"\n            }\n        case CREATE_PRODUCT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                product: {},\n                error: action.payload\n            }\n        case CREATE_PRODUCT_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                product: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// update product reducer\nexport const updateProductReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case UPDATE_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                product: {},\n                success: false,\n                error: \"\"\n            }\n        case UPDATE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                product: action.payload,\n                error: \"\"\n            }\n        case UPDATE_PRODUCT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                product: {},\n                error: action.payload\n            }\n        case UPDATE_PRODUCT_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                product: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n\n// delete product reducer\nexport const deleteProductReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DELETE_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case DELETE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case DELETE_PRODUCT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case DELETE_PRODUCT_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// change order delivery status reducer\nexport const changeDeliveryStatusReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CHANGE_DELIVERY_STATUS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case CHANGE_DELIVERY_STATUS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case CHANGE_DELIVERY_STATUS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case CHANGE_DELIVERY_STATUS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}","import {\n    CARD_CREATE_REQUEST,\n    CARD_CREATE_SUCCESS,\n    CARD_CREATE_FAIL,\n    CARD_CREATE_RESET,\n\n    CHARGE_CARD_REQUEST,\n    CHARGE_CARD_SUCCESS,\n    CHARGE_CARD_FAIL,\n    CHARGE_CARD_RESET,\n\n    SAVED_CARDS_LIST_REQUEST,\n    SAVED_CARDS_LIST_SUCCESS,\n    SAVED_CARDS_LIST_FAIL,\n\n    UPDATE_STRIPE_CARD_REQUEST,\n    UPDATE_STRIPE_CARD_SUCCESS,\n    UPDATE_STRIPE_CARD_FAIL,\n    UPDATE_STRIPE_CARD_RESET,\n\n    DELETE_SAVED_CARD_REQUEST,\n    DELETE_SAVED_CARD_SUCCESS,\n    DELETE_SAVED_CARD_FAIL,\n\n} from '../constants/index'\n\n\n// create card reducer\nexport const createCardReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CARD_CREATE_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                cardData: {},\n                success: false,\n                error: \"\"\n            }\n        case CARD_CREATE_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                cardData: action.payload,\n                error: \"\"\n            }\n        case CARD_CREATE_FAIL:\n            return {\n                ...state,\n                loading: false,\n                cardData: {},\n                success: false,\n                error: action.payload\n            }\n        case CARD_CREATE_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                cardData: {},\n                error: \"\",\n            }\n        default:\n            return state\n    }\n}\n\n// charge card reducer\nexport const chargeCardReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CHARGE_CARD_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case CHARGE_CARD_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case CHARGE_CARD_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case CHARGE_CARD_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// saved cards list reducer\nexport const savedCardsListReducer = (state = {stripeCards: []}, action) => {\n    switch (action.type) {\n        case SAVED_CARDS_LIST_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case SAVED_CARDS_LIST_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                stripeCards: action.payload,\n                error: \"\"\n            }\n        case SAVED_CARDS_LIST_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// update stripe card reducer\nexport const updateStripeCardtReducer = (state = {}, action) => {\n    switch (action.type) {\n        case UPDATE_STRIPE_CARD_REQUEST:\n            return {\n                loading: true,\n                success: false,\n                stripeCard: {},\n                error: \"\",\n            }\n        case UPDATE_STRIPE_CARD_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                stripeCard: action.payload,\n                error: \"\",\n            }\n        case UPDATE_STRIPE_CARD_FAIL:\n            return {\n                loading: false,\n                success: false,\n                stripeCard: {},\n                error: action.payload\n            }\n        case UPDATE_STRIPE_CARD_RESET:\n            return {\n                loading: false,\n                success: false,\n                stripeCard: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n\n// delete saved card reducer\nexport const deleteSavedCardReducer = (state = {data: {}}, action) => {\n    switch (action.type) {\n        case DELETE_SAVED_CARD_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                error: \"\"\n            }\n        case DELETE_SAVED_CARD_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                data: action.payload,\n                error: \"\"\n            }\n        case DELETE_SAVED_CARD_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n\n    UPDATE_USER_DETAILS_REQUEST,\n    UPDATE_USER_DETAILS_SUCCESS,\n    UPDATE_USER_DETAILS_FAIL,\n    UPDATE_USER_DETAILS_RESET,\n\n    DELETE_USER_ACCOUNT_REQUEST,\n    DELETE_USER_ACCOUNT_SUCCESS,\n    DELETE_USER_ACCOUNT_FAIL,\n    DELETE_USER_ACCOUNT_RESET,\n\n    GET_USER_ALL_ADDRESSES_REQUEST,\n    GET_USER_ALL_ADDRESSES_SUCCESS,\n    GET_USER_ALL_ADDRESSES_FAIL,\n\n    GET_SINGLE_ADDRESS_REQUEST,\n    GET_SINGLE_ADDRESS_SUCCESS,\n    GET_SINGLE_ADDRESS_FAIL,\n    GET_SINGLE_ADDRESS_RESET,\n\n    CREATE_USER_ADDRESS_REQUEST,\n    CREATE_USER_ADDRESS_SUCCESS,\n    CREATE_USER_ADDRESS_FAIL,\n    CREATE_USER_ADDRESS_RESET,\n\n    UPDATE_USER_ADDRESS_REQUEST,\n    UPDATE_USER_ADDRESS_SUCCESS,\n    UPDATE_USER_ADDRESS_FAIL,\n    UPDATE_USER_ADDRESS_RESET,\n\n    DELETE_USER_ADDRESS_REQUEST,\n    DELETE_USER_ADDRESS_SUCCESS,\n    DELETE_USER_ADDRESS_FAIL,\n    DELETE_USER_ADDRESS_RESET,\n\n    CHECK_TOKEN_VALID_REQUEST,\n    CHECK_TOKEN_VALID_SUCCESS,\n    CHECK_TOKEN_VALID_FAIL,\n    CHECK_TOKEN_VALID_RESET,\n\n    GET_ALL_ORDERS_REQUEST,\n    GET_ALL_ORDERS_SUCCESS,\n    GET_ALL_ORDERS_FAIL,\n\n} from '../constants/index'\n\n\n// Login\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case USER_LOGIN_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                userInfo: action.payload\n            }\n        case USER_LOGIN_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n// Register\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case USER_REGISTER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                userInfo: action.payload\n            }\n        case USER_REGISTER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\n// user details reducer\nexport const userDetailsReducer = (state = {}, action) => {\n    switch(action.type) {\n        case USER_DETAILS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                user: {},\n                error: \"\"\n            }\n        case USER_DETAILS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                user: action.payload,\n                error: \"\"\n            }\n        case USER_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                user: {},\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// user details update reducer\nexport const userDetailsUpdateReducer = (state = {}, action) => {\n    switch(action.type) {\n        case UPDATE_USER_DETAILS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                user: {},\n                success: false,\n                error: \"\"\n            }\n        case UPDATE_USER_DETAILS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                user: action.payload,\n                error: \"\"\n            }\n        case UPDATE_USER_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                user: {},\n                error: action.payload\n            }\n        case UPDATE_USER_DETAILS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                user: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// delete user account reducer\nexport const deleteUserAccountReducer = (state = {}, action) => {\n    switch(action.type) {\n        case DELETE_USER_ACCOUNT_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case DELETE_USER_ACCOUNT_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case DELETE_USER_ACCOUNT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case DELETE_USER_ACCOUNT_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// check token validation reducer\nexport const checkTokenValidationReducer = (state = {}, action) => {\n    switch(action.type) {\n        case CHECK_TOKEN_VALID_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                valid: false,\n                error: \"\"\n            }\n        case CHECK_TOKEN_VALID_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                valid: true,\n                error: \"\"\n            }\n        case CHECK_TOKEN_VALID_FAIL:\n            return {\n                ...state,\n                loading: false,\n                valid: false,\n                error: action.payload\n            }\n        case CHECK_TOKEN_VALID_RESET:\n            return {\n                ...state,\n                loading: false,\n                valid: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n\n\n// get all addresses of user reducer\nexport const getAllAddressesOfUserReducer = (state = {}, action) => {\n    switch(action.type) {\n        case GET_USER_ALL_ADDRESSES_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                addresses: [],\n                success: false,\n                error: \"\"\n            }\n        case GET_USER_ALL_ADDRESSES_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                addresses: action.payload,\n                success: true,\n                error: \"\"\n            }\n        case GET_USER_ALL_ADDRESSES_FAIL:\n            return {\n                ...state,\n                loading: false,\n                addresses: [],\n                success: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// get single address reducer\nexport const getSingleAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case GET_SINGLE_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                address: {},\n                success: false,\n                error: \"\"\n            }\n        case GET_SINGLE_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                address: action.payload,\n                success: true,\n                error: \"\"\n            }\n        case GET_SINGLE_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                address: {},\n                success: false,\n                error: action.payload\n            }\n        case GET_SINGLE_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                address: {},\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// create user address\nexport const createUserAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case CREATE_USER_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                address: {},\n                success: false,\n                error: \"\"\n            }\n        case CREATE_USER_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                address: action.payload,\n                success: true,\n                error: \"\"\n            }\n        case CREATE_USER_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                address: {},\n                error: action.payload\n            }\n        case CREATE_USER_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                address: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// update user address\nexport const updateUserAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case UPDATE_USER_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case UPDATE_USER_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case UPDATE_USER_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case UPDATE_USER_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// delete user address reducer\nexport const deleteUserAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case DELETE_USER_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case DELETE_USER_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case DELETE_USER_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case DELETE_USER_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// get all orders reducer\nexport const getAllOrdersReducer = (state = {orders: []}, action) => {\n    switch(action.type) {\n        case GET_ALL_ORDERS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                orders: [],\n                error: \"\"\n            }\n        case GET_ALL_ORDERS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                orders: action.payload,\n                error: \"\"\n            }\n        case GET_ALL_ORDERS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                orders: [],\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n","import {\n    AD_SUBMISSION_REQUEST,\n    AD_SUBMISSION_SUCCESS,\n    AD_SUBMISSION_FAIL,\n    AD_SUBMISSION_RESET,\n    AD_APPROVAL_REQUEST,\n    AD_APPROVAL_SUCCESS,\n    AD_APPROVAL_FAIL,\n    ACTIVE_ADS_REQUEST,\n    ACTIVE_ADS_SUCCESS,\n    ACTIVE_ADS_FAIL,\n    PENDING_ADS_REQUEST,\n    PENDING_ADS_SUCCESS,\n    PENDING_ADS_FAIL\n} from '../constants'\n\nexport const adSubmissionReducer = (state = {\n    loading: false,\n    error: null,\n    success: false,\n    ad: null\n}, action) => {\n    switch (action.type) {\n        case AD_SUBMISSION_REQUEST:\n            return { ...state, loading: true, error: null }\n        case AD_SUBMISSION_SUCCESS:\n            return { ...state, loading: false, success: true, ad: action.payload }\n        case AD_SUBMISSION_FAIL:\n            return { ...state, loading: false, error: action.payload }\n        case AD_SUBMISSION_RESET:\n            return { loading: false, error: null, success: false, ad: null }\n        default:\n            return state\n    }\n}\n\nexport const adApprovalReducer = (state = {}, action) => {\n    switch (action.type) {\n        case AD_APPROVAL_REQUEST:\n            return { loading: true }\n        case AD_APPROVAL_SUCCESS:\n            return { loading: false, success: true }\n        case AD_APPROVAL_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const activeAdsListReducer = (state = { activeAds: [] }, action) => {\n    switch (action.type) {\n        case ACTIVE_ADS_REQUEST:\n            return { loading: true, activeAds: [] }\n        case ACTIVE_ADS_SUCCESS:\n            return { loading: false, activeAds: action.payload }\n        case ACTIVE_ADS_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const pendingAdsListReducer = (state = { pendingAds: [] }, action) => {\n    switch (action.type) {\n      case PENDING_ADS_REQUEST:\n        return { loading: true, pendingAds: [] }\n      case PENDING_ADS_SUCCESS:\n        return { loading: false, pendingAds: action.payload }\n      case PENDING_ADS_FAIL:\n        return { loading: false, error: action.payload }\n      default:\n        return state\n    }\n}","import {createStore, applyMiddleware} from 'redux'\nimport { composeWithDevTools} from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport allReducers from './reducers/index'\n\nconst middleware = [thunk]\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n\nlet initialState = {\n    userLoginReducer: { userInfo: userInfoFromStorage }\n}\n\nconst store = createStore(allReducers, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import {\n    PRODUCTS_LIST_REQUEST,\n    PRODUCTS_LIST_SUCCESS,\n    PRODUCTS_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    CREATE_PRODUCT_REQUEST,\n    CREATE_PRODUCT_SUCCESS,\n    CREATE_PRODUCT_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    CHANGE_DELIVERY_STATUS_REQUEST,\n    CHANGE_DELIVERY_STATUS_SUCCESS,\n    CHANGE_DELIVERY_STATUS_FAIL,\n} from '../constants/index';\n\nimport axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_BASE_URL;\n\n// products list\nexport const getProductsList = () => async (dispatch) => {\n    try {\n        dispatch({\n            type: PRODUCTS_LIST_REQUEST\n        })\n\n        // call api\n        const { data } = await axios.get(`${API_URL}/api/products/`)\n\n        dispatch({\n            type: PRODUCTS_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCTS_LIST_FAIL,\n            payload: error.message\n        })\n    }\n}\n\n\n// product details\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({\n            type: PRODUCT_DETAILS_REQUEST\n        })\n\n        // call api\n        const { data } = await axios.get(`${API_URL}/api/product/${id}/`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.message\n        })\n    }\n}\n\n\n// create product\nexport const createProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: CREATE_PRODUCT_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        const { data } = await axios.post(\n            `${API_URL}/api/product-create/`,\n            product,\n            config\n        )\n\n        dispatch({\n            type: CREATE_PRODUCT_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        console.error(\"Error creating product:\", error.response ? error.response.data : error.message) // Log error details\n        dispatch({\n            type: CREATE_PRODUCT_FAIL,\n            payload: error.response && error.response.data\n                ? error.response.data\n                : { detail: error.message },\n        })\n    }\n}\n\n// delete product\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: DELETE_PRODUCT_REQUEST\n        })\n\n        // login reducer\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.delete(\n            `${API_URL}/api/product-delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n// update product\nexport const updateProduct = (id, product) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: UPDATE_PRODUCT_REQUEST\n        })\n\n        // login reducer\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.put(\n            `${API_URL}/api/product-update/${id}/`,\n            product,\n            config\n        )\n\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n// change ordered product delivery status\nexport const changeDeliveryStatus = (id, product) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: CHANGE_DELIVERY_STATUS_REQUEST\n        })\n\n        // login reducer\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.put(\n            `${API_URL}/account/change-order-status/${id}/`,\n            product,\n            config\n        )\n\n        dispatch({\n            type: CHANGE_DELIVERY_STATUS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CHANGE_DELIVERY_STATUS_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({ variant, children }) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\n\nfunction Product({ product }) {\n    // Construct the full image URL using the environment variable\n    const imageUrl = product.image.startsWith('http') \n        ? product.image \n        : `${process.env.REACT_APP_API_BASE_URL}${product.image}`;\n\n    return (\n        <div>\n            <Card className=\"mb-4 rounded\">\n                <Card.Body>\n                    <Link to={`/product/${product.id}`} style={{ color: 'black' }}>\n                        <Card.Img \n                            variant=\"top\" \n                            src={imageUrl} \n                            style={{ \n                                width: '100%', \n                                height: 'auto', \n                                aspectRatio: '1 / 1', // Maintain a square aspect ratio\n                                objectFit: 'cover', // Ensure the image covers the card without distortion\n                                borderRadius: '10px' \n                            }}\n                            onError={(e) => {\n                                e.target.onerror = null; // Prevent infinite loop\n                                e.target.src = ''; // Remove placeholder logic\n                            }}\n                        />\n                    </Link>\n                    <Link to={`/product/${product.id}`} style={{ color: 'black' }}>\n                        <Card.Title as=\"div\" style={{ fontSize: 'clamp(0.9rem, 2.5vw, 1.2rem)', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}>\n                            <strong>{product.name}</strong>\n                        </Card.Title>\n                    </Link>\n                    <Card.Text as=\"h3\" style={{ fontSize: 'clamp(1rem, 3vw, 1.5rem)', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}>\n                        Tsh {product.price}\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default Product","import React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { FaHome, FaSearch, FaCompass, FaBullhorn, FaUser } from 'react-icons/fa';\n\nfunction BottomNavBar() {\n    const location = useLocation(); // Get the current route\n    const [activeTab, setActiveTab] = useState(location.pathname); // Track the active tab\n\n    const handleTabClick = (tab) => {\n        setActiveTab(tab);\n    };\n\n    return (\n        <>\n            <div style={{ height: '4rem' }}></div> {/* Spacer to account for the navbar height */}\n            <div\n                style={{\n                    position: 'fixed',\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    backgroundColor: '#fff',\n                    borderTop: '1px solid #ddd',\n                    display: 'flex',\n                    justifyContent: 'space-around',\n                    alignItems: 'center',\n                    padding: '0.5rem 0',\n                    zIndex: 1000,\n                    height: '4rem', // Fixed height for the navbar\n                }}\n            >\n                <div className=\"text-center\">\n                    <Link\n                        to=\"/\"\n                        onClick={() => handleTabClick('/')}\n                        style={{\n                            color: activeTab === '/' ? 'blue' : 'black',\n                            textDecoration: 'none',\n                        }}\n                    >\n                        <FaHome size={24} />\n                        <p style={{ fontSize: '0.75rem', margin: 0 }}>Home</p>\n                    </Link>\n                </div>\n                <div className=\"text-center\">\n                    <Link\n                        to=\"/search\"\n                        onClick={() => handleTabClick('/search')}\n                        style={{\n                            color: activeTab === '/search' ? 'blue' : 'black',\n                            textDecoration: 'none',\n                        }}\n                    >\n                        <FaSearch size={24} />\n                        <p style={{ fontSize: '0.75rem', margin: 0 }}>Search</p>\n                    </Link>\n                </div>\n                <div className=\"text-center\">\n                    <Link\n                        to=\"/\"\n                        onClick={() => handleTabClick('/explore')}\n                        style={{\n                            color: activeTab === '/explore' ? 'blue' : 'black',\n                            textDecoration: 'none',\n                        }}\n                    >\n                        <FaCompass size={24} />\n                        <p style={{ fontSize: '0.75rem', margin: 0 }}>Explore</p>\n                    </Link>\n                </div>\n                <div className=\"text-center\">\n                    <Link\n                        to=\"/advertise\"\n                        onClick={() => handleTabClick('/advertise')}\n                        style={{\n                            color: activeTab === '/advertise' ? 'blue' : 'black',\n                            textDecoration: 'none',\n                        }}\n                    >\n                        <FaBullhorn size={24} />\n                        <p style={{ fontSize: '0.75rem', margin: 0 }}>Advertise</p>\n                    </Link>\n                </div>\n                <div className=\"text-center\">\n                    <Link\n                        to=\"/account\"\n                        onClick={() => handleTabClick('/account')}\n                        style={{\n                            color: activeTab === '/account' ? 'blue' : 'black',\n                            textDecoration: 'none',\n                        }}\n                    >\n                        <FaUser size={24} />\n                        <p style={{ fontSize: '0.75rem', margin: 0 }}>Profile</p>\n                    </Link>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default BottomNavBar;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { Card, Carousel, Spinner, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst AdSlider = () => {\n  const [ads, setAds] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [videoLoading, setVideoLoading] = useState({});\n  const [autoplayBlocked, setAutoplayBlocked] = useState({});\n  const carouselRef = useRef(null);\n  const videoRefs = useRef([]);\n\n  useEffect(() => {\n    const fetchAds = async () => {\n      try {\n        const { data } = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/ads/active/`);\n        setAds(data);\n        \n        // Initialize loading and autoplay states for each video ad\n        const initialLoadingStates = {};\n        const initialAutoplayStates = {};\n        data.forEach((ad, index) => {\n          if (ad.ad_type === 'video') {\n            initialLoadingStates[index] = true;\n            initialAutoplayStates[index] = false;\n          }\n        });\n        \n        setVideoLoading(initialLoadingStates);\n        setAutoplayBlocked(initialAutoplayStates);\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchAds();\n  }, []);\n\n  // Handle video ended event\n  const handleVideoEnd = (index) => {\n    // Only auto-advance if there are more ads\n    if (index < ads.length - 1) {\n      carouselRef.current.next();\n    }\n  };\n\n  // Handle video play/pause events for autoplay detection\n  const handleVideoPlay = (index) => {\n    setAutoplayBlocked(prev => ({ ...prev, [index]: false }));\n  };\n\n  const handleVideoPause = (index, e) => {\n    if (e.target.currentTime === 0) {\n      setAutoplayBlocked(prev => ({ ...prev, [index]: true }));\n    }\n  };\n\n  // Set up video event listeners when ads load\n  useEffect(() => {\n    if (ads.length > 0) {\n      videoRefs.current = videoRefs.current.slice(0, ads.length);\n      \n      ads.forEach((ad, index) => {\n        if (ad.ad_type === 'video' && videoRefs.current[index]) {\n          const video = videoRefs.current[index];\n          video.onended = () => handleVideoEnd(index);\n          video.onplay = () => handleVideoPlay(index);\n          video.onpause = (e) => handleVideoPause(index, e);\n          video.onloadeddata = () => {\n            setVideoLoading(prev => ({ ...prev, [index]: false }));\n          };\n        }\n      });\n    }\n  }, [ads]);\n\n  // Manual play function for when autoplay is blocked\n  const handlePlayClick = (index) => {\n    if (videoRefs.current[index]) {\n      videoRefs.current[index].play();\n    }\n  };\n\n  if (loading) return <div className=\"text-center py-4\"><Spinner animation=\"border\" /></div>;\n  if (error) return <div className=\"text-center py-4 text-danger\">Error loading ads: {error}</div>;\n  if (ads.length === 0) return null;\n\n  return (\n    <Carousel \n      ref={carouselRef}\n      activeIndex={activeIndex}\n      onSelect={(selectedIndex) => setActiveIndex(selectedIndex)}\n      indicators={false} \n      controls={ads.length > 1}\n      interval={null} // Disable auto-rotation since we'll handle it manually\n      className=\"mb-4 shadow-sm\"\n    >\n      {ads.map((ad, index) => (\n        <Carousel.Item key={index}>\n          <Card style={{ \n            background: 'linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)',\n            border: 'none',\n            borderRadius: '10px',\n            overflow: 'hidden'\n          }}>\n            <Card.Body className=\"text-center py-4\">\n              {ad.ad_type === 'image' ? (\n                <img \n                  src={ad.ad_file_url} \n                  alt={ad.ad_title} \n                  className=\"img-fluid mb-3\" \n                  style={{ maxHeight: '200px', objectFit: 'contain' }}\n                />\n              ) : (\n                <div style={{ position: 'relative' }}>\n                  {videoLoading[index] && (\n                    <div className=\"text-center py-4\">\n                      <Spinner animation=\"border\" />\n                    </div>\n                  )}\n                  <video \n                    ref={el => videoRefs.current[index] = el}\n                    src={ad.ad_file_url}\n                    autoPlay\n                    muted\n                    playsInline\n                    className=\"img-fluid mb-3\"\n                    style={{ \n                      maxHeight: '200px', \n                      objectFit: 'contain',\n                      display: videoLoading[index] ? 'none' : 'block'\n                    }}\n                  />\n                  {autoplayBlocked[index] && (\n                    <div \n                      style={{\n                        position: 'absolute',\n                        top: '50%',\n                        left: '50%',\n                        transform: 'translate(-50%, -50%)',\n                        zIndex: 1\n                      }}\n                    >\n                      <Button \n                        variant=\"primary\" \n                        onClick={() => handlePlayClick(index)}\n                        style={{\n                          padding: '0.5rem 1.5rem',\n                          borderRadius: '50px',\n                          boxShadow: '0 4px 15px rgba(0, 0, 0, 0.2)'\n                        }}\n                      >\n                        Play Video\n                      </Button>\n                    </div>\n                  )}\n                </div>\n              )}\n              <h3 style={{ color: '#2c3e50', fontWeight: 'bold', marginBottom: '1rem' }}>\n                {ad.ad_title}\n              </h3>\n              <p className=\"lead mb-4\" style={{ color: '#34495e', fontSize: '1.25rem' }}>\n                {ad.ad_description}\n              </p>\n              <div className=\"d-flex justify-content-center\">\n                <Link to=\"/advertise\" className=\"btn btn-primary btn-lg\"\n                  style={{\n                    padding: '0.75rem 2rem',\n                    fontSize: '1.1rem',\n                    fontWeight: '600',\n                    borderRadius: '50px',\n                    boxShadow: '0 4px 15px rgba(0, 0, 0, 0.1)',\n                    transition: 'all 0.3s ease',\n                    backgroundColor: 'black',\n                    borderColor: 'black'\n                  }}\n                  onMouseOver={(e) => {\n                    e.target.style.transform = 'translateY(-2px)';\n                    e.target.style.boxShadow = '0 6px 20px rgba(0, 0, 0, 0.15)';\n                  }}\n                  onMouseOut={(e) => {\n                    e.target.style.transform = 'translateY(0)';\n                    e.target.style.boxShadow = '0 4px 15px rgba(0, 0, 0, 0.1)';\n                  }}>\n                  Advertise With Us →\n                </Link>\n              </div>\n              <div className=\"mt-3 text-muted\">\n                <small>Sponsored Ad</small>\n              </div>\n            </Card.Body>\n          </Card>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  );\n};\n\nexport default AdSlider;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProductsList } from '../actions/productActions';\nimport Message from '../components/Message';\nimport { Spinner, Row, Col, Card, Button, ButtonGroup } from 'react-bootstrap';\nimport Product from '../components/Product';\nimport { useHistory } from 'react-router-dom';\nimport { CREATE_PRODUCT_RESET } from '../constants';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport BottomNavBar from '../components/BottomNavBar';\nimport AdSlider from '../components/AdSlider';\n\nfunction ProductsListPage() {\n    let history = useHistory();\n    let searchTerm = history.location.search ? history.location.search.split(\"=\")[1].toLowerCase() : \"\";\n    const dispatch = useDispatch();\n    const [selectedCategory, setSelectedCategory] = useState('All');\n    const [categories, setCategories] = useState(['All']);\n    \n    // Fetch categories from API\n    useEffect(() => {\n        const fetchCategories = async () => {\n            try {\n                const { data } = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/categories/`);\n                const uniqueCategories = ['All', ...new Set(data.map(category => category.name))];\n                setCategories(uniqueCategories);\n            } catch (error) {\n                console.error(\"Error fetching categories:\", error);\n            }\n        };\n        fetchCategories();\n    }, []);\n\n    // products list reducer\n    const productsListReducer = useSelector(state => state.productsListReducer);\n    const { loading, error, products } = productsListReducer;\n\n    // Fetch products based on selected category\n    useEffect(() => {\n        const fetchProducts = async () => {\n            try {\n                const query = selectedCategory !== 'All' ? `?category=${selectedCategory}` : '';\n                await dispatch(getProductsList(query));\n            } catch (error) {\n                console.error(\"Error fetching products:\", error);\n            }\n        };\n        fetchProducts();\n        dispatch({ type: CREATE_PRODUCT_RESET });\n    }, [dispatch, selectedCategory]);\n\n    // Log image paths of products\n    useEffect(() => {\n        if (products && products.length > 0) {\n            products.forEach(product => {\n                console.log(`Product Image Path: ${product.image}`);\n            });\n        }\n    }, [products]);\n\n    const showNothingMessage = () => {\n        return !loading && <Message variant='info'>Nothing to show</Message>;\n    };\n\n    // Filter products by category and search term\n    const filteredProducts = products.filter(product => {\n        const matchesSearch = product.name.toLowerCase().includes(searchTerm);\n        const matchesCategory = selectedCategory === 'All' || \n                              product.category_name === selectedCategory;\n        return matchesSearch && matchesCategory;\n    });\n\n    return (\n        <div>\n            {/* Prominent Advertise Section */}\n            <AdSlider />\n\n            {/* Category Filter Buttons */}\n            <div className=\"mb-4 text-center\">\n                <ButtonGroup className=\"flex-wrap\">\n                    {categories.map(category => (\n                        <Button\n                            key={category}\n                            variant={selectedCategory === category ? 'primary' : 'outline-primary'}\n                            onClick={() => setSelectedCategory(category)}\n                            className=\"mx-1 mb-2 rounded-pill\"\n                            style={{\n                                backgroundColor: selectedCategory === category ? 'black' : 'transparent', // Black for selected\n                                color: selectedCategory === category ? 'white' : 'black', // White text for selected\n                                borderColor: 'black' // Black border for all buttons\n                            }}\n                        >\n                            {category}\n                        </Button>\n                    ))}\n                </ButtonGroup>\n            </div>\n\n            {/* Product Listing */}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading ? (\n                <div className=\"text-center py-5\">\n                    <Spinner animation=\"border\" />\n                    <p className=\"mt-2\">Loading products...</p>\n                </div>\n            ) : (\n                <Row>\n                    {filteredProducts.length > 0 ? (\n                        filteredProducts.map(product => (\n                            <Col key={product.id} xs={6} sm={6} md={4} lg={3} xl={3}>\n                                {/* Ensured xs={6} for two columns on extra small screens */}\n                                <div className=\"product-card mx-2\">\n                                    <Product product={{ ...product, price: Math.floor(product.price).toLocaleString() }} />\n                                </div>\n                            </Col>\n                        ))\n                    ) : (\n                        showNothingMessage()\n                    )}\n                </Row>\n            )}\n\n            {/* Bottom Navigation Bar */}\n            <BottomNavBar />\n        </div>\n    );\n}\n\nexport default ProductsListPage;","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteProduct, getProductDetails } from '../actions/productActions';\nimport Message from '../components/Message';\nimport { Spinner, Row, Col, Container, Card, Button, Modal, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { CREATE_PRODUCT_RESET, DELETE_PRODUCT_RESET, UPDATE_PRODUCT_RESET, CARD_CREATE_RESET } from '../constants';\nimport BottomNavBar from '../components/BottomNavBar'; // Import the component\n\nfunction ProductDetailsPage({ history, match }) {\n    const [show, setShow] = useState(false);\n    const [quantity, setQuantity] = useState(1);\n    const dispatch = useDispatch();\n\n    const productDetailsReducer = useSelector(state => state.productDetailsReducer);\n    const { loading, error, product } = productDetailsReducer;\n\n    const userLoginReducer = useSelector(state => state.userLoginReducer);\n    const { userInfo } = userLoginReducer;\n\n    const deleteProductReducer = useSelector(state => state.deleteProductReducer);\n    const { success: productDeletionSuccess } = deleteProductReducer;\n\n    // Construct image URL using environment variable\n    const getImageUrl = (imagePath) => {\n        if (!imagePath) return '';\n        if (imagePath.startsWith('http')) return imagePath;\n        return `${process.env.REACT_APP_API_BASE_URL}${imagePath}`;\n    };\n\n    useEffect(() => {\n        dispatch(getProductDetails(match.params.id));\n        dispatch({ type: UPDATE_PRODUCT_RESET });\n        dispatch({ type: CREATE_PRODUCT_RESET });\n        dispatch({ type: CARD_CREATE_RESET });\n    }, [dispatch, match]);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const confirmDelete = () => {\n        dispatch(deleteProduct(match.params.id));\n        handleClose();\n    };\n\n    if (productDeletionSuccess) {\n        alert(\"Product successfully deleted.\");\n        history.push(\"/\");\n        dispatch({ type: DELETE_PRODUCT_RESET });\n    }\n\n    return (\n        <div>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        <i style={{ color: \"#e6e600\" }} className=\"fas fa-exclamation-triangle\"></i>\n                        {\" \"}\n                        Delete Confirmation\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Are you sure you want to delete this product <em>\"{product.name}\"</em>?</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={confirmDelete}>\n                        Confirm Delete\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Cancel\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            {loading && (\n                <span style={{ display: \"flex\" }}>\n                    <h5>Getting Product Details</h5>\n                    <span className=\"ml-2\">\n                        <Spinner animation=\"border\" />\n                    </span>\n                </span>\n            )}\n            \n            {error ? (\n                <Message variant='danger'>{error}</Message>\n            ) : (\n                <div>\n                    <Container>\n                        <Row>\n                            <Col md={6}>\n                                <Card.Img \n                                    variant=\"top\" \n                                    src={getImageUrl(product.image)} \n                                    height=\"420\"\n                                    onError={(e) => {\n                                        e.target.onerror = null;\n                                        e.target.src = ''; // Remove fallback to placeholder image\n                                    }}\n                                />\n\n                                {userInfo && userInfo.admin && (\n                                    <span style={{ display: \"flex\" }}>\n                                        <Button\n                                            className=\"btn mt-2 btn-danger btn-sm button-focus-css\"\n                                            style={{ width: \"100%\" }}\n                                            onClick={handleShow}\n                                        >\n                                            Delete Product\n                                        </Button>\n\n                                        <Button\n                                            className=\"ml-2 mt-2 btn btn-primary btn-sm button-focus-css\"\n                                            onClick={() => history.push(`/product-update/${product.id}/`)}\n                                            style={{ width: \"100%\" }}\n                                        >\n                                            Edit Product\n                                        </Button>\n                                    </span>\n                                )}\n                            </Col>\n\n                            <Col sm>\n                                <b>{product.name}</b>\n                                <span className=\"badge badge-secondary ml-2\">\n                                    {product.category_name}\n                                </span>\n                                <hr />\n                                <span className=\"justify-description-css\">\n                                    <p>{product.description}</p>\n                                </span>\n                                <span style={{\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    border: \"1px solid\",\n                                    borderColor: \"#C6ACE7\",\n                                    padding: \"2px\"\n                                }}>\n                                    Price:<span className=\"text-success ml-2\">Tsh {Math.floor(product.price).toLocaleString()}</span>\n                                </span>\n                            </Col>\n                            <Col sm>\n                                <b>Buy</b>\n                                <hr />\n                                {product.stock ? (\n                                    <>\n                                        <Form.Group controlId=\"quantity\">\n                                            <Form.Label>Quantity</Form.Label>\n                                            <Form.Control\n                                                as=\"select\"\n                                                value={quantity}\n                                                onChange={(e) => setQuantity(e.target.value)}\n                                            >\n                                                {[...Array(10).keys()].map(x => (\n                                                    <option key={x + 1} value={x + 1}>\n                                                        {x + 1}\n                                                    </option>\n                                                ))}\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Link \n                                            to={`/order-now?product=${product.id}&qty=${quantity}&name=${encodeURIComponent(product.name)}&price=${product.price}&supplier=${encodeURIComponent(product.supplier_info?.name || '')}&whatsapp=${encodeURIComponent(product.supplier_info?.whatsapp_link || '')}`} \n                                            className=\"btn btn-success btn-block\"\n                                        >\n                                            Order Now\n                                        </Link>\n                                    </>\n                                ) : (\n                                    <Message variant='danger'>Out Of Stock!</Message>\n                                )}\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            )}\n            <BottomNavBar /> {/* Add the BottomNavBar */}\n        </div>\n    );\n}\n\nexport default ProductDetailsPage;","import {\n    CARD_CREATE_REQUEST,\n    CARD_CREATE_SUCCESS,\n    CARD_CREATE_FAIL,\n\n    CHARGE_CARD_REQUEST,\n    CHARGE_CARD_SUCCESS,\n    CHARGE_CARD_FAIL,\n\n    SAVED_CARDS_LIST_REQUEST,\n    SAVED_CARDS_LIST_SUCCESS,\n    SAVED_CARDS_LIST_FAIL,\n\n    DELETE_SAVED_CARD_REQUEST,\n    DELETE_SAVED_CARD_SUCCESS,\n    DELETE_SAVED_CARD_FAIL,\n\n    UPDATE_STRIPE_CARD_REQUEST,\n    UPDATE_STRIPE_CARD_SUCCESS,\n    UPDATE_STRIPE_CARD_FAIL,\n\n} from '../constants/index'\n\nimport axios from 'axios'\n\n// create card\nexport const createCard = (cardData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: CARD_CREATE_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n                \"Card-Number\": cardData.cardNumber,\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            \"/payments/create-card/\",\n            {\n                'email': cardData.email,\n                'number': cardData.cardNumber,\n                'exp_month': cardData.expMonth,\n                'exp_year': cardData.expYear,\n                'cvc': cardData.cvc,\n                'save_card': cardData.saveCard\n            },\n            config\n        )\n\n        dispatch({\n            type: CARD_CREATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CARD_CREATE_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n// charge customer\nexport const chargeCustomer = (cardData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: CHARGE_CARD_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            \"/payments/charge-customer/\",\n            cardData,\n            config\n        )\n\n        dispatch({\n            type: CHARGE_CARD_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CHARGE_CARD_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n// saved cards list\nexport const savedCardsList = () => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: SAVED_CARDS_LIST_REQUEST,\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.get('/account/stripe-cards/', config)\n\n        dispatch({\n            type: SAVED_CARDS_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: SAVED_CARDS_LIST_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n// update stripe card\nexport const updateStripeCard = (cardData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: UPDATE_STRIPE_CARD_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            \"/payments/update-card/\",\n            cardData,\n            config\n        )\n\n        dispatch({\n            type: UPDATE_STRIPE_CARD_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_STRIPE_CARD_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n\n// delete saved card\nexport const deleteSavedCard = (card_number) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: DELETE_SAVED_CARD_REQUEST,\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            '/payments/delete-card/',\n            { \"card_number\": card_number },\n            config\n        )\n\n        dispatch({\n            type: DELETE_SAVED_CARD_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_SAVED_CARD_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}","import React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { deleteSavedCard } from '../actions/cardActions'\nimport { useDispatch } from 'react-redux'\nimport { Modal } from 'react-bootstrap'\n\n\nfunction DeleteCardComponent({ userId, deleteCardNumber, runCardDeleteHandler, toggleRunCardDeleteHandler }) {\n\n    const dispatch = useDispatch()\n\n    // card delete confirmation\n    const confirmDelete = (c_number) => {\n        dispatch(deleteSavedCard(c_number))\n        toggleRunCardDeleteHandler()\n    }\n\n    return (\n        <div>\n            {/* Modal Start*/}\n            <div>\n                <Modal show={runCardDeleteHandler} onHide={toggleRunCardDeleteHandler}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>\n                            <i style={{ color: \"#e6e600\" }} className=\"fas fa-exclamation-triangle\"></i>\n                            {\" \"}\n                            Delete Confirmation\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <p>\n                            <b>\n                                Warning!\n                            </b>\n                            {\" \"}deleting your card will delete your stripe account and all its data.\n                        </p>\n                        Are you sure you want to delete the card \"{deleteCardNumber}\"?\n                    </Modal.Body>\n\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={() => confirmDelete(deleteCardNumber)}>\n                            Confirm Delete\n                        </Button>\n                        <Button variant=\"primary\" onClick={toggleRunCardDeleteHandler}>\n                            Cancel\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n\n            {/* Modal End */}\n        </div>\n    )\n}\n\nexport default DeleteCardComponent\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap'\nimport { createCard } from '../actions/cardActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Spinner } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Message from './Message';\nimport DeleteCardComponent from './DeleteCardComponent';\n\n// to manage our exp month and exp year\nlet todays_date = new Date()\nlet current_year = todays_date.getFullYear()\n\n\nconst CreateCardComponent = ({ stripeCards, addressSelected }) => {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const [userId] = useState(0)\n    const [runCardDeleteHandler, setRunCardDeleteHandler] = useState(false)\n    const [differentCard, setDifferentCard] = useState(false)\n    const [cardDetails, setCardDetails] = useState(false)\n    const [cardDetailsId, setCardDetailsId] = useState(0)\n    const [showStripeCard, setShowStripeCard] = useState(false)\n    const [deleteCardNumber] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [cardNumber, setCardNumber] = useState(\"\")\n    const [expMonth, setExpMonth] = useState(\"\")\n    const [expYear, setExpYear] = useState(\"\")\n    const [cvc, setCvc] = useState(\"\")\n    const [saveCard, setSaveCard] = useState(false)\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // card delete reducer\n    const deleteSavedCardReducer = useSelector(state => state.deleteSavedCardReducer)\n    const { loading, success, error } = deleteSavedCardReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        }\n    }, [history, userInfo, success])\n\n    // stripe card form submission handler\n    const handleCardSubmittion = (e) => {\n        e.preventDefault()\n        if (addressSelected) {\n            const data = {\n                \"email\": email === \"\" ? userInfo.email : email,\n                \"cardNumber\": cardNumber,\n                \"expMonth\": expMonth ? Number(expMonth) : \"\",\n                \"expYear\": expYear ? Number(expYear) : \"\",\n                \"cvc\": cvc ? Number(cvc) : \"\",\n                \"saveCard\": saveCard\n            }\n            dispatch(createCard(data))\n        } else {\n            alert(\"Please select or add your Address to continue\")\n        }\n    }\n\n    // pay with already existing (saved) stripe card handler\n    const payWithSavedCard = (cardData) => {\n        if (addressSelected) {\n            const data = {\n                \"email\": cardData.email,\n                \"cardNumber\": cardData.card_number,\n                \"expMonth\": Number(cardData.exp_month),\n                \"expYear\": Number(cardData.exp_year),\n                \"cvc\": Number(cardData.cvc),\n                \"saveCard\": false\n            }\n            dispatch(createCard(data))\n        } else {\n            alert(\"Please select or add your Address to continue\")\n        }\n    }\n\n    // show card details\n    const showCardDetails = (cardData) => {\n        if (cardDetails) {\n            if (cardData.id === cardDetailsId) {\n                return (\n                    <div>\n                        <button\n                            onClick={() => setCardDetails(false)}\n                            className=\"btn btn-outline-danger btn-sm button-focus-css\"\n                            style={{ float: \"right\", position: \"relative\", \"top\": \"-40px\" }}>\n                            close\n                        </button>\n                        <p><b>Exp Month:</b> {cardData.exp_month}</p>\n                        <p><b>Exp Year:</b> {cardData.exp_year}</p>                       \n                    </div>\n                )\n            }\n        }\n    }\n\n    const toggleRunCardDeleteHandler = () => {\n        setRunCardDeleteHandler(!runCardDeleteHandler)\n    }\n\n    // reload the webpage after new card deletion\n    if (success) {\n        alert(\"Card successfully deleted.\")\n        window.location.reload()\n\n    }\n\n    return (\n        <div>\n\n            {/* Working on Modal Start*/}\n            <div>\n                <>\n                    <DeleteCardComponent\n                        userId={userId}\n                        deleteCardNumber={deleteCardNumber}\n                        runCardDeleteHandler={runCardDeleteHandler}\n                        toggleRunCardDeleteHandler={toggleRunCardDeleteHandler}\n                    />\n                </>\n            </div>\n\n            {/* Working on Modal End */}\n\n            {loading\n                &&\n                <span style={{ display: \"flex\" }}>\n                    <h5>Deleting card</h5>\n                    <span className=\"ml-2\">\n                        <Spinner animation=\"border\" />\n                    </span>\n                </span>}\n            {error && <Message variant='danger'>{error}</Message>}\n            <div className=\"card px-4 py-4\">\n                <button className={showStripeCard\n                    ? \"btn btn-sm btn-danger mb-3 button-focus-css\"\n                    : \"btn btn-sm btn-primary mb-3 button-focus-css\"}\n                    onClick={() =>\n                        setShowStripeCard(!showStripeCard)\n                    }>\n                    {showStripeCard\n                        ? \"close\"\n                        : \"Enter stripe card\"}\n                </button>\n\n                {showStripeCard ?\n                    <Form onSubmit={handleCardSubmittion}>\n\n                        {differentCard ?\n                            <Form.Group>\n                                <Form.Label><b>Card Holder Email Address</b></Form.Label>\n                                <Form.Control\n                                    autoFocus={true}\n                                    type=\"email\"\n                                    pattern=\".+@gmail\\.com\"\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                    placeholder=\"Email address linked with the Card\" />\n                            </Form.Group>\n                            :\n                            <span><b>Default Customer Email: </b>{userInfo.email}</span>\n                        }\n                        <p>\n                            <Link to=\"#\" onClick={() => {\n                                setDifferentCard(!differentCard)\n                                setEmail(\"\")\n                            }}>\n                                {differentCard ? \"Use Your default Email\" : \"Use a different Card\"}\n                            </Link>\n                        </p>\n\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label><b>Card Number</b></Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                pattern=\"[0-9]+\"\n                                value={cardNumber}\n                                onChange={(e) => setCardNumber(e.target.value)}\n                                placeholder=\"Enter Your Card Number\" maxLength=\"16\"\n                                required\n                            />\n                        </Form.Group>\n\n                        <Row>\n\n                            <Col>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label><b>Exp Month</b></Form.Label>\n                                    <select\n                                        className=\"form-control\"\n                                        defaultValue={expMonth}\n                                        onChange={e => setExpMonth(e.target.value)}\n                                        required\n                                    >\n                                        <option>-- --</option>\n                                        {Array.from({ length: 12 }, (x, i) => <option\n                                            key={i}\n                                        >\n                                            {i + 1}\n                                        </option>\n                                        )}\n                                    </select>\n                                </Form.Group>\n                            </Col>\n\n                            <Col>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label><b>Exp Year</b></Form.Label>\n                                    <select className=\"form-control\"\n                                        defaultValue={expYear}\n                                        onChange={e => setExpYear(e.target.value)}\n                                        required\n                                    >\n                                        <option>-- --</option>\n                                        {Array.from({ length: 21 }, (x, i) => <option\n                                            key={i}\n                                        >{current_year + i}</option>)}\n                                    </select>\n                                </Form.Group>\n                            </Col>\n\n                            <Col>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label><b>CVC Number</b></Form.Label>\n                                    <Form.Control\n                                        type=\"numbers\"\n                                        onChange={(e) => setCvc(e.target.value)}\n                                        placeholder=\"123\" \n                                        maxLength=\"3\"\n                                        pattern=\"[0-9]+\"\n                                        required\n                                    />\n                                </Form.Group>\n                            </Col>\n\n                        </Row>\n\n                        <Form.Text className=\"text-muted pb-2\">\n                            <span style={{ display: \"flex\" }}>\n                                <input\n                                    hidden={differentCard}\n                                    type=\"checkbox\"\n                                    className=\"mt-1\"\n                                    value={differentCard ? false : saveCard}\n                                    onChange={() => setSaveCard(!saveCard)}\n                                />\n                                <span hidden={differentCard} className=\"ml-1\">Save my card for future payments</span>\n                            </span>\n                        </Form.Text>\n\n                        <Button className=\"btn-sm button-focus-css\" variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                    : \"\"}\n\n            </div>\n\n            <div className=\"my-4 card px-4 py-4\">\n                <h5>Saved card</h5>\n                {stripeCards.length > 0 ?\n                    stripeCards.map(cardData => (\n                        <div key={cardData.id}>\n                            <Card\n                                style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                                className=\"p-2\">\n                                <p><b>Card Number:</b> XXXX XXXX XXXX {cardData.card_number.slice(12,18)}</p>\n                                <div>\n                                    {showCardDetails(cardData)}\n                                    <button onClick={() => {\n                                        setCardDetails(true)\n                                        setCardDetailsId(cardData.id)\n                                    }} className=\"btn btn-sm btn-outline-primary button-focus-css\"\n                                    >\n                                        Show Card Details\n                                    </button>\n                                    <button onClick={() => payWithSavedCard(cardData)}\n                                        className=\"ml-2 btn btn-sm btn-outline-primary button-focus-css\">\n                                        Pay with this Card\n                                    </button>\n                                </div>\n                            </Card>\n\n                            {/* Edit Card Buttton */}\n\n                            <span\n                                onClick={() => history.push(\"/stripe-card-details/\")}>\n                                <i\n                                    title=\"edit card\"\n                                    className=\"fas fa-edit fa-lg edit-button-css mr-2\"\n                                ></i>\n                            </span>\n                        </div>\n                    )) : \"No saved card.\"}\n            </div>\n        </div>\n    )\n}\n\nexport default CreateCardComponent\n","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    CARD_CREATE_RESET,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    UPDATE_USER_DETAILS_REQUEST,\n    UPDATE_USER_DETAILS_SUCCESS,\n    UPDATE_USER_DETAILS_FAIL,\n    DELETE_USER_ACCOUNT_REQUEST,\n    DELETE_USER_ACCOUNT_SUCCESS,\n    DELETE_USER_ACCOUNT_FAIL,\n    GET_USER_ALL_ADDRESSES_REQUEST,\n    GET_USER_ALL_ADDRESSES_SUCCESS,\n    GET_USER_ALL_ADDRESSES_FAIL,\n    GET_SINGLE_ADDRESS_REQUEST,\n    GET_SINGLE_ADDRESS_SUCCESS,\n    GET_SINGLE_ADDRESS_FAIL,\n    CREATE_USER_ADDRESS_REQUEST,\n    CREATE_USER_ADDRESS_SUCCESS,\n    CREATE_USER_ADDRESS_FAIL,\n    UPDATE_USER_ADDRESS_REQUEST,\n    UPDATE_USER_ADDRESS_SUCCESS,\n    UPDATE_USER_ADDRESS_FAIL,\n    DELETE_USER_ADDRESS_REQUEST,\n    DELETE_USER_ADDRESS_SUCCESS,\n    DELETE_USER_ADDRESS_FAIL,\n    CHECK_TOKEN_VALID_REQUEST,\n    CHECK_TOKEN_VALID_SUCCESS,\n    CHECK_TOKEN_VALID_FAIL,\n    GET_ALL_ORDERS_REQUEST,\n    GET_ALL_ORDERS_SUCCESS,\n    GET_ALL_ORDERS_FAIL,\n} from '../constants/index';\n\nimport axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_BASE_URL;\n\n// Login\nexport const login = (username, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            `${API_URL}/account/login/`,\n            { 'username': username, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data)) // will create a new key-value pair in localStorage\n        // also see store.js file\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n// Logout\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({\n        type: USER_LOGOUT\n    })\n    dispatch({\n        type: CARD_CREATE_RESET\n    })\n}\n\n// register\nexport const register = (username, email, password) => async (dispatch) => {\n    try {\n        dispatch({ type: USER_REGISTER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`${API_URL}/account/register/`,\n            { 'username': username, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    }\n    catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n// check token validation\nexport const checkTokenValidation = () => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: CHECK_TOKEN_VALID_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(`${API_URL}/payments/check-token/`, config)\n\n        dispatch({\n            type: CHECK_TOKEN_VALID_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CHECK_TOKEN_VALID_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n\n// user details\nexport const userDetails = (id) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(`${API_URL}/account/user/${id}`, config)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n// user update details\nexport const userUpdateDetails = (userData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: UPDATE_USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.put(\n            `${API_URL}/account/user_update/${userInfo.id}/`,\n            {\n                \"username\": userData.username,\n                \"email\": userData.email,\n                \"password\": userData.password\n            },\n            config\n        )\n\n        dispatch({\n            type: UPDATE_USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// user account delete\nexport const userAccountDelete = (userData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: DELETE_USER_ACCOUNT_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.post(\n            `${API_URL}/account/user_delete/${userData.id}/`,\n            {\n                \"password\": userData.password\n            },\n            config\n        )\n\n        dispatch({\n            type: DELETE_USER_ACCOUNT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_USER_ACCOUNT_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// get user address\nexport const getAllAddress = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: GET_USER_ALL_ADDRESSES_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(\n            `${API_URL}/account/all-address-details/`,\n            config\n        )\n\n        dispatch({\n            type: GET_USER_ALL_ADDRESSES_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GET_USER_ALL_ADDRESSES_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// get user single address\nexport const getSingleAddress = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: GET_SINGLE_ADDRESS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(\n            `${API_URL}/account/address-details/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: GET_SINGLE_ADDRESS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GET_SINGLE_ADDRESS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// create user address\nexport const createUserAddress = (addressData) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: CREATE_USER_ADDRESS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.post(\n            `${API_URL}/account/create-address/`,\n            addressData,\n            config\n        )\n\n        dispatch({\n            type: CREATE_USER_ADDRESS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CREATE_USER_ADDRESS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// update user address\nexport const updateUserAddress = (id, addressData) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: UPDATE_USER_ADDRESS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.put(\n            `${API_URL}/account/update-address/${id}/`,\n            addressData,\n            config\n        )\n\n        dispatch({\n            type: UPDATE_USER_ADDRESS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_USER_ADDRESS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// delete user address\nexport const deleteUserAddress = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: DELETE_USER_ADDRESS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.delete(\n            `${API_URL}/account/delete-address/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: DELETE_USER_ADDRESS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_USER_ADDRESS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n// get all orders\nexport const getAllOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: GET_ALL_ORDERS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(\n            `${API_URL}/account/all-orders-list/`,\n            config\n        )\n\n        dispatch({\n            type: GET_ALL_ORDERS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GET_ALL_ORDERS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Spinner, Form, Button, Card } from 'react-bootstrap'\nimport { chargeCustomer } from '../actions/cardActions'\nimport { Link, useHistory } from \"react-router-dom\";\nimport { getSingleAddress } from '../actions/userActions'\nimport Message from './Message'\n\n\nconst ChargeCardComponent = ({ product, match, selectedAddressId, addressSelected }) => {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    // create card reducer\n    const createCardReducer = useSelector(state => state.createCardReducer)\n    const { cardData } = createCardReducer\n\n    // charge card reducer\n    const chargeCardReducer = useSelector(state => state.chargeCardReducer)\n    const { success: chargeSuccessfull, error: chargeError, loading: chargingStatus } = chargeCardReducer\n\n    // get single address reducer    \n    const getSingleAddressReducer = useSelector(state => state.getSingleAddressReducer)\n    const { address } = getSingleAddressReducer\n\n    useEffect(() => {\n        dispatch(getSingleAddress(selectedAddressId))\n    }, [dispatch, match, selectedAddressId])\n\n    // charge card handler\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const address_detail = `${address.house_no}, near ${address.landmark}, ${address.city}, \n        ${address.state}, ${address.pin_code}`\n        const data = {\n            \"email\": cardData.email,\n            \"source\": cardData.id,\n            \"amount\": product.price,\n            \"name\": address.name,\n            \"card_number\": cardData.card_data.last4,\n            \"address\": address_detail,\n            \"ordered_item\": product.name,\n            \"paid_status\": true,\n            \"total_price\": product.price,\n            \"is_delivered\": false,\n            \"delivered_at\": \"Not Delivered\",\n        }\n        dispatch(chargeCustomer(data))\n    }\n\n    if (chargeSuccessfull) {\n        history.push({\n            pathname: '/payment-status/',\n            state: { detail: product }\n        })\n        window.location.reload()\n    }\n\n    return (\n        <div>\n            {chargeError ? <Message variant=\"danger\">{chargeError}</Message> : \"\"}\n            <span className=\"text-info\">\n                <h5>Confirm payment</h5>\n            </span>\n            <div className=\"mb-2\">\n                Using Card: XXXX XXXX XXXX {cardData.card_data.last4}\n            </div>\n            <Form onSubmit={onSubmit}>\n\n                {chargingStatus ?\n                    <Button variant=\"primary\" disabled style={{ width: \"100%\" }}>\n                        <Spinner\n                            as=\"span\"\n                            animation=\"grow\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                        />\n                        {\" \"}Processing Payment...\n                    </Button>\n                    :\n                    <Button variant=\"primary\" type=\"submit\" style={{ width: \"100%\" }}>\n                        Pay ₹{product.price}\n                    </Button>\n                }\n            </Form>\n\n            <Card\n                className=\"p-2 mt-2 mb-2\"\n                style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n            >\n                {address ?\n                    <div>\n                        <span className=\"text-info\">\n                            <b><em>Will be delievered at this address</em></b>\n                        </span>\n                        <p></p>\n                        <p><b>Name: </b>{address ? address.name : \"\"}</p>\n                        <p><b>Phone Number: </b>{address ? address.phone_number : \"\"}</p>\n                        <p><b>House Number: </b>{address ? address.house_no : \"\"}</p>\n                        <p><b>Landmark: </b>{address ? address.landmark : \"\"}</p>\n                        <p><b>City: </b>{address ? address.city : \"\"}</p>\n                        <p><b>State: </b>{address ? address.state : \"\"}</p>\n                        <p><b>Pin Code/Zip Code: </b>{address ? address.pin_code : \"\"}</p>\n                    </div>\n                    :\n                    \"\"\n                }\n            </Card>\n            <Link to=\"#\" onClick={() => window.location.reload()}>Select a different card to pay</Link>\n\n        </div >\n    )\n}\n\nexport default ChargeCardComponent\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Card } from 'react-bootstrap'\nimport { getAllAddress } from '../actions/userActions'\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction UserAddressComponent({ handleAddressId }) {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const updatehandleAddressId = (id) => {\n        handleAddressId(id)\n    }\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // get address list reducer\n    const getAllAddressesOfUserReducer = useSelector(state => state.getAllAddressesOfUserReducer)\n    const { addresses } = getAllAddressesOfUserReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(getAllAddress())\n        }\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            {addresses ? addresses.map((address, idx) => (\n                <div key={idx}>\n                    <Card\n                        className=\"p-2 mb-2\"\n                        style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                        key={address.id}\n\n                    >\n                        <input\n                            type=\"radio\"\n                            name=\"addressId\"\n                            value={0}\n                            onClick={() => updatehandleAddressId(address.id)}\n                        />                        \n                        <span><b>Name: </b>{address.name}</span>\n                        <span><b>Address: </b>\n                        {address.house_no}, {address.landmark}, {address.city}, \n                        {address.state}, {address.pin_code}</span>\n                    </Card>\n                </div>\n            ))\n                :\n                \"empty\"\n            }\n\n        </div >\n    )\n}\n\nexport default UserAddressComponent\n","import React, { useEffect, useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Row, Col, Container, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductDetails } from '../actions/productActions'\nimport CreateCardComponent from '../components/CreateCardComponent'\nimport ChargeCardComponent from '../components/ChargeCardComponent'\nimport Message from '../components/Message'\nimport { Spinner } from 'react-bootstrap'\nimport { savedCardsList } from '../actions/cardActions'\nimport UserAddressComponent from '../components/UserAddressComponent'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { CHARGE_CARD_RESET } from '../constants/index'\nimport BottomNavBar from '../components/BottomNavBar'\n\nconst CheckoutPage = ({ match }) => {\n\n    let history = useHistory()\n\n    const dispatch = useDispatch()\n    const [addressSelected, setAddressSelected] = useState(false)\n    const [selectedAddressId, setSelectedAddressId] = useState(0)\n\n    // set address id handler\n    const handleAddressId = (id) => {\n        if (id) {\n            setAddressSelected(true)\n        }\n        setSelectedAddressId(id)\n    }\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    // product details reducer\n    const productDetailsReducer = useSelector(state => state.productDetailsReducer)\n    const { loading, error, product } = productDetailsReducer\n\n    // create card reducer\n    const createCardReducer = useSelector(state => state.createCardReducer)\n    const { error: cardCreationError, success, loading: cardCreationLoading } = createCardReducer\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // saved cards list reducer\n    const savedCardsListReducer = useSelector(state => state.savedCardsListReducer)\n    const { stripeCards } = savedCardsListReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getProductDetails(match.params.id))\n            dispatch(savedCardsList())\n            dispatch({\n                type: CHARGE_CARD_RESET\n            })\n        }\n    }, [dispatch, match, history, success, userInfo])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    return (\n        <div>\n            {cardCreationError ? <Message variant='danger'>{cardCreationError}</Message> : \"\"}\n            {loading\n                &&\n                <span style={{ display: \"flex\" }}>\n                    <h5>Getting Checkout Info</h5>\n                    <span className=\"ml-2\">\n                        <Spinner animation=\"border\" />\n                    </span>\n                </span>}\n            {!loading && cardCreationLoading ?\n                <span style={{ display: \"flex\" }}>\n                    <h5>Checking your card</h5>\n                    <span className=\"ml-2\">\n                        <Spinner animation=\"border\" />\n                    </span>\n                </span> : \"\"}\n            {error ? <Message variant='danger'>{error}</Message> :\n                <Container>\n                    <Row>\n                        <Col xs={6}>\n                            <h3>Checkout Summary</h3>\n                            <Card className=\"mb-4\">\n                                <Card.Body>\n                                    <Container>\n                                        <Row>\n                                            <Col>\n                                                <Image src={product.image} alt=\"image\" height=\"180\" />\n                                            </Col>\n                                            <Col>\n                                                <h5 className=\"card-title text-capitalize\">\n                                                    {product.name}\n                                                </h5>\n                                                <span className=\"card-text text-success\">₹ {product.price}</span>\n                                            </Col>\n                                        </Row>\n                                    </Container>\n                                </Card.Body>\n                            </Card>\n\n                            <span style={{ display: \"flex\" }}>\n                                <h3>Billing Address</h3>\n                                <Link\n                                    className=\"ml-2 mt-2\"\n                                    to=\"/all-addresses/\"\n                                >\n                                    Edit/Add Address\n                                </Link>\n                            </span>\n                            <UserAddressComponent handleAddressId={handleAddressId} />\n                        </Col>\n                        <Col xs={6}>\n                            <h3>\n                                Payments Section\n                            </h3>\n                            {success ?\n                                <ChargeCardComponent\n                                    selectedAddressId={selectedAddressId}\n                                    addressSelected={addressSelected}\n                                    product={product}\n                                />\n                                :\n                                <CreateCardComponent\n                                    addressSelected={addressSelected}\n                                    stripeCards={stripeCards} />}\n                        </Col>\n                    </Row>\n                </Container>\n            }\n            <BottomNavBar />\n        </div>\n    )\n}\n\nexport default CheckoutPage","export default __webpack_public_path__ + \"static/media/logo.b76b78ec.jpeg\";","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { logout } from '../actions/userActions'\nimport { useHistory } from \"react-router-dom\";\nimport logo from '../assets/logo.jpeg'; // Import the logo image\n\nfunction NavBar() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // logout\n    const logoutHandler = () => {\n        dispatch(logout()) // action\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to=\"/\">\n                        <Navbar.Brand>\n                            <img\n                                src={logo}\n                                alt=\"Logo\"\n                                style={{ width: '40px', height: '40px', marginRight: '10px' }}\n                            />\n                        </Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n\n                            <LinkContainer to=\"/help\">\n                            <Nav.Link>Help</Nav.Link>\n                            </LinkContainer>\n                            <LinkContainer to=\"/about\">\n                            <Nav.Link>About Us</Nav.Link>\n                            </LinkContainer>\n\n                            {/* New Product (Admins Only) */}\n\n                            {userInfo && userInfo.admin ?\n                                <LinkContainer to=\"/new-product/\">\n                                    <Nav.Link >Add Product</Nav.Link>\n                                </LinkContainer>\n                                : \"\"\n                            }\n\n                            {/* Admin-only links (if user is admin) */}\n                            {userInfo && userInfo.isAdmin && (\n                                <LinkContainer to=\"/ad-approval\">\n                                    <Nav.Link>Approve Ads</Nav.Link>\n                                </LinkContainer>\n                            )}\n\n                        </Nav>\n\n                        {/* login-logout condition here */}\n\n                        {userInfo ?\n                            <div>\n                                <NavDropdown className=\"navbar-nav text-capitalize\" title={userInfo.username} id='username'>\n                                    <LinkContainer to=\"/account\">\n                                        <NavDropdown.Item>Account Settings</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to=\"/all-addresses/\">\n                                        <NavDropdown.Item>Address Settings</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to=\"/stripe-card-details/\">\n                                        <NavDropdown.Item>Card Settings</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to=\"/all-orders/\">\n                                        <NavDropdown.Item>All Orders</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <NavDropdown.Item onClick={logoutHandler}>\n                                        Logout\n                                    </NavDropdown.Item>\n                                </NavDropdown>\n                            </div>\n                            :\n\n                            <LinkContainer to=\"/login\">\n                                <Nav.Link><i className=\"fas fa-user\"></i> Login</Nav.Link>\n                            </LinkContainer>\n                        }\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default NavBar\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from 'react-router-dom'\nimport Message from \"./Message\"\n\nconst PaymentStatus = () => {\n    const location = useLocation()\n\n    const renderData = () => {\n\n        try {\n            const boughtData = location.state.detail\n\n            return (\n                <div>\n                    <h3 className=\"text-success\">Payment was Successfull</h3>\n                    <Card className=\"p-3\">\n                        Successfully bought\n                        <br />\n                        <span className=\"mb-2\" style={{ display: \"flex\" }}>\n                            {boughtData.name},\n                            ₹{boughtData.price} <i className=\"text-primary ml-1 mt-1 fas fa-check-circle\"></i>\n                        </span>\n                        <Link to=\"/all-orders/\">Go to orders page</Link>\n                    </Card>\n                </div>\n            )\n        } catch (error) {\n            return <Message variant='info'>Payment status not available.</Message>\n        }\n    }\n\n    return renderData()\n}\n\nexport default PaymentStatus\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { login } from '../actions/userActions'\nimport Message from '../components/Message';\n\n\nfunction LoginPage({ history }) {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const dispatch = useDispatch()\n\n    // reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { error, userInfo } = userLoginReducer\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/') // homepage\n        }\n    }, [history, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(username, password))\n    }\n\n    return (\n        <div>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>                    \n                    <h1>Sign In</h1>                    \n                    {error && <Message variant='danger'>{error}</Message>}\n                    <Form onSubmit={submitHandler}>\n                        <Form.Group controlId='username'>\n                            <Form.Label>\n                                Username\n                    </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"enter username\"\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='password'>\n                            <Form.Label>\n                                Password\n                    </Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"enter your password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Button type=\"submit\" variant='primary'>Sign In</Button>\n                    </Form>\n\n                    <Row className=\"py-3\">\n                        <Col>\n                            Do not have an account?\n                    <Link\n                                to={`/register`}\n                            > Register</Link>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </div>\n\n    )\n}\n\nexport default LoginPage","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { register } from '../actions/userActions'\nimport Message from '../components/Message'\n\nfunction RegisterPage({ history, variant }) {\n    const [username, setUsername] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n\n    const dispatch = useDispatch()\n\n    // reducer\n    const userRegisterReducer = useSelector(state => state.userRegisterReducer)\n    const { error, userInfo } = userRegisterReducer\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/') // homepage\n        }\n    }, [history, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match!')\n        } else {\n            dispatch(register(username, email, password))\n        }\n    }\n\n    return (\n        <div>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    <h1>Sign Up</h1>\n                    {message && <Message variant='danger'>{message}</Message>}\n                    {error && <Message variant='danger'>{error}</Message>}\n                    <Form onSubmit={submitHandler}>\n\n                        <Form.Group controlId='name'>\n                            <Form.Label>\n                                Username\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"enter your username\"\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='email'>\n                            <Form.Label>\n                                Email Address\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"email\"\n                                placeholder=\"enter your email\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='password'>\n                            <Form.Label>\n                                Password\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"password\"\n                                placeholder=\"enter your password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='passwordConfirm'>\n                            <Form.Label>\n                                Confirm Password\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"password\"\n                                placeholder=\"confirm your password\"\n                                value={confirmPassword}\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Button type=\"submit\" variant='primary'>Sign Up</Button>\n                    </Form>\n\n                    <Row className=\"py-3\">\n                        <Col>\n                            Already have an account?\n                    <Link\n                                to={`/login`}\n                            > Login</Link>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </div>\n\n    )\n}\n\nexport default RegisterPage","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { savedCardsList, updateStripeCard } from '../actions/cardActions'\nimport { Row, Col, Form, Button, Card } from 'react-bootstrap'\nimport { Spinner } from 'react-bootstrap'\nimport { UPDATE_STRIPE_CARD_RESET } from '../constants'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { useHistory } from 'react-router-dom'   \nimport BottomNavBar from '../components/BottomNavBar'; // Import the component\n\nconst CardUpdatePage = () => {\n\n    let history = useHistory()\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n\n    const dispatch = useDispatch()\n    const [cardNumber, setCardNumber] = useState(\"\")\n    const [name, setName] = useState(\"\")\n    const [expMonth, setExpMonth] = useState(\"\")\n    const [expYear, setExpYear] = useState(\"\")\n    const [addressCity, setAddressCity] = useState(\"\")\n    const [addressCountry, setAddressCountry] = useState(\"\")\n    const [addressState, setAddressState] = useState(\"\")\n    const [addressZip, setAddressZip] = useState(\"\")\n    const [customerId, setCustomerId] = useState(\"\")\n    const [cardId, setCardId] = useState(\"\")\n\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // saved cards list reducer\n    const savedCardsListReducer = useSelector(state => state.savedCardsListReducer)\n    const { stripeCards, loading } = savedCardsListReducer\n\n    // update card reducer\n    const updateStripeCardtReducer = useSelector(state => state.updateStripeCardtReducer)\n    const { success } = updateStripeCardtReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(savedCardsList())\n        }\n    }, [dispatch, history, userInfo, success])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (customerId && cardId) {\n            const all_card_data = {\n                card_number: cardNumber,\n                customer_id: customerId,\n                card_id: cardId,\n                exp_month: expMonth,\n                exp_year: expYear,\n                name_on_card: name,\n                address_city: addressCity,\n                address_country: addressCountry,\n                address_state: addressState,\n                address_zip: addressZip\n            }\n            // action\n            dispatch(updateStripeCard(all_card_data))\n        }\n    }\n\n    const setCustomerAndCardIds = (cus_Id, card_Id, c_num) => {\n        setCustomerId(cus_Id)\n        setCardId(card_Id)\n        setCardNumber(c_num)\n    }\n\n    if (success) {\n        alert(\"Card Successfully Updated\")\n        history.push(\"/stripe-card-details\")\n        dispatch({\n            type: UPDATE_STRIPE_CARD_RESET\n        })\n    }\n\n    return (\n        <div>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    <span\n                        className=\"d-flex justify-content-center\"\n                        style={{ display: \"flex\", marginBottom: \"15px\", color: \"#008080\" }}>\n                        <em>Update Card Details</em>\n                    </span>\n                    {loading && <Spinner animation=\"border\" />}\n                    {stripeCards.map((each, idx) => (\n                        <div key={idx}>\n                            <Card\n                                className=\"p-4 mb-4\"\n                                style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                            >\n                                <Form onSubmit={onSubmit}>\n\n                                    <Form.Group controlId='name'>\n                                        <Form.Label>\n                                            Name on Card\n                                        </Form.Label>\n                                        <Form.Control\n                                            autoFocus={true}\n                                            type=\"text\"\n                                            defaultValue={each.name_on_card}\n                                            placeholder=\"full name\"\n                                            onChange={(e) => setName(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='month'>\n                                        <Form.Label>\n                                            Exp Month\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            pattern=\"[0-9]+\"\n                                            maxLength=\"2\"\n                                            defaultValue={each.exp_month}\n                                            placeholder=\"exp month\"\n                                            onChange={(e) => setExpMonth(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='year'>\n                                        <Form.Label>\n                                            Exp Year\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            pattern=\"[0-9]+\"\n                                            defaultValue={each.exp_year}\n                                            placeholder=\"exp year\"\n                                            maxLength=\"4\"\n                                            onChange={(e) => setExpYear(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='city'>\n                                        <Form.Label>\n                                            Address City\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            defaultValue={each.address_city}\n                                            placeholder=\"address city\"\n                                            onChange={(e) => setAddressCity(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='country'>\n                                        <Form.Label>\n                                            Address Country\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            defaultValue={each.address_country}\n                                            placeholder=\"address country\"\n                                            onChange={(e) => setAddressCountry(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='state'>\n                                        <Form.Label>\n                                            Address State\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            defaultValue={each.address_state}\n                                            placeholder=\"address state\"\n                                            onChange={(e) => setAddressState(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='zip'>\n                                        <Form.Label>\n                                            Address Zip\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            defaultValue={each.address_zip}\n                                            placeholder=\"address zip\"\n                                            pattern=\"[0-9]+\"\n                                            maxLength=\"6\"\n                                            onChange={(e) => setAddressZip(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Button\n                                        type=\"submit\"\n                                        variant='success'\n                                        onClick={() => setCustomerAndCardIds(each.customer_id, each.card_id, each.card_number)}\n                                        style={{ width: \"100%\" }}\n                                        className=\"btn-sm button-focus-css\">\n                                        Save Changes\n                                    </Button>\n                                    <Button\n                                        type=\"submit\"\n                                        variant='primary'\n                                        onClick={() => history.push(\"/stripe-card-details/\")}\n                                        style={{ width: \"100%\" }}\n                                        className=\"btn-sm mt-2 button-focus-css\">\n                                        Cancel\n                                    </Button>\n                                </Form>\n                            </Card>\n                        </div>\n                    ))}\n                </Col>\n            </Row>\n            <BottomNavBar /> {/* Add the BottomNavBar */}\n        </div>\n    )\n}\n\nexport default CardUpdatePage\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { savedCardsList } from '../actions/cardActions'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { Spinner } from 'react-bootstrap'\nimport Message from \"../components/Message\"\nimport DeleteCardComponent from '../components/DeleteCardComponent'\nimport { useHistory } from 'react-router-dom'\nimport BottomNavBar from '../components/BottomNavBar'\n\n\nconst CardDetailsPage = () => {\n\n    let history = useHistory()\n\n    const dispatch = useDispatch()\n    const [userId, setUserId] = useState(0)\n    const [runCardDeleteHandler, setRunCardDeleteHandler] = useState(false)\n    const [deleteCardNumber, setDeleteCardNumber] = useState(\"\")\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    // saved cards list reducer\n    const savedCardsListReducer = useSelector(state => state.savedCardsListReducer)\n    const { stripeCards, loading } = savedCardsListReducer\n\n    // saved cards list reducer\n    const deleteSavedCardReducer = useSelector(state => state.deleteSavedCardReducer)\n    const { success } = deleteSavedCardReducer\n\n\n    // toggle run card delete handler\n    const toggleRunCardDeleteHandler = () => {\n        setRunCardDeleteHandler(!runCardDeleteHandler)\n    }\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(savedCardsList())\n        }\n    }, [dispatch, history, userInfo])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    // card deletion message\n    if (success) {\n        alert(\"Card successfully deleted.\")\n        window.location.reload()\n\n    }\n\n    return (\n        <div>\n            {loading && <span style={{ display: \"flex\" }}>\n                <h5>Getting Card Information</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n\n            {/* Modal Start*/}\n            <div>\n                <>\n                    <DeleteCardComponent\n                        userId={userId}\n                        deleteCardNumber={deleteCardNumber}\n                        runCardDeleteHandler={runCardDeleteHandler}\n                        toggleRunCardDeleteHandler={toggleRunCardDeleteHandler}\n                    />\n                </>\n            </div>\n\n            {stripeCards.length > 0 ? stripeCards.map((each, idx) => (\n                <div key={idx}>\n                    <Container>\n                        <Row className=\"mr-6 mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Name on Card:</Col>\n                            <Col className=\"p-3\">\n                                {each.name_on_card ? <span>\n                                    {each.name_on_card}\n                                </span>\n                                    : \"Not Set\"}\n                            </Col>\n\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Exp Month:</Col>\n                            <Col className=\"p-3\">{each.exp_month ? each.exp_month : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Exp Year:</Col>\n                            <Col className=\"p-3\">{each.exp_year ? each.exp_year : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mr-6 mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address City:</Col>\n                            <Col className=\"p-3\">{each.address_city ? each.address_city : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address Country:</Col>\n                            <Col className=\"p-3\">{each.address_country ? each.address_country : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address State:</Col>\n                            <Col className=\"p-3\">{each.address_state ? each.address_state : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address Zip:</Col>\n                            <Col className=\"p-3\">{each.address_zip ? each.address_zip : \"Not Set\"}</Col>\n                        </Row>\n                    </Container>\n                    <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <Link to=\"/stripe-card-update/\">Update Card details</Link>\n                        <span className=\"ml-1 text-primary\">| </span>\n                        <span className=\"ml-1\"></span>\n\n                        <Link to=\"#\"\n                            onClick={() => {\n                                setDeleteCardNumber(each.card_number)\n                                setUserId(each.user)\n                                setRunCardDeleteHandler(!runCardDeleteHandler)\n                            }}\n                        >Delete Card</Link>\n                    </span>\n                </div>\n            )) :\n                <div>\n                    <Message variant='info'>Card details not available.</Message>\n                </div>\n            }\n            <BottomNavBar />\n        </div>\n    )\n}\n\nexport default CardDetailsPage\n","import React, { useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { userDetails, logout, checkTokenValidation } from '../actions/userActions'\n//import { UPDATE_USER_ACCOUNT_RESET } from '../constants'\nimport Message from '../components/Message'\nimport { Spinner } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport BottomNavBar from '../components/BottomNavBar' // Import the BottomNavBar component\n\nfunction AccountPage() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // user details reducer\n    const userDetailsReducer = useSelector(state => state.userDetailsReducer)\n    const { user: userAccDetails, loading } = userDetailsReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            try {\n                dispatch(checkTokenValidation())\n                dispatch(userDetails(userInfo.id))\n            } catch (error) {\n                history.push(\"/\")\n            }\n        }\n    }, [history, userInfo, dispatch])\n\n    // logout\n    const logoutHandler = () => {\n        dispatch(logout()) // action\n    }\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    const renderData = () => {\n        try {\n\n            return (\n                <div>\n                    {loading && <span style={{ display: \"flex\" }}><h5>Getting User Information</h5><span className=\"ml-2\"><Spinner animation=\"border\" /></span></span>}\n                    <Container>\n                        <Row className=\"mr-6 mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Name:</Col>\n                            <Col className=\"p-3\">{userAccDetails.username}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Email:</Col>\n                            <Col className=\"p-3\">{userAccDetails.email}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Admin Privileges:</Col>\n                            <Col className=\"p-3\">{userAccDetails.admin ? \"Yes\" : \"No\"}</Col>\n                        </Row>\n                    </Container>\n                    <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <Link to={`/account/update`}>Update Account details</Link>\n                        <span className=\"ml-1 text-primary\">| </span>\n                        <span className=\"ml-1\"></span>\n\n                        <Link to={`/account/delete/`}>Delete Account</Link>\n                    </span>\n                </div>\n            )\n        } catch (error) {\n            return <Message variant='danger'>Something went wrong, go back to <Link\n                onClick={logoutHandler} to={`/login`}\n            > Login</Link> page.</Message>\n        }\n    }\n\n\n    return (\n        <>\n            {renderData()}\n            <BottomNavBar /> {/* Add the BottomNavBar component */}\n        </>\n    )\n\n}\n\nexport default AccountPage\n","import React, { useState, useEffect } from 'react'\nimport { Row, Col, Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { userDetails, userUpdateDetails, checkTokenValidation, logout } from '../actions/userActions'\nimport Message from '../components/Message'\nimport { Spinner } from 'react-bootstrap'\nimport {useHistory} from 'react-router-dom'\nimport { UPDATE_USER_DETAILS_RESET } from '../constants'\nimport BottomNavBar from '../components/BottomNavBar'\n\nfunction AccountUpdatePage() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n  \n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    const [username, setUsername] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // user details reducer\n    const userDetailsReducer = useSelector(state => state.userDetailsReducer)\n    const { user: userAccDetails, loading } = userDetailsReducer\n\n    // user update details reducer\n    const userDetailsUpdateReducer = useSelector(state => state.userDetailsUpdateReducer)\n    const { success } = userDetailsUpdateReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        }\n        dispatch(checkTokenValidation())\n        dispatch(userDetails(userInfo.id))\n    }, [dispatch, history, userInfo])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n      }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const updatedUsername = username === \"\" ? userAccDetails.username : username\n        const updatedEmail = email === \"\" ? userAccDetails.email : email\n\n        if (password !== confirmPassword) {\n            alert(\"Passwords do not match\")\n        } else {\n            const userData = {\n                'username': updatedUsername,\n                'email': updatedEmail,\n                'password': password,\n            }\n            dispatch(userUpdateDetails(userData))\n        }\n    }\n\n    // logout\n    const logoutHandler = () => {\n        history.push(\"/login\")\n        dispatch(logout()) // action        \n    }\n\n    if(success) {\n        alert(\"Account successfully updated.\")\n        dispatch({\n            type: UPDATE_USER_DETAILS_RESET\n        })\n        history.push(\"/account/\")\n        dispatch(userDetails(userInfo.id))\n    }\n\n    const renderData = () => {\n        try {\n            return (\n                <div>\n                    <Row className='justify-content-md-center'>\n                        <Col xs={12} md={6}>\n                            <span\n                                className=\"d-flex justify-content-center\"\n                                style={{ display: \"flex\", marginBottom: \"15px\", color: \"#008080\" }}>\n                                <em>Update User Details</em>\n                            </span>\n                            {loading && <Spinner animation=\"border\" />}\n                            <Form onSubmit={onSubmit}>\n\n                                <Form.Group controlId='username'>\n                                    <Form.Label>\n                                        Username\n                                    </Form.Label>\n                                    <Form.Control\n                                        autoFocus={true}\n                                        type=\"text\"\n                                        defaultValue={userAccDetails.username}\n                                        placeholder=\"username\"\n                                        onChange={(e) => setUsername(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='email'>\n                                    <Form.Label>\n                                        Email Address\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"email\"\n                                        placeholder=\"enter email\"\n                                        defaultValue={userAccDetails.email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='password'>\n                                    <Form.Label>\n                                        Reset-Password\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"password\"\n                                        placeholder=\"enter new password\"\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='confirmPassword'>\n                                    <Form.Label>\n                                        Confirm Password\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"password\"\n                                        placeholder=\"confirm new password\"\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Button type=\"submit\" variant='success' className=\"btn-sm\">Save Changes</Button>\n                                <Link to={`/account`}>\n                                    <button className=\"btn btn-primary btn-sm ml-2\" type=\"button\">\n                                        Cancel\n                                    </button>\n                                </Link>\n                            </Form>\n                        </Col>\n                    </Row>\n                    <BottomNavBar />\n                </div>\n            )\n        } catch (error) {\n            return (\n                <Message variant=\"danger\">\n                    An error occurred. Please <Link onClick={logoutHandler} to={`/login`}>Login</Link> again.\n                </Message>\n            );\n        }\n    }\n\n    return renderData()\n}\n\nexport default AccountUpdatePage\n","import React, { useState } from 'react'\nimport { Row, Col, Button, Form } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { logout, userAccountDelete, checkTokenValidation } from '../actions/userActions'\nimport Message from '../components/Message'\nimport { Spinner } from 'react-bootstrap'\nimport { useHistory } from \"react-router-dom\";\nimport { DELETE_USER_ACCOUNT_RESET } from '../constants'\nimport BottomNavBar from '../components/BottomNavBar'; // Import the component\n\nfunction DeleteUserAccount() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n    const [myPassword, setMyPassword] = useState(\"\")\n\n    \n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // delete user account reducer\n    const deleteUserAccountReducer = useSelector(state => state.deleteUserAccountReducer)\n    const { success, loading, error } = deleteUserAccountReducer\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const userData = {\n            \"id\": userInfo.id,\n            \"password\": myPassword\n        }\n        dispatch(checkTokenValidation())        \n        dispatch(userAccountDelete(userData))        \n    }\n    \n    if(success) {\n        alert(\"Account successfully deleted.\")\n        dispatch({\n            type: DELETE_USER_ACCOUNT_RESET\n        })\n        dispatch(logout()) // action\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    return (\n        <div>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    <h3>Confirm your password to delete your account.</h3>\n                    {loading && <span style = {{ display: \"flex\" }}><h5>Please wait</h5><span className = \"ml-2\"><Spinner animation=\"border\" /></span></span>}                    \n                    {error && <Message variant='danger'>Incorrect Password!</Message>}        \n                    <div className=\"mt-4\">\n                        <Form onSubmit={onSubmit}>\n                            <Form.Group controlId='password'>\n                                <Form.Label>\n                                    Password\n                            </Form.Label>\n                                <Form.Control\n                                    required\n                                    type=\"password\"\n                                    placeholder=\"enter your password\"\n                                    value={myPassword}\n                                    onChange={(e) => setMyPassword(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Button type=\"submit\" variant=\"danger\">Confirm Delete</Button>\n                        </Form>\n                    </div>\n                </Col>\n            </Row>\n            <BottomNavBar /> {/* Add the BottomNavBar */}\n        </div>\n    )\n}\n\nexport default DeleteUserAccount\n","import React, { useState } from 'react'\nimport { Form, Button, Card, InputGroup } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createUserAddress, getAllAddress } from '../actions/userActions'\nimport { CREATE_USER_ADDRESS_RESET } from '../constants'\nimport Message from './Message'\n\n\nconst CreateAddressComponent = ({ toggleCreateAddress }) => {\n\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState(\"\")\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\n    const [pinCode, setPinCode] = useState(\"\")\n    const [houseNumber, setHouseNumber] = useState(\"\")\n    const [landmark, setLandmark] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n    const [state, setState] = useState(\"\")\n\n    // Create User Address Reducer\n    const createUserAddressReducer = useSelector(state => state.createUserAddressReducer)\n    const { success: addressCreationSuccess, error: errorCreatingAddress } = createUserAddressReducer\n\n    const addressSubmitHandler = (e) => {\n        e.preventDefault()\n        const addressData = {\n            \"name\": name,\n            \"phone_number\": phoneNumber,\n            \"pin_code\": pinCode,\n            \"house_no\": houseNumber,\n            \"landmark\": landmark,\n            \"city\": city,\n            \"state\": state,\n        }\n        dispatch(createUserAddress(addressData))\n    }\n\n    if (addressCreationSuccess) {\n        alert(\"Address successfully created.\")\n        toggleCreateAddress()\n        dispatch({\n            type: CREATE_USER_ADDRESS_RESET\n        })\n        dispatch(getAllAddress())\n    }\n\n    return (\n        <div>\n            <p className=\"text-center text-info\"><em>New Address</em></p>\n            {errorCreatingAddress\n                ? <Message variant='danger'>\n                    {errorCreatingAddress}\n                </Message>\n                :\n                \"\"}\n            <Card\n                className=\"mx-auto mb-4\"\n                style={{ width: \"50%\", border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n            >\n                <Card.Body>\n                    <Form onSubmit={addressSubmitHandler}>\n\n                        <Form.Group controlId='name'>\n                            <Form.Label>\n                                Name\n                            </Form.Label>\n                            <Form.Control\n                                autoFocus={true}\n                                type=\"text\"\n                                placeholder=\"enter your name\"\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='phoneNumber'>\n                            <Form.Label>\n                                Phone Number\n                            </Form.Label>\n                            <InputGroup>\n                                <InputGroup.Text>+91</InputGroup.Text>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"phone number\"\n                                    pattern=\"[0-9]+\"\n                                    maxLength=\"10\"\n                                    value={phoneNumber}\n                                    onChange={(e) => setPhoneNumber(e.target.value)}\n                                >\n                                </Form.Control>\n                            </InputGroup>\n                        </Form.Group>\n\n                        <Form.Group controlId='pinCode'>\n                            <Form.Label>\n                                Pin Code\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"pin code\"\n                                value={pinCode}\n                                pattern=\"[0-9]+\"\n                                maxLength=\"6\"\n                                onChange={(e) => setPinCode(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='houseNumber'>\n                            <Form.Label>\n                                House No./Address\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"house number\"\n                                value={houseNumber}\n                                onChange={(e) => setHouseNumber(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='landmark'>\n                            <Form.Label>\n                                Landmark\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"landmark\"\n                                value={landmark}\n                                onChange={(e) => setLandmark(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='city'>\n                            <Form.Label>\n                                City\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"city\"\n                                value={city}\n                                onChange={(e) => setCity(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='state'>\n                            <Form.Label>\n                                State\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"state\"\n                                value={state}\n                                onChange={(e) => setState(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Button\n                            style={{ width: \"100%\" }}\n                            className=\"btn-sm\"\n                            type=\"submit\"\n                            variant=\"success\"\n                        >\n                            Save Address\n                        </Button>\n                        <Button\n                            style={{ width: \"100%\" }}\n                            className=\"btn-sm mt-2\"\n                            variant=\"primary\"\n                            onClick={() => toggleCreateAddress()}>\n                            Cancel\n                        </Button>\n                    </Form>\n\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default CreateAddressComponent\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Card, Modal, Button, Spinner } from 'react-bootstrap'\nimport { deleteUserAddress, getAllAddress, checkTokenValidation, logout } from '../actions/userActions'\nimport { DELETE_USER_ADDRESS_RESET, GET_SINGLE_ADDRESS_RESET } from '../constants'\nimport { useHistory } from 'react-router-dom'\nimport CreateAddressComponent from '../components/CreateAddressComponent'\nimport BottomNavBar from '../components/BottomNavBar'\n\n\nfunction AllAddressesOfUserPage() {\n\n    let history = useHistory()\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n\n    const dispatch = useDispatch()\n    const [deleteAddress, setDeleteAddress] = useState(\"\")\n    const [createAddress, setCreateAddress] = useState(false)\n\n    // modal state and functions\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // get address list reducer\n    const getAllAddressesOfUserReducer = useSelector(state => state.getAllAddressesOfUserReducer)\n    const { addresses, loading: loadingAllAddresses } = getAllAddressesOfUserReducer\n\n    // get address list reducer\n    const deleteUserAddressReducer = useSelector(state => state.deleteUserAddressReducer)\n    const { success: addressDeletionSuccess } = deleteUserAddressReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getAllAddress())\n            dispatch({\n                type: GET_SINGLE_ADDRESS_RESET\n            })\n        }\n    }, [dispatch, history, userInfo, addressDeletionSuccess])\n\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    if (addressDeletionSuccess) {\n        alert(\"Address successfully deleted.\")\n        dispatch({\n            type: DELETE_USER_ADDRESS_RESET\n        })\n        dispatch(getAllAddress())\n    }\n\n    // address deletion handler\n    const deleteAddressHandler = (address) => {\n        setDeleteAddress(address)\n        handleShow()\n    }\n\n    // address delete confirmation\n    const confirmDelete = (id) => {\n        dispatch(deleteUserAddress(id))\n        handleClose()\n    }\n\n    // toggle Create Address Button\n    const toggleCreateAddress = () => {\n        setCreateAddress(!createAddress)\n    }\n\n\n    return (\n        <div>\n\n            {/* Modal Start*/}\n            <div>\n                <>\n                    <Modal show={show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>\n                                <i style={{ color: \"#e6e600\" }} className=\"fas fa-exclamation-triangle\"></i>\n                                {\" \"}\n                                Delete Confirmation\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            Are you sure you want to delete this address\n                            {\" \"}<em>\"{deleteAddress.house_no}, {deleteAddress.city}, {deleteAddress.state}\"</em>?\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"danger\" onClick={() => confirmDelete(deleteAddress.id)}>\n                                Confirm Delete\n                            </Button>\n                            <Button variant=\"primary\" onClick={handleClose}>\n                                Cancel\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                </>\n            </div>\n\n            {/* Modal End */}\n\n            {/* loading spinner conditions */}\n\n            {loadingAllAddresses && <span style={{ display: \"flex\" }}>\n                <h5>Getting addresses</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n\n            {/* Create Address */}\n            {createAddress ?\n                <div>\n                    <CreateAddressComponent toggleCreateAddress={toggleCreateAddress} />\n                </div>\n                :\n                <button\n                    className=\"btn btn-sm btn-primary mb-2 button-focus-css\"\n                    onClick={() => toggleCreateAddress()}\n                >\n                    Add new address +\n                </button>\n            }\n\n            {addresses && !createAddress ? addresses.map((address, idx) => (\n                <div key={idx}>\n                    <Card\n                        className=\"p-2 mb-2\"\n\n                        style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                        key={address.id}\n\n                    >\n                        <span><b>Name: </b>{address.name}</span>\n                        <span><b>Phone No: </b>+91 {address.phone_number}</span>\n                        <span><b>Address: </b>{address.house_no},\n                            near {address.landmark}, {address.city}, {address.state},\n                            {address.pin_code}\n\n                            {/* Delete Address Buttton */}\n\n                            <span\n                                onClick={() => deleteAddressHandler(address)}>\n                                <i\n                                    title=\"delete address\"\n                                    className=\"mt-2 fas fa-trash-alt fa-lg delete-button-css\"\n                                ></i>\n                            </span>\n\n                            {/* Edit Address Buttton */}\n\n                            <span\n                                onClick={() => history.push(`/all-addresses/${address.id}/`)}>\n                                <i\n                                    title=\"edit address\"\n                                    className=\"mt-2 mr-2 fas fa-edit fa-lg edit-button-css\"\n                                ></i>\n                            </span>\n\n                        </span>\n\n                    </Card>\n                </div>\n            ))\n                :\n                \"\"\n            }\n\n            <BottomNavBar />\n        </div >\n    )\n}\n\nexport default AllAddressesOfUserPage\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, Button, Card } from 'react-bootstrap'\nimport { checkTokenValidation, getAllAddress, getSingleAddress, logout, updateUserAddress } from '../actions/userActions'\nimport { useHistory } from 'react-router-dom'\nimport { UPDATE_USER_ADDRESS_RESET } from '../constants'\n\nconst AddressUpdatePage = ({ match }) => {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState(\"\")\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\n    const [pinCode, setPinCode] = useState(\"\")\n    const [houseNumber, setHouseNumber] = useState(\"\")\n    const [landmark, setLandmark] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n    const [state, setState] = useState(\"\")\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    // get single address reducer    \n    const getSingleAddressReducer = useSelector(state => state.getSingleAddressReducer)\n    const { address, error: errorFetchingAddress } = getSingleAddressReducer\n\n    // get single address reducer    \n    const updateUserAddressReducer = useSelector(state => state.updateUserAddressReducer)\n    const { success: addressUpdateSuccess } = updateUserAddressReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getSingleAddress(match.params.id))\n        }\n    }, [dispatch, history, userInfo, match])\n\n    // token validation check\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    const addressSubmitHandler = (e) => {\n        e.preventDefault()\n        const updatedAddress = {\n            \"name\": name,\n            \"phone_number\": phoneNumber,\n            \"pin_code\": pinCode,\n            \"house_no\": houseNumber,\n            \"landmark\": landmark,\n            \"city\": city,\n            \"state\": state,\n        }\n        dispatch(updateUserAddress(match.params.id, updatedAddress))\n    }\n\n    if(addressUpdateSuccess) {\n        alert(\"Address updated successfully.\")\n        dispatch({\n            type: UPDATE_USER_ADDRESS_RESET\n        })\n        history.push(\"/all-addresses/\")\n        dispatch(getAllAddress())\n    }\n\n    return (\n        <div>\n            <p className=\"text-center text-info\"><em>Update Address</em></p>\n            {errorFetchingAddress && <h3>Invalid Address Request</h3>}\n            <Card\n                className=\"mx-auto mb-4\"\n                style={{ width: \"50%\", border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n            >\n                <Card.Body>\n                    <Form onSubmit={addressSubmitHandler}>\n\n                        <Form.Group controlId='name'>\n                            <Form.Label>\n                                Name\n                            </Form.Label>\n                            <Form.Control\n                                autoFocus={true}\n                                type=\"text\"\n                                placeholder=\"enter your name\"\n                                defaultValue={address ? address.name : \"\"}\n                                onChange={(e) => setName(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='phoneNumber'>\n                            <Form.Label>\n                                Phone Number\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"phone number\"\n                                pattern=\"[0-9]+\"\n                                maxLength=\"10\"\n                                defaultValue={address ? address.phone_number : \"\"}\n                                onChange={(e) => setPhoneNumber(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='pinCode'>\n                            <Form.Label>\n                                Pin Code\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"pin code\"\n                                defaultValue={address ? address.pin_code : \"\"}\n                                pattern=\"[0-9]+\"\n                                maxLength=\"6\"\n                                onChange={(e) => setPinCode(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='houseNumber'>\n                            <Form.Label>\n                                House No./Address\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"house number\"\n                                defaultValue={address ? address.house_no : \"\"}\n                                onChange={(e) => setHouseNumber(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='landmark'>\n                            <Form.Label>\n                                Landmark\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"landmark\"\n                                defaultValue={address ? address.landmark : \"\"}\n                                onChange={(e) => setLandmark(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='city'>\n                            <Form.Label>\n                                City\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"city\"\n                                defaultValue={address ? address.city : \"\"}\n                                onChange={(e) => setCity(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='state'>\n                            <Form.Label>\n                                State\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"state\"\n                                defaultValue={address ? address.state : \"\"}\n                                onChange={(e) => setState(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n\n                        <Button\n                            style={{ width: \"100%\" }}\n                            className=\"btn-sm\"\n                            type=\"submit\"\n                            variant=\"success\"\n                        >\n                            Save Changes\n                        </Button>\n\n                        <Button\n                            style={{ width: \"100%\" }}\n                            className=\"btn-sm mt-2\"\n                            variant=\"primary\"\n                            onClick={() => history.push(\"/all-addresses/\")}\n                        >\n                            Cancel\n                        </Button>\n\n\n                    </Form>\n\n                </Card.Body>\n            </Card>\n        </div >\n    )\n}\n\nexport default AddressUpdatePage\n","export const dateCheck = (param) => {\n    //console.log(\"dateCheck ===>\", param)\n    // Example: 2021-01-12\n    const dateValue = param.slice(8, 10);\n    const monthValue = param.slice(5, 7);\n    const yearValue = param.slice(0, 4);\n  \n    switch (monthValue) {\n      case \"01\":\n        return `${dateValue} January ${yearValue}`;\n      case \"02\":\n        return `${dateValue} Feburary ${yearValue}`;\n      case \"03\":\n        return `${dateValue} March ${yearValue}`;\n      case \"04\":\n        return `${dateValue} April ${yearValue}`;\n      case \"05\":\n        return `${dateValue} May ${yearValue}`;\n      case \"06\":\n        return `${dateValue} June ${yearValue}`;\n      case \"07\":\n        return `${dateValue} July ${yearValue}`;\n      case \"08\":\n        return `${dateValue} August ${yearValue}`;\n      case \"09\":\n        return `${dateValue} September ${yearValue}`;\n      case \"10\":\n        return `${dateValue} October ${yearValue}`;\n      case \"11\":\n        return `${dateValue} November ${yearValue}`;\n      case \"12\":\n        return `${dateValue} December ${yearValue}`;\n      default:\n        return null;\n    }\n  };\n","import React, { useState } from 'react'\n\nconst SearchBarForOrdersPage = ({ handleSearchTerm, placeholderValue }) => {\n\n    const [searchTerm, setSearchTerm] = useState(\"\")\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        handleSearchTerm(searchTerm);\n    };\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <span\n                    style={{ display: \"flex\" }}\n                    className=\"\"\n                >\n                    <input\n                        type=\"text\"\n                        value={searchTerm}\n                        placeholder={placeholderValue}\n                        className=\"form-control\"\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                    />\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-primary ml-2 button-focus-css\"\n                    ><i className=\"fas fa-search\"></i>\n                    </button>\n                </span>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchBarForOrdersPage\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { checkTokenValidation, getAllOrders, logout } from '../actions/userActions'\nimport { useHistory } from 'react-router-dom'\nimport { Table, Spinner } from 'react-bootstrap'\nimport { dateCheck } from '../components/GetDate'\nimport { changeDeliveryStatus } from '../actions/productActions'\nimport { CHANGE_DELIVERY_STATUS_RESET } from '../constants'\nimport SearchBarForOrdersPage from '../components/SearchBarForOrdersPage'\nimport Message from '../components/Message'\nimport BottomNavBar from '../components/BottomNavBar'\n\nfunction OrdersListPage() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n    const placeholderValue = \"Search orders by Customer Name, Address or by Ordered Item\"\n\n    const todays_date = dateCheck(new Date().toISOString().slice(0, 10))\n\n    const [currentDateInfo] = useState(todays_date)\n    const [idOfchangeDeliveryStatus, setIdOfchangeDeliveryStatus] = useState(0)\n    const [cloneSearchTerm, setCloneSearchTerm] = useState(\"\")\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // get all orders reducer\n    const getAllOrdersReducer = useSelector(state => state.getAllOrdersReducer)\n    const { orders, loading: loadingOrders } = getAllOrdersReducer\n\n    // change delivery status reducer\n    const changeDeliveryStatusReducer = useSelector(state => state.changeDeliveryStatusReducer)\n    const { success: deliveryStatusChangeSuccess, loading: deliveryStatusChangeSpinner } = changeDeliveryStatusReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getAllOrders())\n        }\n    }, [userInfo, dispatch, history])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    const changeDeliveryStatusHandler = (id, status) => {\n        setIdOfchangeDeliveryStatus(id)\n        const productData = {\n            \"is_delivered\": status,\n            \"delivered_at\": status ? currentDateInfo : \"Not Delivered\"\n        }\n        dispatch(changeDeliveryStatus(id, productData))\n    }\n\n    if (deliveryStatusChangeSuccess) {\n        alert(\"Delivery status changed successfully\")\n        dispatch({\n            type: CHANGE_DELIVERY_STATUS_RESET\n        })\n        dispatch(getAllOrders())\n    }\n\n    const handleSearchTerm = (term) => {\n        setCloneSearchTerm(term)\n    };\n\n\n    return (\n        <div>\n            {loadingOrders && <span style={{ display: \"flex\" }}>\n                <h5>Getting Orders</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n            {userInfo.admin && <SearchBarForOrdersPage handleSearchTerm={handleSearchTerm} placeholderValue={placeholderValue} />}\n                {orders.length > 0 ?\n                <Table className=\"mt-2\" striped bordered>\n                    <thead>\n                        <tr className=\"p-3 bg-info text-white text-center\">\n                            <th>Order Id</th>\n                            <th>Customer Name</th>\n                            <th>Card Used</th>\n                            <th>Delivery Address</th>\n                            <th>Ordered Item</th>\n                            <th>Paid Status</th>\n                            <th>Paid On</th>\n                            <th>Total Amount</th>\n                            <th>Delivered Status</th>\n                            <th>Delivered On</th>\n                            {userInfo.admin &&\n                                <th>Delivery Status</th>\n                            }\n                        </tr>\n                    </thead>\n\n                    {/* filter orders by name, address or ordered item */}\n\n                    {orders.filter((item) => (\n\n                        item.name.toLowerCase().includes(cloneSearchTerm)\n                        ||\n                        item.ordered_item.toLowerCase().includes(cloneSearchTerm)\n                        ||\n                        item.address.toLowerCase().includes(cloneSearchTerm)\n                    )\n\n                    ).map((order, idx) => (\n                        <tbody key={idx}>\n                            <tr className=\"text-center\">\n                                <td>\n                                    {order.id}\n                                </td>\n                                <td>{order.name}</td>\n                                <td>{order.card_number}</td>\n                                <td>{order.address}</td>\n                                <td>{order.ordered_item}</td>\n                                <td>{order.paid_status ?\n                                    <i className=\"fas fa-check-circle text-success\"></i>\n                                    :\n                                    <i className=\"fas fa-times-circle text-danger\"></i>\n                                }</td>\n                                <td>{dateCheck(order.paid_at)}</td>\n                                <td>{order.total_price} INR</td>\n                                <td>{order.is_delivered ?\n                                    <i className=\"fas fa-check-circle text-success\"></i>\n                                    :\n                                    <i className=\"fas fa-times-circle text-danger\"></i>\n                                }</td>\n                                <td>{order.delivered_at}</td>\n                                {userInfo.admin &&\n                                    <td>\n                                        {order.is_delivered ?\n                                            <button\n                                                className=\"btn btn-outline-danger btn-sm\"\n                                                onClick={() => changeDeliveryStatusHandler(order.id, false)}\n                                            >\n                                                {deliveryStatusChangeSpinner\n                                                    &&\n                                                    idOfchangeDeliveryStatus === order.id\n                                                    ?\n                                                    <Spinner animation=\"border\" />\n                                                    :\n                                                    \"Mark as Undelivered\"}\n                                            </button>\n                                            :\n                                            <button\n                                                className=\"btn btn-outline-primary btn-sm\"\n                                                onClick={() => changeDeliveryStatusHandler(order.id, true)}\n                                            >\n                                                {deliveryStatusChangeSpinner\n                                                    &&\n                                                    idOfchangeDeliveryStatus === order.id\n                                                    ?\n                                                    <Spinner animation=\"border\" />\n                                                    :\n                                                    \"Mark as delivered\"}\n                                            </button>\n                                        }\n                                    </td>\n                                }\n                            </tr>\n                        </tbody>\n                    ))}\n                </Table>\n                : <Message variant=\"info\">No orders yet.</Message> }\n            <BottomNavBar />\n        </div>\n    )\n}\n\nexport default OrdersListPage","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = () => {\n    return (\n        <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '100vh' }}>\n            <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n        </div>\n    );\n};\n\nexport default Loader;\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, Button } from 'react-bootstrap'\nimport { createProduct } from '../actions/productActions'\nimport { useHistory } from 'react-router'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { CREATE_PRODUCT_RESET } from '../constants'\nimport Message from '../components/Message';\nimport Loader from '../components/Loader'; // Import a loader component\nimport BottomNavBar from '../components/BottomNavBar'; // Import the component\n\nconst ProductCreatePage = () => {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [price, setPrice] = useState(\"\")\n    const [stock, setStock] = useState(false)\n    const [image, setImage] = useState(null)\n    const [category, setCategory] = useState(\"\")\n    const [categories, setCategories] = useState([])\n    const [loading, setLoading] = useState(false); // State to manage loader visibility\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // create product reducer\n    const createProductReducer = useSelector(state => state.createProductReducer)\n    const { product, success: productCreationSuccess, error: productCreationError } = createProductReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        }\n        dispatch(checkTokenValidation())\n\n        // Fetch categories from the backend\n        const fetchCategories = async () => {\n            try {\n                const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/categories/`)\n                const data = await response.json()\n                setCategories(data)\n            } catch (error) {\n                console.error(\"Failed to fetch categories:\", error)\n            }\n        }\n        fetchCategories()\n    }, [dispatch, userInfo, history])\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        let form_data = new FormData();\n        form_data.append('name', name);\n        form_data.append('description', description);\n        form_data.append('price', price);\n        form_data.append('stock', stock);\n        form_data.append('image', image);\n        form_data.append('category', category);\n\n        console.log(\"Submitting form data:\", Object.fromEntries(form_data.entries())); // Log form data for debugging\n\n        dispatch(createProduct(form_data)).finally(() => setLoading(false));\n    };\n\n    if (productCreationSuccess) {\n        alert(\"Product successfully created.\");\n        history.push(`/product/${product.id}/`);\n        dispatch({\n            type: CREATE_PRODUCT_RESET\n        });\n    }\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\");\n        dispatch(logout());\n        history.push(\"/login\");\n        window.location.reload();\n    }\n\n    return (\n        <div>\n            {loading && <Loader />} {/* Display loader when loading is true */}\n            {productCreationError && (\n                <Message variant='danger'>\n                    {typeof productCreationError === 'string'\n                        ? productCreationError\n                        : productCreationError.image\n                        ? productCreationError.image[0]\n                        : \"An error occurred\"}\n                </Message>\n            )}\n            <span\n                className=\"d-flex justify-content-center text-info\"\n                >\n                <em>New Product</em>\n            </span>\n            <Form onSubmit={onSubmit}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>\n                        <b>\n                            Product Name\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        required\n                        autoFocus={true}\n                        type=\"text\"\n                        value={name}\n                        placeholder=\"product name\"\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='description'>\n                    <Form.Label>\n                        <b>\n                            Product Description\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        value={description}\n                        placeholder=\"product description\"\n                        onChange={(e) => setDescription(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='price'>\n                    <Form.Label>\n                        <b>\n                            Price\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        pattern=\"[0-9]+(\\.[0-9]{1,2})?%?\"\n                        value={price}\n                        placeholder=\"199.99\"\n                        step=\"0.01\"\n                        maxLength=\"8\"\n                        onChange={(e) => setPrice(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <span style={{ display: \"flex\" }}>\n                    <label>In Stock</label>\n                    <input\n                        type=\"checkbox\"\n                        value={stock}\n                        className=\"ml-2 mt-2\"\n                        onChange={() => setStock(!stock)}\n                    />\n                </span>\n\n                <Form.Group controlId='image'>\n                    <Form.Label>\n                        <b>\n                            Product Image\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        required\n                        type=\"file\"\n                        onChange={(e) => setImage(e.target.files[0])}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='category'>\n                    <Form.Label>\n                        <b>Category</b>\n                    </Form.Label>\n                    <Form.Control\n                        as=\"select\"\n                        required\n                        value={category}\n                        onChange={(e) => setCategory(e.target.value)}\n                    >\n                        <option value=\"\">Select Category</option>\n                        {categories.map((cat) => (\n                            <option key={cat.id} value={cat.id}>\n                                {cat.name}\n                            </option>\n                        ))}\n                    </Form.Control>\n                </Form.Group>\n\n                <Button\n                    type=\"submit\"\n                    variant='success'\n                    className=\"btn-sm button-focus-css\"\n                >\n                    {loading ? <Loader /> : \"Save Product\"} {/* Replace text with loader */}\n                </Button>\n                <Button\n                    type=\"button\"\n                    variant='primary'\n                    className=\"btn-sm ml-2 button-focus-css\"\n                    onClick={() => history.push(\"/\")}\n                >\n                    Cancel\n                </Button>\n            </Form>\n            <BottomNavBar /> {/* Add the BottomNavBar */}\n        </div>\n    )\n}\n\nexport default ProductCreatePage\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Spinner } from 'react-bootstrap'\nimport { getProductDetails, updateProduct } from '../actions/productActions'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { UPDATE_PRODUCT_RESET } from '../constants'\nimport Message from '../components/Message'\nimport BottomNavBar from '../components/BottomNavBar'\n\nconst ProductUpdatePage = ({ match }) => {\n\n    // product details reducer\n    const productDetailsReducer = useSelector(state => state.productDetailsReducer)\n    const { loading: loadingPageDetails, product } = productDetailsReducer\n\n    // as our errors will be displayed at the top of the webpage\n    const scrollToTop = () => {\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n        });\n    }\n\n\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [price, setPrice] = useState(\"\")\n    const [stock, setStock] = useState(product.stock)\n    const [image, setImage] = useState(\"\")\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const [newImage, setNewImage] = useState(false)\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // product details reducer\n    const updateProductReducer = useSelector(state => state.updateProductReducer)\n    const {\n        success: productUpdationSuccess,\n        loading: loadingProductUpdations,\n        error: productUpdationError\n    } = updateProductReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n    \n    // get product details\n    useEffect(() => {\n        if (!userInfo || !userInfo.admin) {\n            history.push(\"/login\")\n        }\n        dispatch(checkTokenValidation())\n        dispatch(getProductDetails(match.params.id))\n    }, [dispatch, userInfo, history, match])\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const productId = product.id\n        let form_data = new FormData()\n        form_data.append('name', name)\n        form_data.append('description', description)\n        form_data.append('price', price)\n        form_data.append('stock', stock)\n        form_data.append('image', image)\n\n        dispatch(updateProduct(productId, form_data))\n    }\n\n    if (productUpdationSuccess) {\n        alert(\"Product successfully updated.\")\n        dispatch({\n            type: UPDATE_PRODUCT_RESET\n        })\n        history.push(`/product/${product.id}`)\n    }\n\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    return (\n        <div>\n            <span\n                className=\"d-flex justify-content-center text-info\"\n            >\n                <em>Edit Product</em>\n            </span>\n            {productUpdationError ? (\n                <div>\n                    {scrollToTop()}\n                    <Message variant='danger'>{productUpdationError.image[0]}</Message>\n                </div>\n            ) : \"\"}\n            {loadingPageDetails && <span style={{ display: \"flex\" }}>\n                <h5>Getting Product Details</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n            {loadingProductUpdations ? <span style={{ display: \"flex\" }}>\n                <h5>Updating Product</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span> : \"\"}\n            <Form onSubmit={onSubmit}>\n\n                <Form.Group controlId='image'>\n                    <Form.Label>\n                        <b>\n                            Product Image\n                        </b>\n                    </Form.Label>\n                    <p>\n                        <img src={product.image} alt={product.name} height=\"200\" />\n                    </p>\n\n                    {newImage ?\n                        <div>\n                            <Form.Control\n                                type=\"file\"\n                                onChange={(e) => setImage(e.target.files[0])}\n                            >\n                            </Form.Control>\n\n                            <span\n                                onClick={() => {\n                                    setNewImage(!newImage)\n                                    setImage(\"\")\n                                    dispatch({\n                                        type: UPDATE_PRODUCT_RESET\n                                    })\n                                }}\n                                className=\"btn btn-primary btn-sm mt-2\"\n                            >\n                                Cancel\n                            </span>\n                        </div>\n                        :\n                        <p>\n                            <span\n                                onClick={() => setNewImage(!newImage)}\n                                className=\"btn btn-success btn-sm\"\n                            >\n                                choose different image\n                            </span>\n                        </p>\n                    }\n                </Form.Group>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>\n                        <b>\n                            Product Name\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        autoFocus={true}\n                        type=\"text\"\n                        defaultValue={product.name}\n                        placeholder=\"product name\"\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='description'>\n                    <Form.Label>\n                        <b>\n                            Product Description\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        defaultValue={product.description}\n                        placeholder=\"product description\"\n                        onChange={(e) => setDescription(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='price'>\n                    <Form.Label>\n                        <b>\n                            Price\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        pattern=\"[0-9]+(\\.[0-9]{1,2})?%?\"\n                        defaultValue={product.price}\n                        placeholder=\"199.99\"\n                        step=\"0.01\"\n                        maxLength=\"8\"\n                        onChange={(e) => setPrice(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <span style={{ display: \"flex\" }}>\n                    <label>In Stock</label>\n                    <input\n                        type=\"checkbox\"\n                        defaultChecked={product.stock}\n                        className=\"ml-2 mt-2\"\n                        onChange={() => setStock(!stock)}\n                    />\n                </span>\n\n                <Button\n                    type=\"submit\"\n                    variant='success'\n                    className=\"btn-sm button-focus-css mb-4\"\n                >\n                    Save Changes\n                </Button>\n                <Button\n                    onClick={() => history.push(`/product/${product.id}`)}\n                    variant='primary'\n                    className=\"btn-sm ml-2 button-focus-css mb-4\"\n                >\n                    Cancel\n                </Button>\n            </Form>\n            <BottomNavBar />\n        </div>\n    )\n}\n\nexport default ProductUpdatePage\n","import React from 'react'\nimport Message from '../components/Message'\nimport BottomNavBar from '../components/BottomNavBar'\n\nfunction NotFoundPage() {\n    return (\n        <div>\n            <Message variant='danger'>\n                404 Not Found\n            </Message>\n            <BottomNavBar />\n        </div>\n    )\n}\n\nexport default NotFoundPage\n","import axios from 'axios'\nimport {\n    AD_SUBMISSION_REQUEST,\n    AD_SUBMISSION_SUCCESS,\n    AD_SUBMISSION_FAIL,\n    AD_APPROVAL_REQUEST,\n    AD_APPROVAL_SUCCESS,\n    AD_APPROVAL_FAIL,\n    ACTIVE_ADS_REQUEST,\n    ACTIVE_ADS_SUCCESS,\n    ACTIVE_ADS_FAIL,\n    PENDING_ADS_REQUEST,\n    PENDING_ADS_SUCCESS,\n    PENDING_ADS_FAIL\n} from '../constants'\n\nconst API_URL = process.env.REACT_APP_API_BASE_URL;\n\nexport const submitAd = (formData) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: AD_SUBMISSION_REQUEST });\n        console.log('Submitting ad to the server...');\n\n        const { userLoginReducer } = getState();\n        const { userInfo } = userLoginReducer;\n        \n        if (!userInfo) {\n            throw new Error('Please login to submit an ad');\n        }\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                Authorization: `Bearer ${userInfo.token || userInfo.access}`, // Try both\n            },\n            withCredentials: true,\n        };\n\n        const { data } = await axios.post(\n            `${API_URL}/ads/submit/`,\n            formData,\n            config\n        );        \n\n        console.log('Ad submission successful:', data);\n\n        dispatch({\n            type: AD_SUBMISSION_SUCCESS,\n            payload: data,\n        });\n\n    } catch (error) {\n        console.error('Ad submission failed:', error.response || error.message);\n\n        dispatch({\n            type: AD_SUBMISSION_FAIL,\n            payload:\n                error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        });\n    }\n}\n\nexport const approveAd = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: AD_APPROVAL_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n\n        const { data } = await axios.put(\n            `${API_URL}/ads/approve/${id}/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: AD_APPROVAL_SUCCESS,\n            payload: data,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: AD_APPROVAL_FAIL,\n            payload:\n                error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        })\n    }\n}\n\nexport const listActiveAds = () => async (dispatch) => {\n    try {\n        dispatch({ type: ACTIVE_ADS_REQUEST })\n\n        const { data } = await axios.get(`${API_URL}/ads/active/`)\n\n        dispatch({\n            type: ACTIVE_ADS_SUCCESS,\n            payload: data,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ACTIVE_ADS_FAIL,\n            payload:\n                error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        })\n    }\n}\n\nexport const listPendingAds = () => async (dispatch, getState) => {\n    try {\n      dispatch({ type: PENDING_ADS_REQUEST })\n  \n      const config = {\n        headers: {\n        },\n      }\n  \n      const { data } = await axios.get(\n        `${API_URL}/ads/pending/`,\n        config\n      )\n  \n      dispatch({\n        type: PENDING_ADS_SUCCESS,\n        payload: data,\n      })\n  \n    } catch (error) {\n      dispatch({\n        type: PENDING_ADS_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      })\n    }\n}","import React, { useEffect, useState, useCallback } from 'react'  // Added useCallback\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Modal, Button } from 'react-bootstrap'\nimport { listActiveAds } from '../actions/adActions'\nimport { Link } from 'react-router-dom'\n\nfunction FullScreenAd() {\n  const [showAd, setShowAd] = useState(false)\n  const [currentAdIndex, setCurrentAdIndex] = useState(0)\n  \n  const dispatch = useDispatch()\n  \n  const activeAdsList = useSelector(state => state.activeAdsList || {})\n  const { loading, activeAds } = activeAdsList  // Removed unused 'error'\n\n  // Using useCallback to memoize the function\n  const rotateAd = useCallback(() => {\n    if (activeAds && activeAds.length > 0) {\n      setCurrentAdIndex(prevIndex => (prevIndex + 1) % activeAds.length)\n    }\n  }, [activeAds])  // Added dependency\n\n  useEffect(() => {\n    let isMounted = true;\n\n    if (isMounted) {\n      dispatch(listActiveAds());\n    }\n\n    const initialTimer = setTimeout(() => {\n      if (activeAds && activeAds.length > 0) {\n        setShowAd(true);\n      }\n    }, 5000);\n\n    const interval = setInterval(rotateAd, 10000);\n\n    return () => {\n      isMounted = false; // Cleanup on unmount\n      clearTimeout(initialTimer);\n      clearInterval(interval);\n    };\n  }, [dispatch, activeAds, rotateAd]);  // Added dependencies\n\n  if (loading || !activeAds || activeAds.length === 0) {\n    return null\n  }\n\n  const currentAd = activeAds[currentAdIndex]\n\n  return (\n    <Modal \n      show={showAd} \n      onHide={() => setShowAd(false)} \n      size=\"lg\" \n      centered\n      backdrop=\"static\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>{currentAd.ad_title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {currentAd.ad_type === 'image' ? (\n          <img \n            src={currentAd.ad_file_url} \n            alt={currentAd.ad_title} \n            style={{ width: '100%', maxHeight: '60vh', objectFit: 'contain' }}\n          />\n        ) : (\n          <video \n            controls \n            style={{ width: '100%', maxHeight: '60vh' }}\n            autoPlay\n          >\n            <source src={currentAd.ad_file_url} type=\"video/mp4\" />\n          </video>\n        )}\n        <p className=\"mt-3\">{currentAd.ad_description}</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button as={Link} to={`/order-now?ad=${currentAd.id}`} variant=\"primary\">\n          Order Now\n        </Button>\n        <Button variant=\"secondary\" onClick={() => setShowAd(false)}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default FullScreenAd","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap'\nimport { FaAd, FaArrowRight, FaCheckCircle } from 'react-icons/fa'\nimport './css/AdvertisePage.css' // Create this CSS file\nimport BottomNavBar from '../components/BottomNavBar'; // Import the component\n\nfunction AdvertisePage() {\n  return (\n    <Container className=\"advertise-page py-5\">\n      <Row className=\"justify-content-center mb-5\">\n        <Col lg={8} className=\"text-center\">\n          <h1 className=\"display-4 mb-4\">\n            <FaAd className=\"text-primary mr-2\" />\n            Advertise With Us\n          </h1>\n          <p className=\"lead text-muted\">\n            Reach thousands of potential customers and grow your business\n          </p>\n        </Col>\n      </Row>\n\n      <Row className=\"justify-content-center\">\n        <Col md={6} lg={5} className=\"mb-4\">\n          <Card className=\"pricing-card h-100 shadow-sm border-0\">\n            <Card.Body className=\"text-center p-4\">\n              <div className=\"pricing-badge bg-light text-primary mb-3\">POPULAR</div>\n              <h3 className=\"mb-3\">Daily Promotion</h3>\n              <h2 className=\"display-4 mb-3\">\n                <span className=\"text-primary\">Tsh 500</span>/day\n              </h2>\n              <ul className=\"list-unstyled mb-4\">\n                <li className=\"mb-2\"><FaCheckCircle className=\"text-success mr-2\" />24-hour visibility</li>\n                <li className=\"mb-2\"><FaCheckCircle className=\"text-success mr-2\" />Featured placement</li>\n                <li className=\"mb-2\"><FaCheckCircle className=\"text-success mr-2\" />Detailed analytics</li>\n              </ul>\n              <Button \n                as={Link} \n                to=\"/ad-submission\" \n                variant=\"primary\" \n                size=\"lg\"\n                className=\"w-100 py-3\"\n              >\n                Get Started <FaArrowRight className=\"ml-2\" />\n              </Button>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col md={6} lg={5} className=\"mb-4\">\n          <Card className=\"pricing-card h-100 shadow-sm border-0\">\n            <Card.Body className=\"text-center p-4\">\n              <h3 className=\"mb-3\">Monthly Package</h3>\n              <h2 className=\"display-4 mb-3\">\n                <span className=\"text-primary\">Tsh 5000</span>/month\n              </h2>\n              <ul className=\"list-unstyled mb-4\">\n                <li className=\"mb-2\"><FaCheckCircle className=\"text-success mr-2\" />30-day visibility</li>\n                <li className=\"mb-2\"><FaCheckCircle className=\"text-success mr-2\" />Premium placement</li>\n                <li className=\"mb-2\"><FaCheckCircle className=\"text-success mr-2\" />Detailed analytics</li>\n                <li className=\"mb-2\"><FaCheckCircle className=\"text-success mr-2\" />24/7 support</li>\n              </ul>\n              <Button \n                as={Link} \n                to=\"/ad-submission\" \n                variant=\"outline-primary\" \n                size=\"lg\"\n                className=\"w-100 py-3\"\n              >\n                Get Started <FaArrowRight className=\"ml-2\" />\n              </Button>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row className=\"justify-content-center mt-5\">\n        <Col lg={8} className=\"text-center\">\n          <div className=\"bg-light p-4 rounded\">\n            <h4 className=\"mb-3\">Have questions?</h4>\n            <p className=\"mb-0\">\n              Contact our advertising team at <a href=\"mailto:ads@brkluxe.com\">ads@brkluxe.com</a> \n              or call <a href=\"tel:+255613509299\">+255 613 509 299</a>\n            </p>\n          </div>\n        </Col>\n      </Row>\n      <BottomNavBar /> {/* Add the BottomNavBar */}\n    </Container>\n  )\n}\n\nexport default AdvertisePage","export default __webpack_public_path__ + \"static/media/lipa_namba.878e5a37.jpeg\";","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, Button, Row, Col, Container, Spinner, Alert } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { submitAd } from '../actions/adActions'\nimport { AD_SUBMISSION_RESET } from '../constants'\nimport paymentInstructions from '../assets/lipa_namba.jpeg';\nimport BottomNavBar from '../components/BottomNavBar';\n\nfunction AdSubmissionPage() {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [phone, setPhone] = useState('')\n  const [adTitle, setAdTitle] = useState('')\n  const [adDescription, setAdDescription] = useState('')\n  const [adType, setAdType] = useState('image')\n  const [adFile, setAdFile] = useState(null)\n  const [paymentProof, setPaymentProof] = useState(null)\n  const [agreement, setAgreement] = useState(false)\n  const [paymentMethod, setPaymentMethod] = useState('lipa_namba')\n  \n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  // Match the same pattern as NavBar for authentication\n  const { userInfo } = useSelector(state => state.userLoginReducer)\n  const { \n    loading = false, \n    error = null, \n    success = false \n  } = useSelector(state => state.adSubmissionReducer || {})\n\n  // Redirect to login if not authenticated\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login')\n    }\n  }, [userInfo, history])\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      dispatch({ type: AD_SUBMISSION_RESET })\n    }\n  }, [dispatch])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    \n    if (!userInfo) {\n      return\n    }\n\n    const formData = new FormData()\n    formData.append('name', name)\n    formData.append('email', email)\n    formData.append('phone_number', phone)\n    formData.append('ad_title', adTitle)\n    formData.append('ad_description', adDescription)\n    formData.append('ad_type', adType)\n    formData.append('payment_method', paymentMethod)\n    formData.append('duration_days', 30)\n    formData.append('ad_file', adFile)\n    formData.append('payment_proof', paymentProof)\n\n    dispatch(submitAd(formData))\n  }\n\n  if (success) {\n    dispatch({ type: AD_SUBMISSION_RESET })\n    history.push('/')\n    return null\n  }\n\n  if (!userInfo) {\n    return (\n      <Container className=\"text-center my-5\">\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Redirecting to login...</span>\n        </Spinner>\n      </Container>\n    )\n  }\n\n  return (\n    <>\n      <Container>\n        <Row className=\"justify-content-md-center\">\n          <Col xs={12} md={8}>\n            <h2 className=\"my-4\">Submit Your Ad</h2>\n            {error && <Alert variant=\"danger\">{error}</Alert>}\n            \n            <Form onSubmit={submitHandler}>\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter your name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"phone\">\n                <Form.Label>Phone Number</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter phone number\"\n                  value={phone}\n                  onChange={(e) => setPhone(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"adTitle\">\n                <Form.Label>Ad Title</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter ad title\"\n                  value={adTitle}\n                  onChange={(e) => setAdTitle(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"adDescription\">\n                <Form.Label>Ad Description</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={3}\n                  placeholder=\"Enter ad description\"\n                  value={adDescription}\n                  onChange={(e) => setAdDescription(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"adType\">\n                <Form.Label>Ad Type</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  value={adType}\n                  onChange={(e) => setAdType(e.target.value)}\n                >\n                  <option value=\"image\">Image</option>\n                  <option value=\"video\">Video</option>\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"adFile\">\n                <Form.Label>Upload Ad File</Form.Label>\n                <Form.File\n                  onChange={(e) => setAdFile(e.target.files[0])}\n                  accept={adType === 'image' ? 'image/*' : 'video/*'}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"paymentInstructions\">\n                <Form.Label>Payment Instructions</Form.Label>\n                <div className=\"text-center\">\n                  <img \n                    src={paymentInstructions} \n                    alt=\"Payment Instructions\" \n                    className=\"img-fluid\" \n                  />\n                </div>\n              </Form.Group>\n\n              <Form.Group controlId=\"paymentMethod\">\n                <Form.Label>Payment Method</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  value={paymentMethod}\n                  onChange={(e) => setPaymentMethod(e.target.value)}\n                >\n                  <option value=\"lipa_namba\">Lipa Namba</option>\n                  <option value=\"other\">Other</option>\n                </Form.Control>\n                {paymentMethod === 'lipa_namba' && (\n                  <small className=\"text-muted\">\n                    Please send payment to: 0712345678 (Example number)\n                  </small>\n                )}\n              </Form.Group>\n\n              <Form.Group controlId=\"paymentProof\">\n                <Form.Label>Payment Proof (Screenshot)</Form.Label>\n                <Form.File\n                  onChange={(e) => setPaymentProof(e.target.files[0])}\n                  accept=\"image/*\"\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"agreement\">\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"I confirm that I have made the payment and the details above are correct.\"\n                  checked={agreement}\n                  onChange={(e) => setAgreement(e.target.checked)}\n                  required\n                />\n              </Form.Group>\n\n              <Button \n                variant=\"primary\" \n                type=\"submit\" \n                disabled={loading || !agreement}\n                className=\"mb-5\"\n              >\n                {loading ? (\n                  <>\n                    <Spinner\n                      as=\"span\"\n                      animation=\"border\"\n                      size=\"sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    />\n                    {' Submitting...'}\n                  </>\n                ) : 'Submit Ad'}\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n      <BottomNavBar />\n    </>\n  )\n}\n\nexport default AdSubmissionPage","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Table, Button, Row, Col, Container, Spinner, Alert } from 'react-bootstrap'\nimport { listPendingAds, approveAd } from '../actions/adActions'\nimport { AD_APPROVAL_RESET } from '../constants'\nimport BottomNavBar from '../components/BottomNavBar'\n\nfunction AdApprovalPage({ history }) {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const pendingAdsList = useSelector(state => state.pendingAdsList)\n  const { loading, error, pendingAds } = pendingAdsList\n\n  const adApproval = useSelector(state => state.adApproval)\n  const { success: successApprove } = adApproval\n\n  useEffect(() => {\n    let isMounted = true;\n\n    if (isMounted) {\n      if (!userInfo || !userInfo.isAdmin) {\n        history.push('/login');\n      }\n\n      dispatch(listPendingAds());\n\n      if (successApprove) {\n        dispatch({ type: AD_APPROVAL_RESET });\n        dispatch(listPendingAds());\n      }\n    }\n\n    return () => {\n      isMounted = false; // Cleanup on unmount\n    };\n  }, [dispatch, history, userInfo, successApprove]);\n\n  const approveHandler = (id) => {\n    if (window.confirm('Are you sure you want to approve this ad?')) {\n      dispatch(approveAd(id))\n    }\n  }\n\n  return (\n    <Container>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h2 className=\"my-4\">Pending Ads for Approval</h2>\n        </Col>\n      </Row>\n\n      {loading ? (\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      ) : error ? (\n        <Alert variant=\"danger\">{error}</Alert>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>AD TITLE</th>\n              <th>ADVERTISER</th>\n              <th>EMAIL</th>\n              <th>PHONE</th>\n              <th>SUBMITTED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {pendingAds.map(ad => (\n              <tr key={ad.id}>\n                <td>{ad.id}</td>\n                <td>{ad.ad_title}</td>\n                <td>{ad.name}</td>\n                <td><a href={`mailto:${ad.email}`}>{ad.email}</a></td>\n                <td><a href={`tel:${ad.phone_number}`}>{ad.phone_number}</a></td>\n                <td>{new Date(ad.created_at).toLocaleDateString()}</td>\n                <td>\n                  <Button \n                    variant=\"success\" \n                    className=\"btn-sm\" \n                    onClick={() => approveHandler(ad.id)}\n                  >\n                    Approve\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n      <BottomNavBar />\n    </Container>\n  )\n}\n\nexport default AdApprovalPage","import React from 'react'\nimport { Container, Row, Col, Card, ListGroup, Button } from 'react-bootstrap'\nimport { FaPhone, FaWhatsapp, FaEnvelope, FaClock } from 'react-icons/fa'\nimport './css/HelpPage.css' // Create this CSS file\nimport BottomNavBar from '../components/BottomNavBar'; // Import the component\n\nfunction HelpPage() {\n  const contacts = [\n    { number: '+255613509299', type: 'phone' },\n    { number: '+255699183448', type: 'whatsapp' },\n    { number: '+255767007987', type: 'phone' }\n  ]\n\n  return (\n    <Container className=\"help-page py-5\">\n      <Row className=\"mb-5\">\n        <Col lg={8} className=\"mx-auto text-center\">\n          <h1 className=\"display-4 mb-3\">Help Center</h1>\n          <p className=\"lead text-muted\">\n            We're here to help you with any questions or issues\n          </p>\n        </Col>\n      </Row>\n\n      <Row className=\"mb-5\">\n        <Col lg={6} className=\"mb-4\">\n          <Card className=\"h-100 shadow-sm border-0\">\n            <Card.Body className=\"p-4\">\n              <div className=\"icon-wrapper bg-primary-light mb-4\">\n                <FaPhone className=\"text-primary\" size={24} />\n              </div>\n              <h3 className=\"mb-4\">Contact Support</h3>\n              <ListGroup variant=\"flush\">\n                {contacts.map((contact, index) => (\n                  <ListGroup.Item key={index} className=\"border-0 px-0\">\n                    <div className=\"d-flex align-items-center\">\n                      {contact.type === 'whatsapp' ? (\n                        <FaWhatsapp className=\"text-success mr-3\" size={20} />\n                      ) : (\n                        <FaPhone className=\"text-primary mr-3\" size={20} />\n                      )}\n                      <div>\n                        <h5 className=\"mb-0\">{contact.number}</h5>\n                        <small className=\"text-muted\">\n                          {contact.type === 'whatsapp' ? 'WhatsApp Available' : 'Call Us'}\n                        </small>\n                      </div>\n                      <Button \n                        variant=\"link\" \n                        href={`tel:${contact.number}`}\n                        className=\"ml-auto\"\n                      >\n                        Call Now\n                      </Button>\n                    </div>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col lg={6} className=\"mb-4\">\n          <Card className=\"h-100 shadow-sm border-0\">\n            <Card.Body className=\"p-4\">\n              <div className=\"icon-wrapper bg-primary-light mb-4\">\n                <FaEnvelope className=\"text-primary\" size={24} />\n              </div>\n              <h3 className=\"mb-4\">Technical Support</h3>\n              <div className=\"mb-4\">\n                <h5 className=\"d-flex align-items-center\">\n                  <FaPhone className=\"text-primary mr-3\" size={20} />\n                  <span>+255620148031</span>\n                </h5>\n                <p className=\"text-muted\">\n                  Available for technical issues and platform support\n                </p>\n              </div>\n              <div>\n                <h5 className=\"d-flex align-items-center mb-3\">\n                  <FaEnvelope className=\"text-primary mr-3\" size={20} />\n                  <span>support@brkluxe.com</span>\n                </h5>\n                <Button \n                  variant=\"primary\" \n                  href=\"mailto:support@brkluxe.com\"\n                  className=\"w-100\"\n                >\n                  Email Support\n                </Button>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col lg={8} className=\"mx-auto\">\n          <Card className=\"border-0 shadow-sm\">\n            <Card.Body className=\"p-4\">\n              <div className=\"d-flex align-items-center\">\n                <div className=\"icon-wrapper bg-primary-light mr-4\">\n                  <FaClock className=\"text-primary\" size={24} />\n                </div>\n                <div>\n                  <h3 className=\"mb-2\">Operating Hours</h3>\n                  <p className=\"mb-1\"><strong>Monday - Friday:</strong> 8:00 AM - 8:00 PM</p>\n                  <p className=\"mb-1\"><strong>Saturday:</strong> 9:00 AM - 6:00 PM</p>\n                  <p className=\"mb-0\"><strong>Sunday:</strong> 10:00 AM - 4:00 PM</p>\n                </div>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <BottomNavBar /> {/* Add the BottomNavBar */}\n    </Container>\n  )\n}\n\nexport default HelpPage","import React from 'react'\nimport { Container, Row, Col, Card } from 'react-bootstrap'\nimport { FaShoppingBag, FaThumbsUp, FaHeadset } from 'react-icons/fa'\nimport teamPhoto from '../assets/logo.jpeg' // Add your team photo\nimport './css/AboutPage.css' // Create this CSS file\nimport BottomNavBar from '../components/BottomNavBar'; // Import the component\n\nfunction AboutPage() {\n  return (\n    <Container className=\"about-page py-5\">\n      <Row className=\"mb-5\">\n        <Col lg={8} className=\"mx-auto text-center\">\n          <h1 className=\"display-4 mb-4\">About BRK_LUXE</h1>\n          <p className=\"lead text-muted\">\n            Redefining your shopping experience with quality and convenience\n          </p>\n        </Col>\n      </Row>\n\n      <Row className=\"mb-5 align-items-center\">\n        <Col lg={6} className=\"mb-4 mb-lg-0\">\n          <div className=\"about-image rounded-lg overflow-hidden shadow\">\n            <img \n              src={teamPhoto} \n              alt=\"BRK_LUXE Team\" \n              className=\"img-fluid\"\n            />\n          </div>\n        </Col>\n        <Col lg={6}>\n          <h2 className=\"mb-4\">Our Story</h2>\n          <p className=\"mb-4\">\n            Founded in 2025, BRK_LUXE Free Market began with a simple mission: to make shopping \n            easy, convenient, and enjoyable for everyone in Tanzania. We believe in offering \n            top-quality items at fair prices, with a focus on customer satisfaction and excellent service.\n          </p>\n          <div className=\"d-flex align-items-center mb-3\">\n            <FaShoppingBag className=\"text-primary mr-3\" size={24} />\n            <div>\n              <h5 className=\"mb-0\">Wide Selection</h5>\n              <p className=\"text-muted mb-0\">Thousands of quality products</p>\n            </div>\n          </div>\n          <div className=\"d-flex align-items-center mb-3\">\n            <FaThumbsUp className=\"text-primary mr-3\" size={24} />\n            <div>\n              <h5 className=\"mb-0\">Customer First</h5>\n              <p className=\"text-muted mb-0\">Your satisfaction is our priority</p>\n            </div>\n          </div>\n          <div className=\"d-flex align-items-center\">\n            <FaHeadset className=\"text-primary mr-3\" size={24} />\n            <div>\n              <h5 className=\"mb-0\">24/7 Support</h5>\n              <p className=\"text-muted mb-0\">We're always here to help</p>\n            </div>\n          </div>\n        </Col>\n      </Row>\n\n      <Row className=\"mb-5\">\n        <Col className=\"text-center\">\n          <Card className=\"border-0 shadow-sm py-4\">\n            <Card.Body>\n              <h3 className=\"mb-4\">Meet The Founder</h3>\n              <Row className=\"justify-content-center\">\n                <Col md={6} className=\"mb-4\">\n                  <div className=\"team-member\">\n                    <h5>Boniventure Richard Kisse</h5>\n                    <p className=\"text-muted\">Founder</p>\n                  </div>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col className=\"text-center\">\n          <div className=\"social-links\">\n            <h4 className=\"mb-4\">Connect With Us</h4>\n            <a href=\"https://instagram.com/brk_luxe_free_market\" className=\"btn btn-outline-primary mx-2\">\n              <i className=\"fab fa-instagram\"></i> @brk_luxe_free_market\n            </a>\n          </div>\n        </Col>\n      </Row>\n      <BottomNavBar /> {/* Add the BottomNavBar */}\n    </Container>\n  )\n}\n\nexport default AboutPage","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button, Container, Alert } from 'react-bootstrap';\nimport { useLocation, useHistory } from 'react-router-dom'; // Changed useNavigate to useHistory\nimport { createOrderRequest } from '../actions/orderActions';\nimport BottomNavBar from '../components/BottomNavBar'; // Import the component\n\nfunction OrderNowPage() {\n    console.log(\"Rendering OrderNowPage...\");\n\n    const [formData, setFormData] = useState({\n        name: '',\n        region: '',\n        district: '',\n        ward: '',\n        street: '',\n    });\n    const [showSuccess, setShowSuccess] = useState(false);\n\n    console.log(\"Initial formData:\", formData);\n\n    const location = useLocation();\n    const history = useHistory(); // Changed navigate to history\n    const dispatch = useDispatch();\n    const { userInfo, loading } = useSelector(state => state.userLoginReducer || {});\n    \n\n    console.log(\"User info:\", userInfo);\n\n    const params = new URLSearchParams(location.search);\n\n    const productName = params.get('name') || 'Product';\n    const productPrice = params.get('price') || '0';\n    const supplierName = params.get('supplier') || 'Unknown Supplier';\n    const whatsappLink = params.get('whatsapp') || 'No Number';\n\n    console.log(\"Product details from URL:\", { productName, productPrice, supplierName, whatsappLink });\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(\"Form submitted with formData:\", formData);\n\n        // Ensure userInfo is correctly populated\n        if (!loading && (!userInfo || !userInfo.id)) {\n            console.log(\"User not authenticated. Redirecting to login...\");\n            history.push(`/login?redirect=/order-now${location.search}`);\n            return;\n        }\n\n        // Get order details from URL\n        const quantity = params.get('qty') || 1;\n        const productId = params.get('product');\n\n        console.log(\"Order details:\", { quantity, productId });\n\n        const cleanMessage = \n            `📦 *NEW ORDER REQUEST* 📦\n\n            🛍️ *Product Details*\n            ▫️ *Product:* ${productName}\n            ▫️ *Price:* Tsh ${Number(productPrice).toLocaleString()}\n            ▫️ *Quantity:* ${quantity}\n\n            👤 *Customer Information*\n            ▫️ *Name:* ${formData.name}\n\n            📍 *Delivery Location*\n            🏙️ *Region:* ${formData.region}\n            🏘️ *District:* ${formData.district}\n            🏡 *Ward:* ${formData.ward}\n            📮 *Street:* ${formData.street}\n\n            📝 *Additional Notes*\n            Please confirm this order at your earliest convenience.\n            Thank you! 🙏\n            \n            Powered by brk_luxe free market`;\n\n        // 2. Now create the URL-encoded version for WhatsApp\n        const whatsappMessage = encodeURIComponent(cleanMessage);\n\n        console.log(\"Formatted Order Message:\", cleanMessage); // Clean version for logs\n        console.log(\"Encoded WhatsApp Message:\", whatsappMessage);\n\n        // Use the supplier's WhatsApp link\n        const whatsappURL = whatsappLink \n            ? `${whatsappLink}?text=${whatsappMessage}` \n            : `https://wa.me/255123456789?text=${whatsappMessage}`;\n        \n        console.log(\"WhatsApp URL:\", whatsappURL);\n\n        try {\n            // Open WhatsApp in a new tab\n            window.open(whatsappURL, '_blank');\n            console.log(\"WhatsApp opened successfully.\");\n        } catch (error) {\n            console.error(\"Failed to open WhatsApp:\", error);\n        }\n\n        try {\n            // Save to database after opening WhatsApp\n            dispatch(createOrderRequest({\n                ...formData,\n                user: userInfo.id,\n                product: productId,\n                quantity: quantity,\n                whatsapp_message: whatsappMessage\n            }));\n            console.log(\"Order request dispatched successfully.\");\n        } catch (error) {\n            console.error(\"Failed to dispatch order request:\", error);\n        }\n\n        setShowSuccess(true);\n        console.log(\"Show success alert set to true.\");\n    };\n\n    const handleChange = (e) => {\n        const { id, value } = e.target;\n        console.log(`Field changed: ${id}, Value: ${value}`);\n        setFormData(prev => ({ ...prev, [id]: value }));\n    };\n\n    return (\n        <Container className=\"py-4\">\n            <div className=\"mx-auto\" style={{ maxWidth: '600px' }}>\n                <h2 className=\"text-center mb-4\">Complete Your Order</h2>\n                <p><strong>Product:</strong> {productName}</p>\n                <p><strong>Price:</strong> Tsh {productPrice}</p>\n                <p><strong>Supplier:</strong> {supplierName}</p>\n                {showSuccess && (\n                    <Alert variant=\"success\" className=\"text-center\">\n                        Redirecting to WhatsApp...\n                    </Alert>\n                )}\n                \n                <Form onSubmit={handleSubmit} className=\"border p-4 rounded-3 shadow-sm bg-white\">\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label>Full Name</Form.Label>\n                        <Form.Control\n                            id=\"name\"\n                            type=\"text\"\n                            value={formData.name}\n                            onChange={handleChange}\n                            required\n                            placeholder=\"John Doe\"\n                        />\n                    </Form.Group>\n\n                    <h5 className=\"mt-4 mb-3\">Delivery Details</h5>\n                    \n                    <div className=\"row g-3\">\n                        <div className=\"col-md-6\">\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Region</Form.Label>\n                                <Form.Control\n                                    id=\"region\"\n                                    type=\"text\"\n                                    value={formData.region}\n                                    onChange={handleChange}\n                                    required\n                                    placeholder=\"Dar es Salaam\"\n                                />\n                            </Form.Group>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>District</Form.Label>\n                                <Form.Control\n                                    id=\"district\"\n                                    type=\"text\"\n                                    value={formData.district}\n                                    onChange={handleChange}\n                                    required\n                                    placeholder=\"Ilala\"\n                                />\n                            </Form.Group>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Ward</Form.Label>\n                                <Form.Control\n                                    id=\"ward\"\n                                    type=\"text\"\n                                    value={formData.ward}\n                                    onChange={handleChange}\n                                    required\n                                    placeholder=\"Kariakoo\"\n                                />\n                            </Form.Group>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Street/House</Form.Label>\n                                <Form.Control\n                                    id=\"street\"\n                                    type=\"text\"\n                                    value={formData.street}\n                                    onChange={handleChange}\n                                    required\n                                    placeholder=\"Maktaba St, House No.\"\n                                />\n                            </Form.Group>\n                        </div>\n                    </div>\n\n                    <Button \n                        variant=\"success\" // Changed from \"primary\" to \"success\"\n                        type=\"submit\" \n                        size=\"lg\"\n                        className=\"w-100 mt-3 py-2\"\n                    >\n                        <i className=\"fab fa-whatsapp me-2\"></i>\n                        Send Order via WhatsApp\n                    </Button>\n                </Form>\n            </div>\n            <BottomNavBar /> {/* Add the BottomNavBar */}\n        </Container>\n    );\n}\n\nexport default OrderNowPage;","import axios from 'axios';\nimport {\n    ORDER_REQUEST_REQUEST,\n    ORDER_REQUEST_SUCCESS,\n    ORDER_REQUEST_FAIL,\n} from '../constants';\n\nconst API_URL = process.env.REACT_APP_API_BASE_URL;\n\nexport const createOrderRequest = (orderData) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: ORDER_REQUEST_REQUEST });\n\n        const { userLoginReducer: { userInfo } } = getState();\n\n        if (!userInfo || !userInfo.token) {\n            throw new Error('Authentication required');\n        }\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        // Remove user from orderData - backend will handle it\n        const { user, ...orderDataWithoutUser } = orderData;\n        \n        const completeOrderData = {\n            ...orderDataWithoutUser,\n            ordered_at: new Date().toISOString(),\n            status: 'pending',\n        };\n\n        console.log('Final order data:', completeOrderData);\n        \n        const { data } = await axios.post(\n            `${API_URL}/api/orders/request/`,\n            completeOrderData,\n            config\n        );\n\n        dispatch({\n            type: ORDER_REQUEST_SUCCESS,\n            payload: data,\n        });\n\n        return data;\n    } catch (error) {\n        console.error('Order creation failed:', {\n            message: error.message,\n            response: error.response?.data,\n        });\n\n        const errorMessage = error.response?.data?.error || \n            error.response?.data?.detail ||\n            error.message ||\n            'Failed to create order';\n\n        dispatch({\n            type: ORDER_REQUEST_FAIL,\n            payload: errorMessage,\n        });\n\n        throw error;\n    }\n};","import React, { useState } from 'react'\nimport {useHistory} from 'react-router-dom'\n\n\nfunction SearchBarForProducts() {\n\n    let history = useHistory()\n    const [searchTerm, setSearchTerm] = useState(\"\")\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if(searchTerm) {\n            history.push(`/?searchTerm=${searchTerm}`)\n        }\n    };\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <span\n                    style={{ display: \"flex\" }}\n                    className=\"\"\n                >\n                    <input\n                        type=\"text\"\n                        value={searchTerm}\n                        placeholder=\"search products\"\n                        className=\"form-control\"\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                    />\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-primary ml-2 button-focus-css\"\n                    ><i className=\"fas fa-search\"></i>\n                    </button>\n                </span>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchBarForProducts\n","// src/pages/SearchPage.js\nimport React from 'react';\nimport SearchBarForProducts from '../components/SearchBarForProducts';\n\nfunction SearchPage() {\n    return (\n        <div className=\"container mt-4\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-8\">\n                    <h2 className=\"mb-4\">Search Products</h2>\n                    <SearchBarForProducts />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SearchPage;","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport ProductListPage from './pages/ProductsListPage'\nimport ProductDetailsPage from './pages/ProductDetailsPage'\nimport CheckoutPage from './pages/CheckoutPage'\nimport NavBar from './components/Navbar'\nimport PaymentStatus from './components/PaymentStatus'\nimport Login from './pages/LoginPage'\nimport Register from './pages/RegisterPage'\nimport CardUpdatePage from './pages/CardUpdatePage'\nimport CardDetailsPage from './pages/CardDetailsPage'\nimport AccountPage from './pages/AccountPage'\nimport AccountUpdatePage from './pages/AccountUpdatePage'\nimport DeleteUserAccountPage from './pages/DeleteUserAccountPage'\nimport AllAddressesOfUserPage from './pages/AllAddressesOfUserPage'\nimport AddressUpdatePage from './pages/AddressUpdatePage'\nimport OrdersListPage from './pages/OrdersListPage'\nimport ProductCreatePage from './pages/ProductCreatePage'\nimport ProductUpdatePage from './pages/ProductUpdatePage'\nimport NotFound from './pages/NotFoundPage'\n\n// Import the new components\nimport FullScreenAd from './components/FullScreenAd'\nimport AdvertisePage from './pages/AdvertisePage'\nimport AdSubmissionPage from './pages/AdSubmissionPage'\nimport AdApprovalPage from './pages/AdApprovalPage'\nimport HelpPage from './pages/HelpPage'\nimport AboutPage from './pages/AboutPage'\nimport OrderNowPage from './pages/OrderNowPage'\nimport SearchPage from './pages/SearchPage';\n\n\nconst App = () => {\n\n  return (\n    <div>\n      <Router>\n        <NavBar />\n        <FullScreenAd />\n        <div className=\"container mt-4\">\n          <Switch>\n            <Route path=\"/\" component={ProductListPage} exact />\n            <Route path=\"/new-product/\" component={ProductCreatePage} exact />\n            <Route path=\"/product/:id/\" component={ProductDetailsPage} exact />\n            <Route path=\"/product-update/:id/\" component={ProductUpdatePage} exact />\n            <Route path=\"/product/:id/checkout/\" component={CheckoutPage} exact />\n            <Route path=\"/payment-status\" component={PaymentStatus} exact />\n            <Route path=\"/login\" component={Login} exact />\n            <Route path=\"/register\" component={Register} exact />\n            <Route path=\"/account\" component={AccountPage} exact />\n            <Route path=\"/account/update/\" component={AccountUpdatePage} exact />\n            <Route path=\"/account/delete/\" component={DeleteUserAccountPage} exact />\n            <Route path=\"/stripe-card-details\" component={CardDetailsPage} exact />\n            <Route path=\"/stripe-card-update\" component={CardUpdatePage} exact />\n            <Route path=\"/all-addresses/\" component={AllAddressesOfUserPage} exact />\n            <Route path=\"/all-addresses/:id/\" component={AddressUpdatePage} exact />\n            <Route path=\"/all-orders/\" component={OrdersListPage} exact />\n\n            <Route path=\"/advertise\" component={AdvertisePage} exact />\n            <Route path=\"/ad-submission\" component={AdSubmissionPage} exact />\n            <Route path=\"/ad-approval\" component={AdApprovalPage} exact />\n            <Route path=\"/help\" component={HelpPage} exact />\n            <Route path=\"/about\" component={AboutPage} exact />\n            <Route path=\"/order-now\" component={OrderNowPage} exact />\n\n            <Route path=\"/search\" component={SearchPage} exact />\n\n            <Route path=\"\" component={NotFound} exact />\n          </Switch>\n        </div>\n      </Router>\n    </div >\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport App from './App';\nimport \"./App.css\"\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}