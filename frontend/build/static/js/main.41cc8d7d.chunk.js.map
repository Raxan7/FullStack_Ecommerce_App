{"version":3,"sources":["constants/index.js","reducers/orderReducers.js","reducers/index.js","reducers/productReducers.js","reducers/cardReducers.js","reducers/userReducers.js","reducers/adReducers.js","store.js","actions/productActions.js","components/Message.js","components/Product.js","pages/ProductsListPage.js","pages/ProductDetailsPage.js","actions/cardActions.js","components/DeleteCardComponent.js","components/CreateCardComponent.js","actions/userActions.js","components/ChargeCardComponent.js","components/UserAddressComponent.js","pages/CheckoutPage.js","components/SearchBarForProducts.js","assets/logo.jpeg","components/Navbar.js","components/PaymentStatus.js","pages/LoginPage.js","pages/RegisterPage.js","pages/CardUpdatePage.js","pages/CardDetailsPage.js","pages/AccountPage.js","pages/AccountUpdatePage.js","pages/DeleteUserAccountPage.js","components/CreateAddressComponent.js","pages/AllAddressesOfUserPage.js","pages/AddressUpdatePage.js","components/GetDate.js","components/SearchBarForOrdersPage.js","pages/OrdersListPage.js","pages/ProductCreatePage.js","pages/ProductUpdatePage.js","pages/NotFoundPage.js","actions/adActions.js","components/FullScreenAd.js","pages/AdvertisePage.js","pages/AdSubmissionPage.js","pages/AdApprovalPage.js","pages/HelpPage.js","pages/AboutPage.js","pages/OrderNowPage.js","actions/orderActions.js","App.js","index.js"],"names":["PRODUCTS_LIST_REQUEST","PRODUCTS_LIST_SUCCESS","PRODUCTS_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","CREATE_PRODUCT_REQUEST","CREATE_PRODUCT_SUCCESS","CREATE_PRODUCT_FAIL","CREATE_PRODUCT_RESET","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","UPDATE_PRODUCT_RESET","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","DELETE_PRODUCT_RESET","CHECK_TOKEN_VALID_REQUEST","CHECK_TOKEN_VALID_SUCCESS","CHECK_TOKEN_VALID_FAIL","CHECK_TOKEN_VALID_RESET","CARD_CREATE_REQUEST","CARD_CREATE_SUCCESS","CARD_CREATE_FAIL","CARD_CREATE_RESET","CHARGE_CARD_REQUEST","CHARGE_CARD_SUCCESS","CHARGE_CARD_FAIL","CHARGE_CARD_RESET","SAVED_CARDS_LIST_REQUEST","SAVED_CARDS_LIST_SUCCESS","SAVED_CARDS_LIST_FAIL","DELETE_SAVED_CARD_REQUEST","DELETE_SAVED_CARD_SUCCESS","DELETE_SAVED_CARD_FAIL","UPDATE_STRIPE_CARD_REQUEST","UPDATE_STRIPE_CARD_SUCCESS","UPDATE_STRIPE_CARD_FAIL","UPDATE_STRIPE_CARD_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","UPDATE_USER_DETAILS_REQUEST","UPDATE_USER_DETAILS_SUCCESS","UPDATE_USER_DETAILS_FAIL","UPDATE_USER_DETAILS_RESET","DELETE_USER_ACCOUNT_REQUEST","DELETE_USER_ACCOUNT_SUCCESS","DELETE_USER_ACCOUNT_FAIL","DELETE_USER_ACCOUNT_RESET","GET_USER_ALL_ADDRESSES_REQUEST","GET_USER_ALL_ADDRESSES_SUCCESS","GET_USER_ALL_ADDRESSES_FAIL","GET_SINGLE_ADDRESS_REQUEST","GET_SINGLE_ADDRESS_SUCCESS","GET_SINGLE_ADDRESS_FAIL","GET_SINGLE_ADDRESS_RESET","CREATE_USER_ADDRESS_REQUEST","CREATE_USER_ADDRESS_SUCCESS","CREATE_USER_ADDRESS_FAIL","CREATE_USER_ADDRESS_RESET","UPDATE_USER_ADDRESS_REQUEST","UPDATE_USER_ADDRESS_SUCCESS","UPDATE_USER_ADDRESS_FAIL","UPDATE_USER_ADDRESS_RESET","DELETE_USER_ADDRESS_REQUEST","DELETE_USER_ADDRESS_SUCCESS","DELETE_USER_ADDRESS_FAIL","DELETE_USER_ADDRESS_RESET","GET_ALL_ORDERS_REQUEST","GET_ALL_ORDERS_SUCCESS","GET_ALL_ORDERS_FAIL","CHANGE_DELIVERY_STATUS_REQUEST","CHANGE_DELIVERY_STATUS_SUCCESS","CHANGE_DELIVERY_STATUS_FAIL","CHANGE_DELIVERY_STATUS_RESET","AD_SUBMISSION_REQUEST","AD_SUBMISSION_SUCCESS","AD_SUBMISSION_FAIL","AD_SUBMISSION_RESET","AD_APPROVAL_REQUEST","AD_APPROVAL_SUCCESS","AD_APPROVAL_FAIL","PENDING_ADS_REQUEST","PENDING_ADS_SUCCESS","PENDING_ADS_FAIL","ACTIVE_ADS_REQUEST","ACTIVE_ADS_SUCCESS","ACTIVE_ADS_FAIL","ORDER_REQUEST_REQUEST","ORDER_REQUEST_SUCCESS","ORDER_REQUEST_FAIL","ORDER_REQUEST_RESET","initialState","loading","error","success","order","lastSubmitted","allReducers","combineReducers","productsListReducer","state","arguments","length","undefined","products","action","type","payload","productDetailsReducer","product","createProductReducer","updateProductReducer","deleteProductReducer","createCardReducer","cardData","chargeCardReducer","savedCardsListReducer","stripeCards","updateStripeCardtReducer","stripeCard","deleteSavedCardReducer","data","userLoginReducer","userInfo","userRegisterReducer","getSingleAddressReducer","address","getAllAddressesOfUserReducer","addresses","createUserAddressReducer","updateUserAddressReducer","deleteUserAddressReducer","getAllOrdersReducer","orders","changeDeliveryStatusReducer","checkTokenValidationReducer","valid","userDetailsReducer","user","userDetailsUpdateReducer","deleteUserAccountReducer","adSubmission","ad","adApproval","activeAds","pendingAds","orderRequest","Date","toISOString","middleware","thunk","localStorage","getItem","JSON","parse","store","createStore","composeWithDevTools","applyMiddleware","getProductDetails","id","async","dispatch","axios","get","message","Message","_ref","variant","children","_jsx","Alert","Product","Card","className","_jsxs","Body","Link","to","Img","src","image","height","Title","as","name","Text","price","ProductsListPage","history","useHistory","searchTerm","location","search","split","toLowerCase","useDispatch","useSelector","useEffect","style","background","border","borderRadius","color","fontWeight","marginBottom","fontSize","padding","boxShadow","transition","onMouseOver","e","target","transform","onMouseOut","display","Spinner","animation","Row","filter","item","includes","map","idx","Col","sm","md","lg","xl","ProductDetailsPage","match","show","setShow","useState","handleClose","productDeletionSuccess","params","confirmDelete","getState","config","headers","Authorization","token","delete","response","detail","alert","push","Modal","onHide","Header","closeButton","Footer","Button","onClick","Container","admin","width","description","justifyContent","borderColor","stock","createCard","cardNumber","post","email","expMonth","expYear","cvc","saveCard","savedCardsList","DeleteCardComponent","userId","deleteCardNumber","runCardDeleteHandler","toggleRunCardDeleteHandler","c_number","card_number","current_year","getFullYear","CreateCardComponent","addressSelected","setRunCardDeleteHandler","differentCard","setDifferentCard","cardDetails","setCardDetails","cardDetailsId","setCardDetailsId","showStripeCard","setShowStripeCard","setEmail","setCardNumber","setExpMonth","setExpYear","setCvc","setSaveCard","showCardDetails","float","position","exp_month","exp_year","window","reload","_Fragment","Form","onSubmit","preventDefault","Number","Group","Label","Control","autoFocus","pattern","value","onChange","placeholder","maxLength","required","defaultValue","Array","from","x","i","hidden","slice","payWithSavedCard","title","logout","removeItem","checkTokenValidation","details","userDetails","getAllAddress","getSingleAddress","getAllOrders","ChargeCardComponent","selectedAddressId","chargeSuccessfull","chargeError","chargingStatus","pathname","card_data","last4","address_detail","house_no","landmark","city","pin_code","chargeCustomer","disabled","size","role","aria-hidden","phone_number","UserAddressComponent","handleAddressId","updatehandleAddressId","CheckoutPage","setAddressSelected","setSelectedAddressId","tokenError","cardCreationError","cardCreationLoading","xs","Image","alt","SearchBarForProducts","setSearchTerm","NavBar","Navbar","bg","expand","collapseOnSelect","LinkContainer","Brand","logo","marginRight","Toggle","aria-controls","Collapse","Nav","isAdmin","NavDropdown","username","Item","logoutHandler","PaymentStatus","useLocation","renderData","boughtData","LoginPage","setUsername","password","setPassword","login","setItem","stringify","controlId","RegisterPage","confirmPassword","setConfirmPassword","setMessage","register","CardUpdatePage","setName","addressCity","setAddressCity","addressCountry","setAddressCountry","addressState","setAddressState","addressZip","setAddressZip","customerId","setCustomerId","cardId","setCardId","customer_id","card_id","name_on_card","address_city","address_country","address_state","address_zip","each","setCustomerAndCardIds","cus_Id","card_Id","c_num","CardDetailsPage","setUserId","setDeleteCardNumber","alignItems","AccountPage","userAccDetails","AccountUpdatePage","updatedUsername","updatedEmail","userData","put","userUpdateDetails","DeleteUserAccount","myPassword","setMyPassword","userAccountDelete","CreateAddressComponent","toggleCreateAddress","phoneNumber","setPhoneNumber","pinCode","setPinCode","houseNumber","setHouseNumber","setLandmark","setCity","setState","addressCreationSuccess","errorCreatingAddress","addressData","createUserAddress","InputGroup","AllAddressesOfUserPage","deleteAddress","setDeleteAddress","createAddress","setCreateAddress","loadingAllAddresses","addressDeletionSuccess","deleteAddressHandler","deleteUserAddress","AddressUpdatePage","errorFetchingAddress","addressUpdateSuccess","updatedAddress","updateUserAddress","dateCheck","param","dateValue","monthValue","yearValue","SearchBarForOrdersPage","handleSearchTerm","placeholderValue","OrdersListPage","todays_date","currentDateInfo","idOfchangeDeliveryStatus","setIdOfchangeDeliveryStatus","cloneSearchTerm","setCloneSearchTerm","loadingOrders","deliveryStatusChangeSuccess","deliveryStatusChangeSpinner","changeDeliveryStatusHandler","status","changeDeliveryStatus","term","Table","striped","bordered","ordered_item","paid_status","paid_at","total_price","is_delivered","delivered_at","ProductCreatePage","setDescription","setPrice","setStock","setImage","productCreationSuccess","productCreationError","form_data","FormData","append","createProduct","step","files","ProductUpdatePage","loadingPageDetails","newImage","setNewImage","productUpdationSuccess","loadingProductUpdations","productUpdationError","scrollTo","top","behavior","productId","updateProduct","defaultChecked","NotFoundPage","listPendingAds","userLogin","FullScreenAd","showAd","setShowAd","currentAdIndex","setCurrentAdIndex","activeAdsList","rotateAd","useCallback","prevIndex","initialTimer","setTimeout","interval","setInterval","clearTimeout","clearInterval","currentAd","centered","backdrop","ad_title","ad_type","ad_file_url","maxHeight","objectFit","controls","autoPlay","ad_description","AdvertisePage","FaAd","FaCheckCircle","FaArrowRight","href","AdSubmissionPage","phone","setPhone","adTitle","setAdTitle","adDescription","setAdDescription","adType","setAdType","adFile","setAdFile","paymentProof","setPaymentProof","agreement","setAgreement","paymentMethod","setPaymentMethod","adSubmissionReducer","formData","submitAd","rows","File","accept","Check","label","checked","AdApprovalPage","pendingAdsList","successApprove","approveHandler","confirm","approveAd","hover","responsive","created_at","toLocaleDateString","HelpPage","FaPhone","ListGroup","number","contact","index","FaWhatsapp","FaEnvelope","FaClock","AboutPage","teamPhoto","FaShoppingBag","FaThumbsUp","FaHeadset","OrderNowPage","setFormData","region","district","ward","street","product_details","handleChange","URLSearchParams","prev","timer","orderData","Error","completeOrderData","ordered_at","_error$response","_error$response$data","_error$response2","_error$response2$data","errorMessage","field","charAt","toUpperCase","replace","App","Router","Switch","Route","path","component","ProductListPage","exact","Login","Register","DeleteUserAccountPage","NotFound","ReactDOM","render","Provider","document","getElementById"],"mappings":"gQACO,MAAMA,EAAwB,wBACxBC,EAAwB,wBACxBC,EAAqB,qBAGrBC,EAA0B,0BAC1BC,EAA0B,0BAC1BC,EAAuB,uBAGvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAGvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAGvBC,EAAyB,yBACzBC,EAAyB,yBACzBC,EAAsB,sBACtBC,EAAuB,uBAGvBC,EAA4B,4BAC5BC,EAA4B,4BAC5BC,EAAyB,yBACzBC,EAA0B,0BAG1BC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBACnBC,EAAoB,oBAGpBC,EAAsB,sBACtBC,EAAsB,sBACtBC,EAAmB,mBACnBC,EAAoB,oBAGpBC,EAA2B,2BAC3BC,EAA2B,2BAC3BC,EAAwB,wBAGxBC,EAA4B,4BAC5BC,EAA4B,4BAC5BC,EAAyB,yBAGzBC,EAA6B,6BAC7BC,EAA6B,6BAC7BC,EAA0B,0BAC1BC,EAA2B,2BAG3BC,EAAqB,qBACrBC,EAAqB,qBACrBC,EAAkB,kBAClBC,EAAc,cAGdC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBAGrBC,GAAuB,uBACvBC,GAAuB,uBACvBC,GAAoB,oBAGpBC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAC3BC,GAA4B,4BAG5BC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAC3BC,GAA4B,4BAG5BC,GAAiC,iCACjCC,GAAiC,iCACjCC,GAA8B,8BAG9BC,GAA6B,6BAC7BC,GAA6B,6BAC7BC,GAA0B,0BAC1BC,GAA2B,2BAG3BC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAC3BC,GAA4B,4BAG5BC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAC3BC,GAA4B,4BAG5BC,GAA8B,8BAC9BC,GAA8B,8BAC9BC,GAA2B,2BAC3BC,GAA4B,4BAG5BC,GAAyB,yBACzBC,GAAyB,yBACzBC,GAAsB,sBAGtBC,GAAiC,iCACjCC,GAAiC,iCACjCC,GAA8B,8BAC9BC,GAA+B,+BAG/BC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBAEtBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAInBC,GAAsB,sBACtBC,GAAsB,sBACtBC,GAAmB,mBAGnBC,GAAqB,qBACrBC,GAAqB,qBACrBC,GAAkB,kBAGlBC,GAAwB,wBACxBC,GAAwB,wBACxBC,GAAqB,qBACrBC,GAAsB,sBCpJ7BC,GAAe,CACjBC,SAAS,EACTC,MAAO,KACPC,SAAS,EACTC,MAAO,KACPC,cAAe,MCiEJC,OAlCKC,0BAAgB,CAChCC,oBCV+B,WAAuC,IAAtCC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAEG,SAAU,IAAMC,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChE,OAAQE,EAAOC,MACX,KAAKpH,EACD,MAAO,IACA8G,EACHR,SAAS,EACTY,SAAU,GACVX,MAAO,IAEf,KAAKtG,EACD,MAAO,IACA6G,EACHR,SAAS,EACTY,SAAUC,EAAOE,QACjBd,MAAO,IAEf,KAAKrG,EACD,MAAO,IACA4G,EACHR,SAAS,EACTC,MAAOY,EAAOE,SAEtB,QACI,OAAOP,IDZfQ,sBCkBiC,WAAsC,IAArCR,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAEQ,QAAS,IAAMJ,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjE,OAAQE,EAAOC,MACX,KAAKjH,EACD,MAAO,IACA2G,EACHR,SAAS,EACTiB,QAAS,GACThB,MAAO,IAEf,KAAKnG,EACD,MAAO,IACA0G,EACHR,SAAS,EACTiB,QAASJ,EAAOE,QAChBd,MAAO,IAEf,KAAKlG,EACD,MAAO,IACAyG,EACHR,SAAS,EACTC,MAAOY,EAAOE,SAEtB,QACI,OAAOP,IDxCfU,qBC6CgC,WAAsC,IAArCV,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAEQ,QAAS,IAAMJ,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChE,OAAQE,EAAOC,MACX,KAAK9G,EACD,MAAO,IACAwG,EACHR,SAAS,EACTiB,QAAS,GACTf,SAAS,EACTD,MAAO,IAEf,KAAKhG,EACD,MAAO,IACAuG,EACHR,SAAS,EACTE,SAAS,EACTe,QAASJ,EAAOE,QAChBd,MAAO,IAEf,KAAK/F,EACD,MAAO,IACAsG,EACHR,SAAS,EACTE,SAAS,EACTe,QAAS,GACThB,MAAOY,EAAOE,SAEtB,KAAK5G,EACD,MAAO,IACAqG,EACHR,SAAS,EACTE,SAAS,EACTe,QAAS,GACThB,MAAO,IAEf,QACI,OAAOO,ID/EfW,qBCoFgC,WAAsC,IAArCX,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAEQ,QAAS,IAAMJ,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChE,OAAQE,EAAOC,MACX,KAAK1G,EACD,MAAO,IACAoG,EACHR,SAAS,EACTiB,QAAS,GACTf,SAAS,EACTD,MAAO,IAEf,KAAK5F,EACD,MAAO,IACAmG,EACHR,SAAS,EACTE,SAAS,EACTe,QAASJ,EAAOE,QAChBd,MAAO,IAEf,KAAK3F,EACD,MAAO,IACAkG,EACHR,SAAS,EACTE,SAAS,EACTe,QAAS,GACThB,MAAOY,EAAOE,SAEtB,KAAKxG,EACD,MAAO,IACAiG,EACHR,SAAS,EACTE,SAAS,EACTe,QAAS,GACThB,MAAO,IAEf,QACI,OAAOO,IDtHfY,qBC4HgC,WAAyB,IAAxBZ,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnD,OAAQE,EAAOC,MACX,KAAKtG,EACD,MAAO,IACAgG,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAKxF,EACD,MAAO,IACA+F,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAKvF,EACD,MAAO,IACA8F,EACHR,SAAS,EACTE,SAAS,EACTD,MAAOY,EAAOE,SAEtB,KAAKpG,EACD,MAAO,IACA6F,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,QACI,OAAOO,ID1Jfa,kBErB6B,WAAyB,IAAxBb,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQE,EAAOC,MACX,KAAK9F,EACD,MAAO,IACAwF,EACHR,SAAS,EACTsB,SAAU,GACVpB,SAAS,EACTD,MAAO,IAEf,KAAKhF,EACD,MAAO,IACAuF,EACHR,SAAS,EACTE,SAAS,EACToB,SAAUT,EAAOE,QACjBd,MAAO,IAEf,KAAK/E,EACD,MAAO,IACAsF,EACHR,SAAS,EACTsB,SAAU,GACVpB,SAAS,EACTD,MAAOY,EAAOE,SAEtB,KAAK5F,EACD,MAAO,IACAqF,EACHR,SAAS,EACTE,SAAS,EACToB,SAAU,GACVrB,MAAO,IAEf,QACI,OAAOO,IFbfe,kBEkB6B,WAAyB,IAAxBf,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQE,EAAOC,MACX,KAAK1F,EACD,MAAO,IACAoF,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAK5E,EACD,MAAO,IACAmF,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAK3E,EACD,MAAO,IACAkF,EACHR,SAAS,EACTE,SAAS,EACTD,MAAOY,EAAOE,SAEtB,KAAKxF,EACD,MAAO,IACAiF,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,QACI,OAAOO,IFhDfgB,sBEqDiC,WAAwC,IAAvChB,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAACgB,YAAa,IAAKZ,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACnE,OAAQE,EAAOC,MACX,KAAKtF,EACD,MAAO,IACAgF,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAKxE,EACD,MAAO,IACA+E,EACHR,SAAS,EACTE,SAAS,EACTuB,YAAaZ,EAAOE,QACpBd,MAAO,IAEf,KAAKvE,EACD,MAAO,IACA8E,EACHR,SAAS,EACTE,SAAS,EACTD,MAAOY,EAAOE,SAEtB,QACI,OAAOP,IF7EfkB,yBEkFoC,WAAyB,IAAxBlB,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAQE,EAAOC,MACX,KAAKhF,EACD,MAAO,CACHkE,SAAS,EACTE,SAAS,EACTyB,WAAY,GACZ1B,MAAO,IAEf,KAAKlE,EACD,MAAO,CACHiE,SAAS,EACTE,SAAS,EACTyB,WAAYd,EAAOE,QACnBd,MAAO,IAEf,KAAKjE,EACD,MAAO,CACHgE,SAAS,EACTE,SAAS,EACTyB,WAAY,GACZ1B,MAAOY,EAAOE,SAEtB,KAAK9E,EACD,MAAO,CACH+D,SAAS,EACTE,SAAS,EACTyB,WAAY,GACZ1B,MAAO,IAEf,QACI,OAAOO,IFhHfoB,uBEsHkC,WAAiC,IAAhCpB,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAACoB,KAAM,IAAKhB,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,OAAQE,EAAOC,MACX,KAAKnF,EACD,MAAO,IACA6E,EACHR,SAAS,EACTC,MAAO,IAEf,KAAKrE,EACD,MAAO,IACA4E,EACHR,SAAS,EACTE,SAAS,EACT2B,KAAMhB,EAAOE,QACbd,MAAO,IAEf,KAAKpE,EACD,MAAO,IACA2E,EACHR,SAAS,EACTC,MAAOY,EAAOE,SAEtB,QACI,OAAOP,IF5IfsB,iBGO4B,WAAyB,IAAxBtB,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC/C,OAAQE,EAAOC,MACX,KAAK5E,EACD,MAAO,IACAsE,EACHR,SAAS,GAEjB,KAAK7D,EACD,MAAO,IACAqE,EACHR,SAAS,EACT+B,SAAUlB,EAAOE,SAEzB,KAAK3E,EACD,MAAO,CACH4D,SAAS,EACTC,MAAOY,EAAOE,SAEtB,KAAK1E,EACD,MAAO,GAEX,QACI,OAAOmE,IH5BfwB,oBGiC+B,WAAyB,IAAxBxB,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAQE,EAAOC,MACX,KAAKxE,GACD,MAAO,IACAkE,EACHR,SAAS,GAEjB,KAAKzD,GACD,MAAO,IACAiE,EACHR,SAAS,EACT+B,SAAUlB,EAAOE,SAEzB,KAAKvE,GACD,MAAO,CACHwD,SAAS,EACTC,MAAOY,EAAOE,SAEtB,KAAK1E,EACD,MAAO,GAEX,QACI,OAAOmE,IHtDfyB,wBG2OmC,WAAyB,IAAxBzB,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACtD,OAAOE,EAAOC,MACV,KAAKvD,GACD,MAAO,IACAiD,EACHR,SAAS,EACTkC,QAAS,GACThC,SAAS,EACTD,MAAO,IAEf,KAAKzC,GACD,MAAO,IACAgD,EACHR,SAAS,EACTkC,QAASrB,EAAOE,QAChBb,SAAS,EACTD,MAAO,IAEf,KAAKxC,GACD,MAAO,IACA+C,EACHR,SAAS,EACTkC,QAAS,GACThC,SAAS,EACTD,MAAOY,EAAOE,SAEtB,KAAKrD,GACD,MAAO,IACA8C,EACHR,SAAS,EACTkC,QAAS,GACThC,SAAS,EACTD,MAAO,IAEf,QACI,OAAOO,IH7Qf2B,6BG0MwC,WAAyB,IAAxB3B,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC3D,OAAOE,EAAOC,MACV,KAAK1D,GACD,MAAO,IACAoD,EACHR,SAAS,EACToC,UAAW,GACXlC,SAAS,EACTD,MAAO,IAEf,KAAK5C,GACD,MAAO,IACAmD,EACHR,SAAS,EACToC,UAAWvB,EAAOE,QAClBb,SAAS,EACTD,MAAO,IAEf,KAAK3C,GACD,MAAO,IACAkD,EACHR,SAAS,EACToC,UAAW,GACXlC,SAAS,EACTD,MAAOY,EAAOE,SAEtB,QACI,OAAOP,IHpOf6B,yBGiRoC,WAAyB,IAAxB7B,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAOE,EAAOC,MACV,KAAKnD,GACD,MAAO,IACA6C,EACHR,SAAS,EACTkC,QAAS,GACThC,SAAS,EACTD,MAAO,IAEf,KAAKrC,GACD,MAAO,IACA4C,EACHR,SAAS,EACTkC,QAASrB,EAAOE,QAChBb,SAAS,EACTD,MAAO,IAEf,KAAKpC,GACD,MAAO,IACA2C,EACHR,SAAS,EACTE,SAAS,EACTgC,QAAS,GACTjC,MAAOY,EAAOE,SAEtB,KAAKjD,GACD,MAAO,IACA0C,EACHR,SAAS,EACTE,SAAS,EACTgC,QAAS,GACTjC,MAAO,IAEf,QACI,OAAOO,IHnTf8B,yBGwToC,WAAyB,IAAxB9B,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAOE,EAAOC,MACV,KAAK/C,GACD,MAAO,IACAyC,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAKjC,GACD,MAAO,IACAwC,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAKhC,GACD,MAAO,IACAuC,EACHR,SAAS,EACTE,SAAS,EACTD,MAAOY,EAAOE,SAEtB,KAAK7C,GACD,MAAO,IACAsC,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,QACI,OAAOO,IHtVf+B,yBG2VoC,WAAyB,IAAxB/B,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAOE,EAAOC,MACV,KAAK3C,GACD,MAAO,IACAqC,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAK7B,GACD,MAAO,IACAoC,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAK5B,GACD,MAAO,IACAmC,EACHR,SAAS,EACTE,SAAS,EACTD,MAAOY,EAAOE,SAEtB,KAAKzC,GACD,MAAO,IACAkC,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,QACI,OAAOO,IHzXfgC,oBG8X+B,WAAmC,IAAlChC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAACgC,OAAQ,IAAK5B,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5D,OAAOE,EAAOC,MACV,KAAKvC,GACD,MAAO,IACAiC,EACHR,SAAS,EACTyC,OAAQ,GACRxC,MAAO,IAEf,KAAKzB,GACD,MAAO,IACAgC,EACHR,SAAS,EACTyC,OAAQ5B,EAAOE,QACfd,MAAO,IAEf,KAAKxB,GACD,MAAO,IACA+B,EACHR,SAAS,EACTyC,OAAQ,GACRxC,MAAOY,EAAOE,SAEtB,QACI,OAAOP,IHrZfkC,4BCkJuC,WAAyB,IAAxBlC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1D,OAAQE,EAAOC,MACX,KAAKpC,GACD,MAAO,IACA8B,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAKtB,GACD,MAAO,IACA6B,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAKrB,GACD,MAAO,IACA4B,EACHR,SAAS,EACTE,SAAS,EACTD,MAAOY,EAAOE,SAEtB,KAAKlC,GACD,MAAO,IACA2B,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,QACI,OAAOO,IDhLfmC,4BG8JuC,WAAyB,IAAxBnC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1D,OAAOE,EAAOC,MACV,KAAKlG,EACD,MAAO,IACA4F,EACHR,SAAS,EACT4C,OAAO,EACP3C,MAAO,IAEf,KAAKpF,EACD,MAAO,IACA2F,EACHR,SAAS,EACT4C,OAAO,EACP3C,MAAO,IAEf,KAAKnF,EACD,MAAO,IACA0F,EACHR,SAAS,EACT4C,OAAO,EACP3C,MAAOY,EAAOE,SAEtB,KAAKhG,EACD,MAAO,IACAyF,EACHR,SAAS,EACT4C,OAAO,EACP3C,MAAO,IAEf,QACI,OAAOO,IH5LfqC,mBGoD8B,WAAyB,IAAxBrC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACjD,OAAOE,EAAOC,MACV,KAAKrE,GACD,MAAO,IACA+D,EACHR,SAAS,EACT8C,KAAM,GACN7C,MAAO,IAEf,KAAKvD,GACD,MAAO,IACA8D,EACHR,SAAS,EACT8C,KAAMjC,EAAOE,QACbd,MAAO,IAEf,KAAKtD,GACD,MAAO,IACA6D,EACHR,SAAS,EACT8C,KAAM,GACN7C,MAAOY,EAAOE,SAEtB,QACI,OAAOP,IH3EfuC,yBGgFoC,WAAyB,IAAxBvC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAOE,EAAOC,MACV,KAAKlE,GACD,MAAO,IACA4D,EACHR,SAAS,EACT8C,KAAM,GACN5C,SAAS,EACTD,MAAO,IAEf,KAAKpD,GACD,MAAO,IACA2D,EACHR,SAAS,EACTE,SAAS,EACT4C,KAAMjC,EAAOE,QACbd,MAAO,IAEf,KAAKnD,GACD,MAAO,IACA0D,EACHR,SAAS,EACTE,SAAS,EACT4C,KAAM,GACN7C,MAAOY,EAAOE,SAEtB,KAAKhE,GACD,MAAO,IACAyD,EACHR,SAAS,EACTE,SAAS,EACT4C,KAAM,GACN7C,MAAO,IAEf,QACI,OAAOO,IHlHfwC,yBGuHoC,WAAyB,IAAxBxC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACvD,OAAOE,EAAOC,MACV,KAAK9D,GACD,MAAO,IACAwD,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAKhD,GACD,MAAO,IACAuD,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,KAAK/C,GACD,MAAO,IACAsD,EACHR,SAAS,EACTE,SAAS,EACTD,MAAOY,EAAOE,SAEtB,KAAK5D,GACD,MAAO,IACAqD,EACHR,SAAS,EACTE,SAAS,EACTD,MAAO,IAEf,QACI,OAAOO,IHnJfyC,aIrD+B,WAKpB,IALqBzC,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CACxCT,SAAS,EACTC,MAAO,KACPC,SAAS,EACTgD,GAAI,MACLrC,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACL,OAAQE,EAAOC,MACX,KAAKhC,GACD,MAAO,IAAK0B,EAAOR,SAAS,EAAMC,MAAO,MAC7C,KAAKlB,GACD,MAAO,IAAKyB,EAAOR,SAAS,EAAOE,SAAS,EAAMgD,GAAIrC,EAAOE,SACjE,KAAK/B,GACD,MAAO,IAAKwB,EAAOR,SAAS,EAAOC,MAAOY,EAAOE,SACrD,KAAK9B,GACD,MAAO,CAAEe,SAAS,EAAOC,MAAO,KAAMC,SAAS,EAAOgD,GAAI,MAC9D,QACI,OAAO1C,IJsCf2C,WIlC6B,WAAyB,IAAxB3C,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,GAAII,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAChD,OAAQE,EAAOC,MACX,KAAK5B,GACD,MAAO,CAAEc,SAAS,GACtB,KAAKb,GACD,MAAO,CAAEa,SAAS,EAAOE,SAAS,GACtC,KAAKd,GACD,MAAO,CAAEY,SAAS,EAAOC,MAAOY,EAAOE,SAC3C,QACI,OAAOP,IJ0Bf4C,UItBgC,WAAwC,IAAvC5C,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAE2C,UAAW,IAAMvC,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClE,OAAQE,EAAOC,MACX,KAAKtB,GACD,MAAO,CAAEQ,SAAS,EAAMoD,UAAW,IACvC,KAAK3D,GACD,MAAO,CAAEO,SAAS,EAAOoD,UAAWvC,EAAOE,SAC/C,KAAKrB,GACD,MAAO,CAAEM,SAAS,EAAOC,MAAOY,EAAOE,SAC3C,QACI,OAAOP,IJcf6C,WIViC,WAAyC,IAAxC7C,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAG,CAAE4C,WAAY,IAAMxC,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EACpE,OAAQE,EAAOC,MACb,KAAKzB,GACH,MAAO,CAAEW,SAAS,EAAMqD,WAAY,IACtC,KAAK/D,GACH,MAAO,CAAEU,SAAS,EAAOqD,WAAYxC,EAAOE,SAC9C,KAAKxB,GACH,MAAO,CAAES,SAAS,EAAOC,MAAOY,EAAOE,SACzC,QACE,OAAOP,IJGX8C,aD3D+B,WAAmC,IAAlC9C,EAAKC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAGV,GAAcc,EAAMJ,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5D,OAAQE,EAAOC,MACX,KAAKnB,GACD,MAAO,IACAa,EACHR,SAAS,EACTC,MAAO,KACPC,SAAS,GAGjB,KAAKN,GACD,MAAO,IACAY,EACHR,SAAS,EACTE,SAAS,EACTC,MAAOU,EAAOE,QACdX,eAAe,IAAImD,MAAOC,cAC1BvD,MAAO,MAGf,KAAKJ,GACD,MAAO,IACAW,EACHR,SAAS,EACTC,MAAOY,EAAOE,QACdb,SAAS,GAGjB,KAAKJ,GACD,OAAOC,GAEX,QACI,OAAOS,MM1CnB,MAAMiD,GAAa,CAACC,KAIpB,IAAI3D,GAAe,CACf+B,iBAAkB,CAAEC,SAHI4B,aAAaC,QAAQ,YAAcC,KAAKC,MAAMH,aAAaC,QAAQ,aAAe,OAQ/FG,OAFDC,sBAAY3D,GAAaN,GAAckE,8BAAoBC,6BAAmBT,M,qCCkBrF,MAuBMU,GAAqBC,GAAOC,UACrC,IACIC,EAAS,CACLxD,KAAMjH,IAIV,MAAM,KAAEgI,SAAe0C,KAAMC,IAAI,gBAAgBJ,MAEjDE,EAAS,CACLxD,KAAMhH,EACNiH,QAASc,IAEf,MAAO5B,GACLqE,EAAS,CACLxD,KAAM/G,EACNgH,QAASd,EAAMwE,Y,sBC3DZC,OARf,SAAgBC,GAAyB,IAAxB,QAAEC,EAAO,SAAEC,GAAUF,EAClC,OACIG,eAACC,KAAK,CAACH,QAASA,EAAQC,SACnBA,K,uCCuBEG,OAxBf,SAAgBL,GAAe,IAAd,QAAE1D,GAAS0D,EACxB,OACIG,eAAA,OAAAD,SACIC,eAACG,KAAI,CAACC,UAAU,eAAcL,SAE1BM,gBAACF,KAAKG,KAAI,CAAAP,SAAA,CACVC,eAACO,QAAI,CAACC,GAAI,YAAYrE,EAAQmD,KAAKS,SAC/BC,eAACG,KAAKM,IAAG,CAACX,QAAQ,MAAMY,IAAKvE,EAAQwE,MAAOC,OAAO,UAEnDZ,eAACO,QAAI,CAACC,GAAI,YAAYrE,EAAQmD,KAAKS,SAC/BC,eAACG,KAAKU,MAAK,CAACC,GAAG,MAAKf,SAChBC,eAAA,UAAAD,SAAS5D,EAAQ4E,WAIzBV,gBAACF,KAAKa,KAAI,CAACF,GAAG,KAAIf,SAAA,CAAC,OACV5D,EAAQ8E,iBC4FtBC,OAvGf,WACI,IAAIC,EAAUC,eACVC,EAAaF,EAAQG,SAASC,OAASJ,EAAQG,SAASC,OAAOC,MAAM,KAAK,GAAGC,cAAgB,GACjG,MAAMjC,EAAWkC,cAGXjG,EAAsBkG,aAAYjG,GAASA,EAAMD,uBACjD,QAAEP,EAAO,MAAEC,EAAK,SAAEW,GAAaL,EAiBrC,OAfAmG,qBAAU,KACNpC,GHW6BD,UACjC,IACIC,EAAS,CACLxD,KAAMpH,IAIV,MAAM,KAAEmI,SAAe0C,KAAMC,IAAI,kBAEjCF,EAAS,CACLxD,KAAMnH,EACNoH,QAASc,IAEf,MAAO5B,GACLqE,EAAS,CACLxD,KAAMlH,EACNmH,QAASd,EAAMwE,cG1BnBH,EAAS,CACLxD,KAAM3G,MAEX,CAACmK,IAWAa,gBAAA,OAAAN,SAAA,CAEIC,eAACG,KAAI,CAACC,UAAU,iBAAiByB,MAAO,CACpCC,WAAY,oDACZC,OAAQ,OACRC,aAAc,QAChBjC,SACEM,gBAACF,KAAKG,KAAI,CAACF,UAAU,mBAAkBL,SAAA,CACnCC,eAAA,MAAI6B,MAAO,CACPI,MAAO,UACPC,WAAY,OACZC,aAAc,QAChBpC,SAAC,2CAGHC,eAAA,KAAGI,UAAU,YAAYyB,MAAO,CAC5BI,MAAO,UACPG,SAAU,WACZrC,SAAC,+DAGHC,eAAA,OAAKI,UAAU,gCAA+BL,SAC1CC,eAACO,QAAI,CACDC,GAAG,aACHJ,UAAU,yBACVyB,MAAO,CACHQ,QAAS,eACTD,SAAU,SACVF,WAAY,MACZF,aAAc,OACdM,UAAW,gCACXC,WAAY,iBAEhBC,YAAcC,IACVA,EAAEC,OAAOb,MAAMc,UAAY,mBAC3BF,EAAEC,OAAOb,MAAMS,UAAY,kCAE/BM,WAAaH,IACTA,EAAEC,OAAOb,MAAMc,UAAY,gBAC3BF,EAAEC,OAAOb,MAAMS,UAAY,iCAC7BvC,SACL,+BAILC,eAAA,OAAKI,UAAU,kBAAiBL,SAC5BC,eAAA,SAAAD,SAAO,sDAMlB5E,GAAS6E,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAE5E,IACpCD,GAAWmF,gBAAA,QAAMwB,MAAO,CAAEgB,QAAS,QAAS9C,SAAA,CACzCC,eAAA,MAAAD,SAAI,qBACJC,eAAA,QAAMI,UAAU,OAAML,SAClBC,eAAC8C,KAAO,CAACC,UAAU,gBAG3B/C,eAAA,OAAAD,SACIC,eAACgD,KAAG,CAAAjD,SACoF,IAAnFjE,EAASmH,QAAQC,GAASA,EAAKnC,KAAKU,cAAc0B,SAAS9B,KAAazF,OApEjFoE,eAAA,OAAAD,SACM7E,EAA8D,GAApD8E,eAACJ,GAAO,CAACE,QAAQ,OAAMC,SAAC,sBAqE1BjE,EAASmH,QAAQC,GAASA,EAAKnC,KAAKU,cAAc0B,SAAS9B,KACxD+B,KAAI,CAACjH,EAASkH,IACXrD,eAACsD,KAAG,CAAkBC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAE3D,SAC9CC,eAAA,OAAKI,UAAU,OAAML,SACjBC,eAACE,GAAO,CAAC/D,QAASA,OAFhBA,EAAQmD,c,6BC8DnCqE,OAzJf,SAA2B9D,GAAsB,IAArB,QAAEsB,EAAO,MAAEyC,GAAO/D,EAE1C,MAAML,EAAWkC,eAGVmC,EAAMC,GAAWC,oBAAS,GAC3BC,EAAcA,IAAMF,GAAQ,GAI5B5H,EAAwByF,aAAYjG,GAASA,EAAMQ,yBACnD,QAAEhB,EAAO,MAAEC,EAAK,QAAEgB,GAAYD,EAG9Bc,EAAmB2E,aAAYjG,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfV,EAAuBqF,aAAYjG,GAASA,EAAMY,wBAChDlB,QAAS6I,GAA2B3H,EAE5CsF,qBAAU,KACNpC,EAASH,GAAkBuE,EAAMM,OAAO5E,KACxCE,EAAS,CACLxD,KAAMvG,IAEV+J,EAAS,CACLxD,KAAM3G,IAEVmK,EAAS,CACLxD,KAAM3F,MAEX,CAACmJ,EAAUoE,IAGd,MAAMO,EAAgBA,KJwEI7E,MIvEtBE,GJuEsBF,EIvECsE,EAAMM,OAAO5E,GJuEPC,MAAOC,EAAU4E,KAClD,IACI5E,EAAS,CACLxD,KAAMtG,IAIV,MACIsH,kBAAkB,SAAEC,IACpBmH,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUtH,EAASuH,WAKpC,KAAEzH,SAAe0C,KAAMgF,OACzB,uBAAuBnF,KACvB+E,GAGJ7E,EAAS,CACLxD,KAAMrG,EACNsG,QAASc,IAGf,MAAO5B,GACLqE,EAAS,CACLxD,KAAMpG,EACNqG,QAASd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMwE,cItG/FqE,KAYJ,OARIC,IACAW,MAAM,iCACNzD,EAAQ0D,KAAK,KACbrF,EAAS,CACLxD,KAAMnG,KAKVwK,gBAAA,OAAAN,SAAA,CAGIC,eAAA,OAAAD,SACIM,gBAACyE,KAAK,CAACjB,KAAMA,EAAMkB,OAAQf,EAAYjE,SAAA,CACnCC,eAAC8E,KAAME,OAAM,CAACC,aAAW,EAAAlF,SACrBM,gBAACyE,KAAMjE,MAAK,CAAAd,SAAA,CACRC,eAAA,KAAG6B,MAAO,CAAEI,MAAO,WAAa7B,UAAU,gCACzC,IAAI,2BAIbC,gBAACyE,KAAMxE,KAAI,CAAAP,SAAA,CAAC,gDAA6CM,gBAAA,MAAAN,SAAA,CAAI,IAAE5D,EAAQ4E,KAAK,OAAM,OAClFV,gBAACyE,KAAMI,OAAM,CAAAnF,SAAA,CACTC,eAACmF,KAAM,CAACrF,QAAQ,SAASsF,QAASA,IAAMjB,IAAgBpE,SAAC,mBAGzDC,eAACmF,KAAM,CAACrF,QAAQ,UAAUsF,QAASpB,EAAYjE,SAAC,mBAS3D7E,GAAWmF,gBAAA,QAAMwB,MAAO,CAAEgB,QAAS,QAAS9C,SAAA,CACzCC,eAAA,MAAAD,SAAI,4BACJC,eAAA,QAAMI,UAAU,OAAML,SAClBC,eAAC8C,KAAO,CAACC,UAAU,gBAG1B5H,EAAQ6E,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAE5E,IAEhC6E,eAAA,OAAAD,SACIC,eAACqF,KAAS,CAAAtF,SACNM,gBAAC2C,KAAG,CAAAjD,SAAA,CACAM,gBAACiD,KAAG,CAACE,GAAI,EAAEzD,SAAA,CACPC,eAACG,KAAKM,IAAG,CAACX,QAAQ,MAAMY,IAAKvE,EAAQwE,MAAOC,OAAO,QAIlD3D,GAAYA,EAASqI,MAClBjF,gBAAA,QAAMwB,MAAO,CAAEgB,QAAS,QAAS9C,SAAA,CAC7BC,eAAA,UACII,UAAU,8CACVyB,MAAO,CAAE0D,MAAO,QAChBH,QAASA,IA1FxBtB,GAAQ,GA0FmC/D,SAC/B,mBAGDC,eAAA,UACII,UAAU,oDACVgF,QAASA,IAAMjE,EAAQ0D,KAAK,mBAAmB1I,EAAQmD,OACvDuC,MAAO,CAAE0D,MAAO,QAASxF,SAC5B,oBAGH,MAGVM,gBAACiD,KAAG,CAACC,IAAE,EAAAxD,SAAA,CACHC,eAAA,KAAAD,SAAI5D,EAAQ4E,OACZf,eAAA,SACAA,eAAA,QAAMI,UAAU,0BAAyBL,SACrCC,eAAA,KAAAD,SAAI5D,EAAQqJ,gBAEhBnF,gBAAA,QAAMwB,MAAO,CACTgB,QAAS,OACT4C,eAAgB,SAChB1D,OAAQ,YACR2D,YAAa,UACbrD,QAAS,OACXtC,SAAA,CAAC,SACOM,gBAAA,QAAMD,UAAU,oBAAmBL,SAAA,CAAC,OAAK5D,EAAQ8E,eAG/DZ,gBAACiD,KAAG,CAACC,IAAE,EAAAxD,SAAA,CACHC,eAAA,KAAAD,SAAG,QACHC,eAAA,SACC7D,EAAQwJ,MAML3F,eAACO,QAAI,CAACC,GAAI,sBAAsBrE,EAAQmD,KAAMc,UAAU,uBAAsBL,SAAC,cAI/EC,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAC,gC,oBC3HvD,MAAM6F,GAAcpJ,GAAa+C,MAAOC,EAAU4E,KAErD,IAEI5E,EAAS,CACLxD,KAAM9F,IAGV,MACI8G,kBAAkB,SAAEC,IACpBmH,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUtH,EAASuH,QAClC,cAAehI,EAASqJ,cAK1B,KAAE9I,SAAe0C,KAAMqG,KACzB,yBACA,CACI,MAAStJ,EAASuJ,MAClB,OAAUvJ,EAASqJ,WACnB,UAAarJ,EAASwJ,SACtB,SAAYxJ,EAASyJ,QACrB,IAAOzJ,EAAS0J,IAChB,UAAa1J,EAAS2J,UAE1B9B,GAGJ7E,EAAS,CACLxD,KAAM7F,EACN8F,QAASc,IAGf,MAAO5B,GACLqE,EAAS,CACLxD,KAAM5F,EACN6F,QAASd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMwE,YAgD1FyG,GAAiBA,IAAM7G,MAAOC,EAAU4E,KAEjD,IACI5E,EAAS,CACLxD,KAAMtF,IAGV,MACIsG,kBAAkB,SAAEC,IACpBmH,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUtH,EAASuH,WAKpC,KAAEzH,SAAe0C,KAAMC,IAAI,yBAA0B2E,GAE3D7E,EAAS,CACLxD,KAAMrF,EACNsF,QAASc,IAGf,MAAO5B,GACLqE,EAAS,CACLxD,KAAMpF,EACNqF,QAASd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMwE,YC1FxF0G,OAhDf,SAA4BxG,GAAkF,IAAjF,OAAEyG,EAAM,iBAAEC,EAAgB,qBAAEC,EAAoB,2BAAEC,GAA4B5G,EAEvG,MAAML,EAAWkC,cAGXyC,EAAiBuC,IDsLKC,MCrLxBnH,GDqLwBmH,ECrLCD,EDqLenH,MAAOC,EAAU4E,KAE7D,IACI5E,EAAS,CACLxD,KAAMnF,IAGV,MACImG,kBAAkB,SAAEC,IACpBmH,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUtH,EAASuH,WAKpC,KAAEzH,SAAe0C,KAAMqG,KACzB,yBACA,CAAE,YAAea,GACjBtC,GAGJ7E,EAAS,CACLxD,KAAMlF,EACNmF,QAASc,IAGf,MAAO5B,GACLqE,EAAS,CACLxD,KAAMjF,EACNkF,QAASd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMwE,cCrN/F8G,KAGJ,OACIzG,eAAA,OAAAD,SAEIC,eAAA,OAAAD,SACIM,gBAACyE,KAAK,CAACjB,KAAM2C,EAAsBzB,OAAQ0B,EAA2B1G,SAAA,CAClEC,eAAC8E,KAAME,OAAM,CAACC,aAAW,EAAAlF,SACrBM,gBAACyE,KAAMjE,MAAK,CAAAd,SAAA,CACRC,eAAA,KAAG6B,MAAO,CAAEI,MAAO,WAAa7B,UAAU,gCACzC,IAAI,2BAIbC,gBAACyE,KAAMxE,KAAI,CAAAP,SAAA,CACPM,gBAAA,KAAAN,SAAA,CACIC,eAAA,KAAAD,SAAG,aAGF,IAAI,0EACL,6CACuCwG,EAAiB,QAGhElG,gBAACyE,KAAMI,OAAM,CAAAnF,SAAA,CACTC,eAACmF,KAAM,CAACrF,QAAQ,SAASsF,QAASA,IAAMjB,EAAcoC,GAAkBxG,SAAC,mBAGzEC,eAACmF,KAAM,CAACrF,QAAQ,UAAUsF,QAASqB,EAA2B1G,SAAC,sBChCvF,IACI6G,IADc,IAAInI,MACSoI,cAsShBC,OAnSajH,IAAuC,IAAtC,YAAElD,EAAW,gBAAEoK,GAAiBlH,EAErDsB,EAAUC,eACd,MAAM5B,EAAWkC,eAEV4E,GAAUvC,mBAAS,IACnByC,EAAsBQ,GAA2BjD,oBAAS,IAC1DkD,EAAeC,GAAoBnD,oBAAS,IAC5CoD,EAAaC,GAAkBrD,oBAAS,IACxCsD,EAAeC,GAAoBvD,mBAAS,IAC5CwD,EAAgBC,GAAqBzD,oBAAS,IAC9CwC,GAAoBxC,mBAAS,KAC7BgC,EAAO0B,GAAY1D,mBAAS,KAC5B8B,EAAY6B,GAAiB3D,mBAAS,KACtCiC,EAAU2B,GAAe5D,mBAAS,KAClCkC,EAAS2B,GAAc7D,mBAAS,KAChCmC,EAAK2B,GAAU9D,mBAAS,KACxBoC,EAAU2B,GAAe/D,oBAAS,GAGnC/G,EAAmB2E,aAAYjG,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfF,EAAyB6E,aAAYjG,GAASA,EAAMoB,0BACpD,QAAE5B,EAAO,QAAEE,EAAO,MAAED,GAAU2B,EAEpC8E,qBAAU,KACD3E,GACDkE,EAAQ0D,KAAK,YAElB,CAAC1D,EAASlE,EAAU7B,IAGvB,MAmCM2M,EAAmBvL,IACrB,GAAI2K,GACI3K,EAAS8C,KAAO+H,EAChB,OACIhH,gBAAA,OAAAN,SAAA,CACIC,eAAA,UACIoF,QAASA,IAAMgC,GAAe,GAC9BhH,UAAU,iDACVyB,MAAO,CAAEmG,MAAO,QAASC,SAAU,WAAY,IAAO,SAAUlI,SAAC,UAGrEM,gBAAA,KAAAN,SAAA,CAAGC,eAAA,KAAAD,SAAG,eAAc,IAAEvD,EAAS0L,aAC/B7H,gBAAA,KAAAN,SAAA,CAAGC,eAAA,KAAAD,SAAG,cAAa,IAAEvD,EAAS2L,gBAkBlD,OANI/M,IACAwJ,MAAM,8BACNwD,OAAO9G,SAAS+G,UAKhBhI,gBAAA,OAAAN,SAAA,CAGIC,eAAA,OAAAD,SACIC,eAAAsI,YAAA,CAAAvI,SACIC,eAACqG,GAAmB,CAChBC,OAAQA,EACRC,iBAAkBA,EAClBC,qBAAsBA,EACtBC,2BArBeA,KAC/BO,GAAyBR,UA2BpBtL,GAEGmF,gBAAA,QAAMwB,MAAO,CAAEgB,QAAS,QAAS9C,SAAA,CAC7BC,eAAA,MAAAD,SAAI,kBACJC,eAAA,QAAMI,UAAU,OAAML,SAClBC,eAAC8C,KAAO,CAACC,UAAU,gBAG9B5H,GAAS6E,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAE5E,IACrCkF,gBAAA,OAAKD,UAAU,iBAAgBL,SAAA,CAC3BC,eAAA,UAAQI,UAAWmH,EACb,8CACA,+CACFnC,QAASA,IACLoC,GAAmBD,GACtBxH,SACAwH,EACK,QACA,sBAGTA,EACGlH,gBAACkI,KAAI,CAACC,SAxGQ/F,IAE1B,GADAA,EAAEgG,iBACE1B,EAAiB,CACjB,MAAMhK,EAAO,CACT,MAAmB,KAAVgJ,EAAe9I,EAAS8I,MAAQA,EACzC,WAAcF,EACd,SAAYG,EAAW0C,OAAO1C,GAAY,GAC1C,QAAWC,EAAUyC,OAAOzC,GAAW,GACvC,IAAOC,EAAMwC,OAAOxC,GAAO,GAC3B,SAAYC,GAEhB3G,EAASoG,GAAW7I,SAEpB6H,MAAM,kDA2FuC7E,SAAA,CAEhCkH,EACG5G,gBAACkI,KAAKI,MAAK,CAAA5I,SAAA,CACPC,eAACuI,KAAKK,MAAK,CAAA7I,SAACC,eAAA,KAAAD,SAAG,gCACfC,eAACuI,KAAKM,QAAO,CACTC,WAAW,EACX9M,KAAK,QACL+M,QAAQ,iBACRC,MAAOjD,EACPkD,SAAWxG,GAAMgF,EAAShF,EAAEC,OAAOsG,OACnCE,YAAY,0CAGpB7I,gBAAA,QAAAN,SAAA,CAAMC,eAAA,KAAAD,SAAG,6BAA6B9C,EAAS8I,SAEnD/F,eAAA,KAAAD,SACIC,eAACO,QAAI,CAACC,GAAG,IAAI4E,QAASA,KAClB8B,GAAkBD,GAClBQ,EAAS,KACX1H,SACGkH,EAAgB,yBAA2B,2BAIpD5G,gBAACkI,KAAKI,MAAK,CAACvI,UAAU,OAAML,SAAA,CACxBC,eAACuI,KAAKK,MAAK,CAAA7I,SAACC,eAAA,KAAAD,SAAG,kBACfC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACL+M,QAAQ,SACRC,MAAOnD,EACPoD,SAAWxG,GAAMiF,EAAcjF,EAAEC,OAAOsG,OACxCE,YAAY,yBAAyBC,UAAU,KAC/CC,UAAQ,OAIhB/I,gBAAC2C,KAAG,CAAAjD,SAAA,CAEAC,eAACsD,KAAG,CAAAvD,SACAM,gBAACkI,KAAKI,MAAK,CAACvI,UAAU,OAAML,SAAA,CACxBC,eAACuI,KAAKK,MAAK,CAAA7I,SAACC,eAAA,KAAAD,SAAG,gBACfM,gBAAA,UACID,UAAU,eACViJ,aAAcrD,EACdiD,SAAUxG,GAAKkF,EAAYlF,EAAEC,OAAOsG,OACpCI,UAAQ,EAAArJ,SAAA,CAERC,eAAA,UAAAD,SAAQ,UACPuJ,MAAMC,KAAK,CAAE3N,OAAQ,KAAM,CAAC4N,EAAGC,IAAMzJ,eAAA,UAAAD,SAGjC0J,EAAI,GAFAA,aASrBzJ,eAACsD,KAAG,CAAAvD,SACAM,gBAACkI,KAAKI,MAAK,CAACvI,UAAU,OAAML,SAAA,CACxBC,eAACuI,KAAKK,MAAK,CAAA7I,SAACC,eAAA,KAAAD,SAAG,eACfM,gBAAA,UAAQD,UAAU,eACdiJ,aAAcpD,EACdgD,SAAUxG,GAAKmF,EAAWnF,EAAEC,OAAOsG,OACnCI,UAAQ,EAAArJ,SAAA,CAERC,eAAA,UAAAD,SAAQ,UACPuJ,MAAMC,KAAK,CAAE3N,OAAQ,KAAM,CAAC4N,EAAGC,IAAMzJ,eAAA,UAAAD,SAEpC6G,GAAe6C,GADRA,aAMrBzJ,eAACsD,KAAG,CAAAvD,SACAM,gBAACkI,KAAKI,MAAK,CAACvI,UAAU,OAAML,SAAA,CACxBC,eAACuI,KAAKK,MAAK,CAAA7I,SAACC,eAAA,KAAAD,SAAG,iBACfC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,UACLiN,SAAWxG,GAAMoF,EAAOpF,EAAEC,OAAOsG,OACjCE,YAAY,MACZC,UAAU,IACVJ,QAAQ,SACRK,UAAQ,YAOxBpJ,eAACuI,KAAKvH,KAAI,CAACZ,UAAU,kBAAiBL,SAClCM,gBAAA,QAAMwB,MAAO,CAAEgB,QAAS,QAAS9C,SAAA,CAC7BC,eAAA,SACI0J,OAAQzC,EACRjL,KAAK,WACLoE,UAAU,OACV4I,OAAO/B,GAAwBd,EAC/B8C,SAAUA,IAAMnB,GAAa3B,KAEjCnG,eAAA,QAAM0J,OAAQzC,EAAe7G,UAAU,OAAML,SAAC,0CAItDC,eAACmF,KAAM,CAAC/E,UAAU,0BAA0BN,QAAQ,UAAU9D,KAAK,SAAQ+D,SAAC,cAI9E,MAIVM,gBAAA,OAAKD,UAAU,sBAAqBL,SAAA,CAChCC,eAAA,MAAAD,SAAI,eACHpD,EAAYf,OAAS,EAClBe,EAAYyG,KAAI5G,GACZ6D,gBAAA,OAAAN,SAAA,CACIM,gBAACF,KAAI,CACD0B,MAAO,CAAEE,OAAQ,YAAa2D,YAAa,WAC3CtF,UAAU,MAAKL,SAAA,CACfM,gBAAA,KAAAN,SAAA,CAAGC,eAAA,KAAAD,SAAG,iBAAgB,mBAAiBvD,EAASmK,YAAYgD,MAAM,GAAG,OACrEtJ,gBAAA,OAAAN,SAAA,CACKgI,EAAgBvL,GACjBwD,eAAA,UAAQoF,QAASA,KACbgC,GAAe,GACfE,EAAiB9K,EAAS8C,KAC3Bc,UAAU,kDAAiDL,SAC7D,sBAGDC,eAAA,UAAQoF,QAASA,IAxNvB5I,KACtB,GAAIuK,EAAiB,CACjB,MAAMhK,EAAO,CACT,MAASP,EAASuJ,MAClB,WAAcvJ,EAASmK,YACvB,SAAY+B,OAAOlM,EAAS0L,WAC5B,QAAWQ,OAAOlM,EAAS2L,UAC3B,IAAOO,OAAOlM,EAAS0J,KACvB,UAAY,GAEhB1G,EAASoG,GAAW7I,SAEpB6H,MAAM,kDA4MyCgF,CAAiBpN,GACpC4D,UAAU,uDAAsDL,SAAC,6BAQ7EC,eAAA,QACIoF,QAASA,IAAMjE,EAAQ0D,KAAK,yBAAyB9E,SACrDC,eAAA,KACI6J,MAAM,YACNzJ,UAAU,+CA3BZ5D,EAAS8C,MA+BlB,wBCnPlB,MAmCMwK,GAASA,IAAOtK,IACzBX,aAAakL,WAAW,YACxBvK,EAAS,CACLxD,KAAMzE,IAEViI,EAAS,CACLxD,KAAM3F,KAyCD2T,GAAuBA,IAAMzK,MAAOC,EAAU4E,KACvD,IAEI5E,EAAS,CACLxD,KAAMlG,IAGV,MACIkH,kBAAkB,SAAEC,IACpBmH,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUtH,EAASuH,WAKpC,KAAEzH,SAAe0C,KAAMC,IAAI,yBAA0B2E,GAE3D7E,EAAS,CACLxD,KAAMjG,EACNkG,QAASc,IAGf,MAAO5B,GACLqE,EAAS,CACLxD,KAAMhG,EACNiG,QAASd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAKkN,QAAU9O,EAAMuJ,SAAS3H,KAAKkN,QAAU9O,EAAMwE,YAQ5FuK,GAAe5K,GAAOC,MAAOC,EAAU4E,KAEhD,IAEI5E,EAAS,CACLxD,KAAMrE,KAGV,MACIqF,kBAAkB,SAAEC,IACpBmH,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUtH,EAASuH,WAKpC,KAAEzH,SAAe0C,KAAMC,IAAI,iBAAiBJ,IAAM+E,GAExD7E,EAAS,CACLxD,KAAMpE,GACNqE,QAASc,IAGf,MAAO5B,GACLqE,EAAS,CACLxD,KAAMnE,GACNoE,QAASd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAKkN,QAAU9O,EAAMuJ,SAAS3H,KAAKkN,QAAU9O,EAAMwE,YA8F5FwK,GAAgBA,IAAM5K,MAAOC,EAAU4E,KAChD,IACI5E,EAAS,CACLxD,KAAM1D,KAGV,MACI0E,kBAAkB,SAAEC,IACpBmH,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUtH,EAASuH,WAKpC,KAAEzH,SAAe0C,KAAMC,IACzB,gCACA2E,GAGJ7E,EAAS,CACLxD,KAAMzD,GACN0D,QAASc,IAGf,MAAO5B,GACLqE,EAAS,CACLxD,KAAMxD,GACNyD,QAASd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAKkN,QAAU9O,EAAMuJ,SAAS3H,KAAKkN,QAAU9O,EAAMwE,YAO5FyK,GAAoB9K,GAAOC,MAAOC,EAAU4E,KACrD,IACI5E,EAAS,CACLxD,KAAMvD,KAGV,MACIuE,kBAAkB,SAAEC,IACpBmH,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUtH,EAASuH,WAKpC,KAAEzH,SAAe0C,KAAMC,IACzB,4BAA4BJ,KAC5B+E,GAGJ7E,EAAS,CACLxD,KAAMtD,GACNuD,QAASc,IAGf,MAAO5B,GACLqE,EAAS,CACLxD,KAAMrD,GACNsD,QAASd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAKkN,QAAU9O,EAAMuJ,SAAS3H,KAAKkN,QAAU9O,EAAMwE,YA2H5F0K,GAAeA,IAAM9K,MAAOC,EAAU4E,KAC/C,IACI5E,EAAS,CACLxD,KAAMvC,KAGV,MACIuD,kBAAkB,SAAEC,IACpBmH,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUtH,EAASuH,WAKpC,KAAEzH,SAAe0C,KAAMC,IACzB,4BACA2E,GAGJ7E,EAAS,CACLxD,KAAMtC,GACNuC,QAASc,IAGf,MAAO5B,GACLqE,EAAS,CACLxD,KAAMrC,GACNsC,QAASd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAKkN,QAAU9O,EAAMuJ,SAAS3H,KAAKkN,QAAU9O,EAAMwE,YCvZ1F2K,OA3GazK,IAA6D,IAA5D,QAAE1D,EAAO,MAAEyH,EAAK,kBAAE2G,EAAiB,gBAAExD,GAAiBlH,EAE3EsB,EAAUC,eACd,MAAM5B,EAAWkC,cAGXnF,EAAoBoF,aAAYjG,GAASA,EAAMa,qBAC/C,SAAEC,GAAaD,EAGfE,EAAoBkF,aAAYjG,GAASA,EAAMe,qBAC7CrB,QAASoP,EAAmBrP,MAAOsP,EAAavP,QAASwP,GAAmBjO,EAG9EU,EAA0BwE,aAAYjG,GAASA,EAAMyB,2BACrD,QAAEC,GAAYD,EAEpByE,qBAAU,KACNpC,EAAS4K,GAAiBG,MAC3B,CAAC/K,EAAUoE,EAAO2G,IA+BrB,OARIC,IACArJ,EAAQ0D,KAAK,CACT8F,SAAU,mBACVjP,MAAO,CAAEiJ,OAAQxI,KAErBiM,OAAO9G,SAAS+G,UAIhBhI,gBAAA,OAAAN,SAAA,CACK0K,EAAczK,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAE0K,IAAyB,GACnEzK,eAAA,QAAMI,UAAU,YAAWL,SACvBC,eAAA,MAAAD,SAAI,sBAERM,gBAAA,OAAKD,UAAU,OAAML,SAAA,CAAC,8BACUvD,EAASoO,UAAUC,SAEnD7K,eAACuI,KAAI,CAACC,SArCI/F,IACdA,EAAEgG,iBACF,MAAMqC,EAAiB,GAAG1N,EAAQ2N,kBAAkB3N,EAAQ4N,aAAa5N,EAAQ6N,mBAC/E7N,EAAQ1B,UAAU0B,EAAQ8N,WACtBnO,EAAO,CACT,MAASP,EAASuJ,MAClB,OAAUvJ,EAAS8C,GACnB,OAAUnD,EAAQ8E,MAClB,KAAQ7D,EAAQ2D,KAChB,YAAevE,EAASoO,UAAUC,MAClC,QAAWC,EACX,aAAgB3O,EAAQ4E,KACxB,aAAe,EACf,YAAe5E,EAAQ8E,MACvB,cAAgB,EAChB,aAAgB,iBAEpBzB,EJ2BuBhD,IAAa+C,MAAOC,EAAU4E,KAEzD,IAEI5E,EAAS,CACLxD,KAAM1F,IAGV,MACI0G,kBAAkB,SAAEC,IACpBmH,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUtH,EAASuH,WAKpC,KAAEzH,SAAe0C,KAAMqG,KACzB,6BACAtJ,EACA6H,GAGJ7E,EAAS,CACLxD,KAAMzF,EACN0F,QAASc,IAGf,MAAO5B,GACLqE,EAAS,CACLxD,KAAMxF,EACNyF,QAASd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMwE,YI7DtFwL,CAAepO,KAoBKgD,SAEpB2K,EACGrK,gBAAC8E,KAAM,CAACrF,QAAQ,UAAUsL,UAAQ,EAACvJ,MAAO,CAAE0D,MAAO,QAASxF,SAAA,CACxDC,eAAC8C,KAAO,CACJhC,GAAG,OACHiC,UAAU,OACVsI,KAAK,KACLC,KAAK,SACLC,cAAY,SAEf,IAAI,2BAGTlL,gBAAC8E,KAAM,CAACrF,QAAQ,UAAU9D,KAAK,SAAS6F,MAAO,CAAE0D,MAAO,QAASxF,SAAA,CAAC,aACxD5D,EAAQ8E,WAK1BjB,eAACG,KAAI,CACDC,UAAU,gBACVyB,MAAO,CAAEE,OAAQ,YAAa2D,YAAa,WAAY3F,SAEtD3C,EACGiD,gBAAA,OAAAN,SAAA,CACIC,eAAA,QAAMI,UAAU,YAAWL,SACvBC,eAAA,KAAAD,SAAGC,eAAA,MAAAD,SAAI,2CAEXC,eAAA,QACAK,gBAAA,KAAAN,SAAA,CAAGC,eAAA,KAAAD,SAAG,WAAW3C,EAAUA,EAAQ2D,KAAO,MAC1CV,gBAAA,KAAAN,SAAA,CAAGC,eAAA,KAAAD,SAAG,mBAAmB3C,EAAUA,EAAQoO,aAAe,MAC1DnL,gBAAA,KAAAN,SAAA,CAAGC,eAAA,KAAAD,SAAG,mBAAmB3C,EAAUA,EAAQ2N,SAAW,MACtD1K,gBAAA,KAAAN,SAAA,CAAGC,eAAA,KAAAD,SAAG,eAAe3C,EAAUA,EAAQ4N,SAAW,MAClD3K,gBAAA,KAAAN,SAAA,CAAGC,eAAA,KAAAD,SAAG,WAAW3C,EAAUA,EAAQ6N,KAAO,MAC1C5K,gBAAA,KAAAN,SAAA,CAAGC,eAAA,KAAAD,SAAG,YAAY3C,EAAUA,EAAQ1B,MAAQ,MAC5C2E,gBAAA,KAAAN,SAAA,CAAGC,eAAA,KAAAD,SAAG,wBAAwB3C,EAAUA,EAAQ8N,SAAW,SAG/D,KAGRlL,eAACO,QAAI,CAACC,GAAG,IAAI4E,QAASA,IAAMgD,OAAO9G,SAAS+G,SAAStI,SAAC,uCC9CnD0L,OAzDf,SAA6B5L,GAAuB,IAAtB,gBAAE6L,GAAiB7L,EAEzCsB,EAAUC,eACd,MAAM5B,EAAWkC,cAOX1E,EAAmB2E,aAAYjG,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfK,EAA+BsE,aAAYjG,GAASA,EAAM2B,gCAC1D,UAAEC,GAAcD,EAWtB,OATAuE,qBAAU,KACD3E,EAGDuC,EAAS2K,MAFThJ,EAAQ0D,KAAK,YAIlB,CAACrF,EAAU2B,EAASlE,IAInB+C,eAAA,OAAAD,SACKzC,EAAYA,EAAU8F,KAAI,CAAChG,EAASiG,IACjCrD,eAAA,OAAAD,SACIM,gBAACF,KAAI,CACDC,UAAU,WACVyB,MAAO,CAAEE,OAAQ,YAAa2D,YAAa,WAAY3F,SAAA,CAIvDC,eAAA,SACIhE,KAAK,QACL+E,KAAK,YACLiI,MAAO,EACP5D,QAASA,KAAMuG,OAnCRrM,EAmC8BlC,EAAQkC,QAlCjEoM,EAAgBpM,GADWA,SAqCXe,gBAAA,QAAAN,SAAA,CAAMC,eAAA,KAAAD,SAAG,WAAW3C,EAAQ2D,QAC5BV,gBAAA,QAAAN,SAAA,CAAMC,eAAA,KAAAD,SAAG,cACR3C,EAAQ2N,SAAS,KAAG3N,EAAQ4N,SAAS,KAAG5N,EAAQ6N,KAAK,IACrD7N,EAAQ1B,MAAM,KAAG0B,EAAQ8N,cAZrB9N,EAAQkC,KAJX+D,KAqBV,WCuFDuI,OAlIM/L,IAAgB,IAAf,MAAE+D,GAAO/D,EAEvBsB,EAAUC,eAEd,MAAM5B,EAAWkC,eACVqF,EAAiB8E,GAAsB9H,oBAAS,IAChDwG,EAAmBuB,GAAwB/H,mBAAS,GAWrDlG,EAA8B8D,aAAYjG,GAASA,EAAMmC,+BACvD1C,MAAO4Q,GAAelO,EAGxB3B,EAAwByF,aAAYjG,GAASA,EAAMQ,yBACnD,QAAEhB,EAAO,MAAEC,EAAK,QAAEgB,GAAYD,EAG9BK,EAAoBoF,aAAYjG,GAASA,EAAMa,qBAC7CpB,MAAO6Q,EAAiB,QAAE5Q,EAASF,QAAS+Q,GAAwB1P,EAGtES,EAAmB2E,aAAYjG,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfN,EAAwBiF,aAAYjG,GAASA,EAAMgB,yBACnD,YAAEC,GAAgBD,EAsBxB,OApBAkF,qBAAU,KACD3E,GAGDuC,EAASwK,MACTxK,EAASH,GAAkBuE,EAAMM,OAAO5E,KACxCE,EAAS4G,MACT5G,EAAS,CACLxD,KAAMvF,KANV0K,EAAQ0D,KAAK,YASlB,CAACrF,EAAUoE,EAAOzC,EAAS/F,EAAS6B,IAEnCA,GAA2B,wCAAf8O,IACZnH,MAAM,wCACNpF,EAASsK,MACT3I,EAAQ0D,KAAK,UACbuD,OAAO9G,SAAS+G,UAIhBhI,gBAAA,OAAAN,SAAA,CACKiM,EAAoBhM,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAEiM,IAA+B,GAC9E9Q,GAEGmF,gBAAA,QAAMwB,MAAO,CAAEgB,QAAS,QAAS9C,SAAA,CAC7BC,eAAA,MAAAD,SAAI,0BACJC,eAAA,QAAMI,UAAU,OAAML,SAClBC,eAAC8C,KAAO,CAACC,UAAU,iBAG7B7H,GAAW+Q,EACT5L,gBAAA,QAAMwB,MAAO,CAAEgB,QAAS,QAAS9C,SAAA,CAC7BC,eAAA,MAAAD,SAAI,uBACJC,eAAA,QAAMI,UAAU,OAAML,SAClBC,eAAC8C,KAAO,CAACC,UAAU,gBAEjB,GACb5H,EAAQ6E,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAE5E,IAChC6E,eAACqF,KAAS,CAAAtF,SACNM,gBAAC2C,KAAG,CAAAjD,SAAA,CACAM,gBAACiD,KAAG,CAAC4I,GAAI,EAAEnM,SAAA,CACPC,eAAA,MAAAD,SAAI,qBACJC,eAACG,KAAI,CAACC,UAAU,OAAML,SAClBC,eAACG,KAAKG,KAAI,CAAAP,SACNC,eAACqF,KAAS,CAAAtF,SACNM,gBAAC2C,KAAG,CAAAjD,SAAA,CACAC,eAACsD,KAAG,CAAAvD,SACAC,eAACmM,KAAK,CAACzL,IAAKvE,EAAQwE,MAAOyL,IAAI,QAAQxL,OAAO,UAElDP,gBAACiD,KAAG,CAAAvD,SAAA,CACAC,eAAA,MAAII,UAAU,6BAA4BL,SACrC5D,EAAQ4E,OAEbV,gBAAA,QAAMD,UAAU,yBAAwBL,SAAA,CAAC,UAAG5D,EAAQ8E,qBAOxEZ,gBAAA,QAAMwB,MAAO,CAAEgB,QAAS,QAAS9C,SAAA,CAC7BC,eAAA,MAAAD,SAAI,oBACJC,eAACO,QAAI,CACDH,UAAU,YACVI,GAAG,kBAAiBT,SACvB,wBAILC,eAACyL,GAAoB,CAACC,gBAjGrBpM,IACjBA,GACAuM,GAAmB,GAEvBC,EAAqBxM,SA+FLe,gBAACiD,KAAG,CAAC4I,GAAI,EAAEnM,SAAA,CACPC,eAAA,MAAAD,SAAI,qBAGH3E,EACG4E,eAACsK,GAAmB,CAChBC,kBAAmBA,EACnBxD,gBAAiBA,EACjB5K,QAASA,IAGb6D,eAAC8G,GAAmB,CAChBC,gBAAiBA,EACjBpK,YAAaA,gB,uCC9FlC0P,OArCf,WAEI,IAAIlL,EAAUC,eACd,MAAOC,EAAYiL,GAAiBvI,mBAAS,IAS7C,OACI/D,eAAA,OAAAD,SACIC,eAAA,QAAMwI,SATI/F,IACdA,EAAEgG,iBACCpH,GACCF,EAAQ0D,KAAK,gBAAgBxD,MAMJtB,SACrBM,gBAAA,QACIwB,MAAO,CAAEgB,QAAS,QAClBzC,UAAU,GAAEL,SAAA,CAEZC,eAAA,SACIhE,KAAK,OACLgN,MAAO3H,EACP6H,YAAY,kBACZ9I,UAAU,eACV6I,SAAWxG,GAAM6J,EAAc7J,EAAEC,OAAOsG,SAE5ChJ,eAAA,UACIhE,KAAK,SACLoE,UAAU,wCAAuCL,SACpDC,eAAA,KAAGI,UAAU,4BCjCnB,OAA0B,kCCoH1BmM,OA3Gf,WAEI,IAAIpL,EAAUC,eACd,MAAM5B,EAAWkC,cAGX1E,EAAmB2E,aAAYjG,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EASrB,OACIgD,eAAA,UAAAD,SACIC,eAACwM,KAAM,CAACC,GAAG,OAAO3M,QAAQ,OAAO4M,OAAO,KAAKC,kBAAgB,EAAA5M,SACzDM,gBAACgF,KAAS,CAAAtF,SAAA,CACNC,eAAC4M,iBAAa,CAACpM,GAAG,IAAGT,SACjBM,gBAACmM,KAAOK,MAAK,CAAA9M,SAAA,CACTC,eAAA,OACIU,IAAKoM,GACLV,IAAI,OACJvK,MAAO,CAAE0D,MAAO,OAAQ3E,OAAQ,OAAQmM,YAAa,UACvD,YAIV/M,eAACwM,KAAOQ,OAAM,CAACC,gBAAc,qBAC7B5M,gBAACmM,KAAOU,SAAQ,CAAC5N,GAAG,mBAAkBS,SAAA,CAClCM,gBAAC8M,KAAG,CAAC/M,UAAU,UAASL,SAAA,CAGpBC,eAAC4M,iBAAa,CAACpM,GAAG,IAAGT,SACjBC,eAACmN,KAAI5M,KAAI,CAAAR,SAAE,mBAIfC,eAAC4M,iBAAa,CAACpM,GAAG,aAAYT,SAC9BC,eAACmN,KAAI5M,KAAI,CAAAR,SAAC,gBAEVC,eAAC4M,iBAAa,CAACpM,GAAG,QAAOT,SACzBC,eAACmN,KAAI5M,KAAI,CAAAR,SAAC,WAEVC,eAAC4M,iBAAa,CAACpM,GAAG,SAAQT,SAC1BC,eAACmN,KAAI5M,KAAI,CAAAR,SAAC,eAKT9C,GAAYA,EAASqI,MAClBtF,eAAC4M,iBAAa,CAACpM,GAAG,gBAAeT,SAC7BC,eAACmN,KAAI5M,KAAI,CAAAR,SAAE,kBAEb,GAIL9C,GAAYA,EAASmQ,SAClBpN,eAAC4M,iBAAa,CAACpM,GAAG,eAAcT,SAC5BC,eAACmN,KAAI5M,KAAI,CAAAR,SAAC,kBAIdC,eAAA,QAAMI,UAAU,GAAEL,SACdC,eAACqM,GAAoB,SAOhCpP,EACG+C,eAAA,OAAAD,SACIM,gBAACgN,KAAW,CAACjN,UAAU,6BAA6ByJ,MAAO5M,EAASqQ,SAAUhO,GAAG,WAAUS,SAAA,CACvFC,eAAC4M,iBAAa,CAACpM,GAAG,WAAUT,SACxBC,eAACqN,KAAYE,KAAI,CAAAxN,SAAC,uBAEtBC,eAAC4M,iBAAa,CAACpM,GAAG,kBAAiBT,SAC/BC,eAACqN,KAAYE,KAAI,CAAAxN,SAAC,uBAEtBC,eAAC4M,iBAAa,CAACpM,GAAG,wBAAuBT,SACrCC,eAACqN,KAAYE,KAAI,CAAAxN,SAAC,oBAEtBC,eAAC4M,iBAAa,CAACpM,GAAG,eAAcT,SAC5BC,eAACqN,KAAYE,KAAI,CAAAxN,SAAC,iBAEtBC,eAACqN,KAAYE,KAAI,CAACnI,QA/E5BoI,KAClBhO,EAASsK,MACT3I,EAAQ0D,KAAK,UACbuD,OAAO9G,SAAS+G,UA4EqDtI,SAAC,gBAOlDC,eAAC4M,iBAAa,CAACpM,GAAG,SAAQT,SACtBM,gBAAC8M,KAAI5M,KAAI,CAAAR,SAAA,CAACC,eAAA,KAAGI,UAAU,gBAAkB,yBCtE1DqN,OA9BOA,KAClB,MAAMnM,EAAWoM,eA0BjB,MAxBmBC,MAEf,IACI,MAAMC,EAAatM,EAAS5F,MAAMiJ,OAElC,OACItE,gBAAA,OAAAN,SAAA,CACIC,eAAA,MAAII,UAAU,eAAcL,SAAC,4BAC7BM,gBAACF,KAAI,CAACC,UAAU,MAAKL,SAAA,CAAC,sBAElBC,eAAA,SACAK,gBAAA,QAAMD,UAAU,OAAOyB,MAAO,CAAEgB,QAAS,QAAS9C,SAAA,CAC7C6N,EAAW7M,KAAK,WACf6M,EAAW3M,MAAM,IAACjB,eAAA,KAAGI,UAAU,kDAErCJ,eAACO,QAAI,CAACC,GAAG,eAAcT,SAAC,4BAItC,MAAO5E,GACL,OAAO6E,eAACJ,GAAO,CAACE,QAAQ,OAAMC,SAAC,oCAIhC4N,IC+CIE,OAxEf,SAAkBhO,GAAe,IAAd,QAAEsB,GAAStB,EAC1B,MAAOyN,EAAUQ,GAAe/J,mBAAS,KAClCgK,EAAUC,GAAejK,mBAAS,IAEnCvE,EAAWkC,cAGX1E,EAAmB2E,aAAYjG,GAASA,EAAMsB,oBAC9C,MAAE7B,EAAK,SAAE8B,GAAaD,EAa5B,OAXA4E,qBAAU,KACF3E,GACAkE,EAAQ0D,KAAK,OAElB,CAAC1D,EAASlE,IAQT+C,eAAA,OAAAD,SACIC,eAACgD,KAAG,CAAC5C,UAAU,4BAA2BL,SACtCM,gBAACiD,KAAG,CAAC4I,GAAI,GAAI1I,GAAI,EAAEzD,SAAA,CACfC,eAAA,MAAAD,SAAI,YACH5E,GAAS6E,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAE5E,IACrCkF,gBAACkI,KAAI,CAACC,SAXC/F,IACnBA,EAAEgG,iBACFjJ,ER+BayO,EAACX,EAAUS,IAAaxO,UACzC,IACIC,EAAS,CACLxD,KAAM5E,IAGV,MAAMiN,EAAS,CACXC,QAAS,CACL,eAAgB,sBAIlB,KAAEvH,SAAe0C,KAAMqG,KACzB,kBACA,CAAE,SAAYwH,EAAU,SAAYS,GACpC1J,GAGJ7E,EAAS,CACLxD,KAAM3E,EACN4E,QAASc,IAGb8B,aAAaqP,QAAQ,WAAYnP,KAAKoP,UAAUpR,IAGlD,MAAO5B,GACLqE,EAAS,CACLxD,KAAM1E,EACN2E,QAASd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMwE,YQ5DtFsO,CAAMX,EAAUS,KASiBhO,SAAA,CAC1BM,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,WAAUrO,SAAA,CAC5BC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,aAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACLkN,YAAY,iBACZF,MAAOsE,EACPrE,SAAWxG,GAAMqL,EAAYrL,EAAEC,OAAOsG,YAK9C3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,WAAUrO,SAAA,CAC5BC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,aAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,WACLkN,YAAY,sBACZF,MAAO+E,EACP9E,SAAWxG,GAAMuL,EAAYvL,EAAEC,OAAOsG,YAK9ChJ,eAACmF,KAAM,CAACnJ,KAAK,SAAS8D,QAAQ,UAASC,SAAC,eAG5CC,eAACgD,KAAG,CAAC5C,UAAU,OAAML,SACjBM,gBAACiD,KAAG,CAAAvD,SAAA,CAAC,0BAETC,eAACO,QAAI,CACOC,GAAI,YAAYT,SACnB,2BCgDdsO,OA/Gf,SAAqBxO,GAAwB,IAAvB,QAAEsB,EAAO,QAAErB,GAASD,EACtC,MAAOyN,EAAUQ,GAAe/J,mBAAS,KAClCgC,EAAO0B,GAAY1D,mBAAS,KAC5BgK,EAAUC,GAAejK,mBAAS,KAClCuK,EAAiBC,GAAsBxK,mBAAS,KAChDpE,EAAS6O,GAAczK,mBAAS,IAEjCvE,EAAWkC,cAGXxE,EAAsByE,aAAYjG,GAASA,EAAMwB,uBACjD,MAAE/B,EAAK,SAAE8B,GAAaC,EAiB5B,OAfA0E,qBAAU,KACF3E,GACAkE,EAAQ0D,KAAK,OAElB,CAAC1D,EAASlE,IAYT+C,eAAA,OAAAD,SACIC,eAACgD,KAAG,CAAC5C,UAAU,4BAA2BL,SACtCM,gBAACiD,KAAG,CAAC4I,GAAI,GAAI1I,GAAI,EAAEzD,SAAA,CACfC,eAAA,MAAAD,SAAI,YACHJ,GAAWK,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAEJ,IACtCxE,GAAS6E,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAE5E,IACrCkF,gBAACkI,KAAI,CAACC,SAhBC/F,IACnBA,EAAEgG,iBACEsF,IAAaO,EACbE,EAAW,2BAEXhP,ETwEYiP,EAACnB,EAAUvH,EAAOgI,IAAaxO,UACnD,IACIC,EAAS,CAAExD,KAAMxE,KAEjB,MAAM6M,EAAS,CACXC,QAAS,CACL,eAAgB,sBAIlB,KAAEvH,SAAe0C,KAAMqG,KAAK,qBAC9B,CAAE,SAAYwH,EAAU,MAASvH,EAAO,SAAYgI,GACpD1J,GAGJ7E,EAAS,CACLxD,KAAMvE,GACNwE,QAASc,IAGbyC,EAAS,CACLxD,KAAM3E,EACN4E,QAASc,IAGb8B,aAAaqP,QAAQ,WAAYnP,KAAKoP,UAAUpR,IAEpD,MAAO5B,GACHqE,EAAS,CACLxD,KAAMtE,GACNuE,QAASd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMwE,YStGlF8O,CAASnB,EAAUvH,EAAOgI,KAWGhO,SAAA,CAE1BM,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,OAAMrO,SAAA,CACxBC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,aAGZC,eAACuI,KAAKM,QAAO,CACTO,UAAQ,EACRpN,KAAK,OACLkN,YAAY,sBACZF,MAAOsE,EACPrE,SAAWxG,GAAMqL,EAAYrL,EAAEC,OAAOsG,YAK9C3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,QAAOrO,SAAA,CACzBC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,kBAGZC,eAACuI,KAAKM,QAAO,CACTO,UAAQ,EACRpN,KAAK,QACLkN,YAAY,mBACZF,MAAOjD,EACPkD,SAAWxG,GAAMgF,EAAShF,EAAEC,OAAOsG,YAK3C3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,WAAUrO,SAAA,CAC5BC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,aAGZC,eAACuI,KAAKM,QAAO,CACTO,UAAQ,EACRpN,KAAK,WACLkN,YAAY,sBACZF,MAAO+E,EACP9E,SAAWxG,GAAMuL,EAAYvL,EAAEC,OAAOsG,YAK9C3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,kBAAiBrO,SAAA,CACnCC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,qBAGZC,eAACuI,KAAKM,QAAO,CACTO,UAAQ,EACRpN,KAAK,WACLkN,YAAY,wBACZF,MAAOsF,EACPrF,SAAWxG,GAAM8L,EAAmB9L,EAAEC,OAAOsG,YAKrDhJ,eAACmF,KAAM,CAACnJ,KAAK,SAAS8D,QAAQ,UAASC,SAAC,eAG5CC,eAACgD,KAAG,CAAC5C,UAAU,OAAML,SACjBM,gBAACiD,KAAG,CAAAvD,SAAA,CAAC,2BAETC,eAACO,QAAI,CACOC,GAAI,SAAST,SAChB,wBCiId2O,OAnOQA,KAEnB,IAAIvN,EAAUC,eAGd,MAAMvD,EAA8B8D,aAAYjG,GAASA,EAAMmC,+BACvD1C,MAAO4Q,GAAelO,EAGxB2B,EAAWkC,eACVmE,EAAY6B,GAAiB3D,mBAAS,KACtChD,EAAM4N,GAAW5K,mBAAS,KAC1BiC,EAAU2B,GAAe5D,mBAAS,KAClCkC,EAAS2B,GAAc7D,mBAAS,KAChC6K,EAAaC,GAAkB9K,mBAAS,KACxC+K,EAAgBC,GAAqBhL,mBAAS,KAC9CiL,EAAcC,GAAmBlL,mBAAS,KAC1CmL,EAAYC,GAAiBpL,mBAAS,KACtCqL,EAAYC,GAAiBtL,mBAAS,KACtCuL,EAAQC,GAAaxL,mBAAS,IAI/B/G,EAAmB2E,aAAYjG,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfN,EAAwBiF,aAAYjG,GAASA,EAAMgB,yBACnD,YAAEC,EAAW,QAAEzB,GAAYwB,EAG3BE,EAA2B+E,aAAYjG,GAASA,EAAMkB,4BACtD,QAAExB,GAAYwB,EAEpBgF,qBAAU,KACD3E,GAGDuC,EAASwK,MACTxK,EAAS4G,OAHTjF,EAAQ0D,KAAK,YAKlB,CAACrF,EAAU2B,EAASlE,EAAU7B,IAE7B6B,GAA2B,wCAAf8O,IACZnH,MAAM,wCACNpF,EAASsK,MACT3I,EAAQ0D,KAAK,UACbuD,OAAO9G,SAAS+G,UAIpB,MAAMG,EAAY/F,IAEd,GADAA,EAAEgG,iBACE2G,GAAcE,EAAQ,CActB9P,Gb2EqBhD,EaxFC,CAClBmK,YAAad,EACb2J,YAAaJ,EACbK,QAASH,EACTpH,UAAWlC,EACXmC,SAAUlC,EACVyJ,aAAc3O,EACd4O,aAAcf,EACdgB,gBAAiBd,EACjBe,cAAeb,EACfc,YAAaZ,Gb8EiB3P,MAAOC,EAAU4E,KAE3D,IAEI5E,EAAS,CACLxD,KAAMhF,IAGV,MACIgG,kBAAkB,SAAEC,IACpBmH,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUtH,EAASuH,WAKpC,KAAEzH,SAAe0C,KAAMqG,KACzB,yBACAtJ,EACA6H,GAGJ7E,EAAS,CACLxD,KAAM/E,EACNgF,QAASc,IAGf,MAAO5B,GACLqE,EAAS,CACLxD,KAAM9E,EACN+E,QAASd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMwE,cAlCtEnD,OazD7B,OARIpB,IACAwJ,MAAM,6BACNzD,EAAQ0D,KAAK,wBACbrF,EAAS,CACLxD,KAAM7E,KAKV6I,eAAA,OAAAD,SACIC,eAACgD,KAAG,CAAC5C,UAAU,4BAA2BL,SACtCM,gBAACiD,KAAG,CAAC4I,GAAI,GAAI1I,GAAI,EAAEzD,SAAA,CACfC,eAAA,QACII,UAAU,gCACVyB,MAAO,CAAEgB,QAAS,OAAQV,aAAc,OAAQF,MAAO,WAAYlC,SACnEC,eAAA,MAAAD,SAAI,0BAEP7E,GAAW8E,eAAC8C,KAAO,CAACC,UAAU,WAC9BpG,EAAYyG,KAAI,CAAC2M,EAAM1M,IACpBrD,eAAA,OAAAD,SACIC,eAACG,KAAI,CACDC,UAAU,WACVyB,MAAO,CAAEE,OAAQ,YAAa2D,YAAa,WAAY3F,SAEvDM,gBAACkI,KAAI,CAACC,SAAUA,EAASzI,SAAA,CAErBM,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,OAAMrO,SAAA,CACxBC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,iBAGZC,eAACuI,KAAKM,QAAO,CACTC,WAAW,EACX9M,KAAK,OACLqN,aAAc0G,EAAKL,aACnBxG,YAAY,YACZD,SAAWxG,GAAMkM,EAAQlM,EAAEC,OAAOsG,YAK1C3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,QAAOrO,SAAA,CACzBC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,cAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACL+M,QAAQ,SACRI,UAAU,IACVE,aAAc0G,EAAK7H,UACnBgB,YAAY,YACZD,SAAWxG,GAAMkF,EAAYlF,EAAEC,OAAOsG,YAK9C3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,OAAMrO,SAAA,CACxBC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,aAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACL+M,QAAQ,SACRM,aAAc0G,EAAK5H,SACnBe,YAAY,WACZC,UAAU,IACVF,SAAWxG,GAAMmF,EAAWnF,EAAEC,OAAOsG,YAK7C3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,OAAMrO,SAAA,CACxBC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,iBAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACLqN,aAAc0G,EAAKJ,aACnBzG,YAAY,eACZD,SAAWxG,GAAMoM,EAAepM,EAAEC,OAAOsG,YAKjD3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,UAASrO,SAAA,CAC3BC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,oBAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACLqN,aAAc0G,EAAKH,gBACnB1G,YAAY,kBACZD,SAAWxG,GAAMsM,EAAkBtM,EAAEC,OAAOsG,YAKpD3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,QAAOrO,SAAA,CACzBC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,kBAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACLqN,aAAc0G,EAAKF,cACnB3G,YAAY,gBACZD,SAAWxG,GAAMwM,EAAgBxM,EAAEC,OAAOsG,YAKlD3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,MAAKrO,SAAA,CACvBC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,gBAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACLqN,aAAc0G,EAAKD,YACnB5G,YAAY,cACZH,QAAQ,SACRI,UAAU,IACVF,SAAWxG,GAAM0M,EAAc1M,EAAEC,OAAOsG,YAKhDhJ,eAACmF,KAAM,CACHnJ,KAAK,SACL8D,QAAQ,UACRsF,QAASA,KAAM4K,OArIpBC,EAqI0CF,EAAKP,YArIvCU,EAqIoDH,EAAKN,QArIhDU,EAqIyDJ,EAAKpJ,YApI1G0I,EAAcY,GACdV,EAAUW,QACVxI,EAAcyI,GAHYH,IAACC,EAAQC,EAASC,GAsIZtO,MAAO,CAAE0D,MAAO,QAChBnF,UAAU,0BAAyBL,SAAC,iBAGxCC,eAACmF,KAAM,CACHnJ,KAAK,SACL8D,QAAQ,UACRsF,QAASA,IAAMjE,EAAQ0D,KAAK,yBAC5BhD,MAAO,CAAE0D,MAAO,QAChBnF,UAAU,+BAA8BL,SAAC,iBAtH/CsD,aC0CnB+M,OAxISA,KAEpB,IAAIjP,EAAUC,eAEd,MAAM5B,EAAWkC,eACV4E,EAAQ+J,GAAatM,mBAAS,IAC9ByC,EAAsBQ,GAA2BjD,oBAAS,IAC1DwC,EAAkB+J,GAAuBvM,mBAAS,IAGnD/G,EAAmB2E,aAAYjG,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfa,EAA8B8D,aAAYjG,GAASA,EAAMmC,+BACvD1C,MAAO4Q,GAAelO,EAGxBnB,EAAwBiF,aAAYjG,GAASA,EAAMgB,yBACnD,YAAEC,EAAW,QAAEzB,GAAYwB,EAG3BI,EAAyB6E,aAAYjG,GAASA,EAAMoB,0BACpD,QAAE1B,GAAY0B,EA+BpB,OAvBA8E,qBAAU,KACD3E,GAGDuC,EAASwK,MACTxK,EAAS4G,OAHTjF,EAAQ0D,KAAK,YAKlB,CAACrF,EAAU2B,EAASlE,IAEnBA,GAA2B,wCAAf8O,IACZnH,MAAM,wCACNpF,EAASsK,MACT3I,EAAQ0D,KAAK,UACbuD,OAAO9G,SAAS+G,UAIhBjN,IACAwJ,MAAM,8BACNwD,OAAO9G,SAAS+G,UAKhBhI,gBAAA,OAAAN,SAAA,CACK7E,GAAWmF,gBAAA,QAAMwB,MAAO,CAAEgB,QAAS,QAAS9C,SAAA,CACzCC,eAAA,MAAAD,SAAI,6BACJC,eAAA,QAAMI,UAAU,OAAML,SAClBC,eAAC8C,KAAO,CAACC,UAAU,gBAK3B/C,eAAA,OAAAD,SACIC,eAAAsI,YAAA,CAAAvI,SACIC,eAACqG,GAAmB,CAChBC,OAAQA,EACRC,iBAAkBA,EAClBC,qBAAsBA,EACtBC,2BA3CeA,KAC/BO,GAAyBR,UA+CpB7J,EAAYf,OAAS,EAAIe,EAAYyG,KAAI,CAAC2M,EAAM1M,IAC7ChD,gBAAA,OAAAN,SAAA,CACIM,gBAACgF,KAAS,CAAAtF,SAAA,CACNM,gBAAC2C,KAAG,CAAC5C,UAAU,+BAA8BL,SAAA,CACzCC,eAACsD,KAAG,CAAC4I,GAAI,EAAG9L,UAAU,yBAAwBL,SAAC,kBAC/CC,eAACsD,KAAG,CAAClD,UAAU,MAAKL,SACfgQ,EAAKL,aAAe1P,eAAA,QAAAD,SAChBgQ,EAAKL,eAEJ,eAIdrP,gBAAC2C,KAAG,CAAC5C,UAAU,0BAAyBL,SAAA,CACpCC,eAACsD,KAAG,CAAC4I,GAAI,EAAG9L,UAAU,yBAAwBL,SAAC,eAC/CC,eAACsD,KAAG,CAAClD,UAAU,MAAKL,SAAEgQ,EAAK7H,UAAY6H,EAAK7H,UAAY,eAE5D7H,gBAAC2C,KAAG,CAAC5C,UAAU,0BAAyBL,SAAA,CACpCC,eAACsD,KAAG,CAAC4I,GAAI,EAAG9L,UAAU,yBAAwBL,SAAC,cAC/CC,eAACsD,KAAG,CAAClD,UAAU,MAAKL,SAAEgQ,EAAK5H,SAAW4H,EAAK5H,SAAW,eAE1D9H,gBAAC2C,KAAG,CAAC5C,UAAU,+BAA8BL,SAAA,CACzCC,eAACsD,KAAG,CAAC4I,GAAI,EAAG9L,UAAU,yBAAwBL,SAAC,kBAC/CC,eAACsD,KAAG,CAAClD,UAAU,MAAKL,SAAEgQ,EAAKJ,aAAeI,EAAKJ,aAAe,eAElEtP,gBAAC2C,KAAG,CAAC5C,UAAU,0BAAyBL,SAAA,CACpCC,eAACsD,KAAG,CAAC4I,GAAI,EAAG9L,UAAU,yBAAwBL,SAAC,qBAC/CC,eAACsD,KAAG,CAAClD,UAAU,MAAKL,SAAEgQ,EAAKH,gBAAkBG,EAAKH,gBAAkB,eAExEvP,gBAAC2C,KAAG,CAAC5C,UAAU,0BAAyBL,SAAA,CACpCC,eAACsD,KAAG,CAAC4I,GAAI,EAAG9L,UAAU,yBAAwBL,SAAC,mBAC/CC,eAACsD,KAAG,CAAClD,UAAU,MAAKL,SAAEgQ,EAAKF,cAAgBE,EAAKF,cAAgB,eAEpExP,gBAAC2C,KAAG,CAAC5C,UAAU,0BAAyBL,SAAA,CACpCC,eAACsD,KAAG,CAAC4I,GAAI,EAAG9L,UAAU,yBAAwBL,SAAC,iBAC/CC,eAACsD,KAAG,CAAClD,UAAU,MAAKL,SAAEgQ,EAAKD,YAAcC,EAAKD,YAAc,kBAGpEzP,gBAAA,QAAMwB,MAAO,CAAEgB,QAAS,OAAQ4C,eAAgB,SAAU8K,WAAY,UAAWxQ,SAAA,CAC7EC,eAACO,QAAI,CAACC,GAAG,uBAAsBT,SAAC,wBAChCC,eAAA,QAAMI,UAAU,oBAAmBL,SAAC,OACpCC,eAAA,QAAMI,UAAU,SAEhBJ,eAACO,QAAI,CAACC,GAAG,IACL4E,QAASA,KACLkL,EAAoBP,EAAKpJ,aACzB0J,EAAUN,EAAK/R,MACfgJ,GAAyBR,IAC3BzG,SACL,qBAhDCsD,KAoDVrD,eAAA,OAAAD,SACIC,eAACJ,GAAO,CAACE,QAAQ,OAAMC,SAAC,sCC9C7ByQ,OApFf,WAGI,IAAIrP,EAAUC,eACd,MAAM5B,EAAWkC,cAGX7D,EAA8B8D,aAAYjG,GAASA,EAAMmC,+BACvD1C,MAAO4Q,GAAelO,EAGxBb,EAAmB2E,aAAYjG,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfe,EAAqB4D,aAAYjG,GAASA,EAAMqC,sBAC9CC,KAAMyS,EAAc,QAAEvV,GAAY6C,EAE1C6D,qBAAU,KACN,GAAK3E,EAGD,IACIuC,EAASwK,MACTxK,EAAS0K,GAAYjN,EAASqC,KAChC,MAAOnE,GACLgG,EAAQ0D,KAAK,UANjB1D,EAAQ0D,KAAK,YASlB,CAAC1D,EAASlE,EAAUuC,IAGvB,MAAMgO,EAAgBA,KAClBhO,EAASsK,OA+Cb,OA5CI7M,GAA2B,wCAAf8O,IACZnH,MAAM,wCACNpF,EAASsK,MACT3I,EAAQ0D,KAAK,UACbuD,OAAO9G,SAAS+G,UAGDsF,MACf,IAEI,OACItN,gBAAA,OAAAN,SAAA,CACK7E,GAAWmF,gBAAA,QAAMwB,MAAS,CAAEgB,QAAS,QAAS9C,SAAA,CAACC,eAAA,MAAAD,SAAI,6BAA6BC,eAAA,QAAMI,UAAY,OAAML,SAACC,eAAC8C,KAAO,CAACC,UAAU,gBAC7H1C,gBAACgF,KAAS,CAAAtF,SAAA,CACNM,gBAAC2C,KAAG,CAAC5C,UAAU,+BAA8BL,SAAA,CACzCC,eAACsD,KAAG,CAAC4I,GAAI,EAAG9L,UAAU,yBAAwBL,SAAC,UAC/CC,eAACsD,KAAG,CAAClD,UAAU,MAAKL,SAAE0Q,EAAenD,cAEzCjN,gBAAC2C,KAAG,CAAC5C,UAAU,0BAAyBL,SAAA,CACpCC,eAACsD,KAAG,CAAC4I,GAAI,EAAG9L,UAAU,yBAAwBL,SAAC,WAC/CC,eAACsD,KAAG,CAAClD,UAAU,MAAKL,SAAE0Q,EAAe1K,WAEzC1F,gBAAC2C,KAAG,CAAC5C,UAAU,0BAAyBL,SAAA,CACpCC,eAACsD,KAAG,CAAC4I,GAAI,EAAG9L,UAAU,yBAAwBL,SAAC,sBAC/CC,eAACsD,KAAG,CAAClD,UAAU,MAAKL,SAAE0Q,EAAenL,MAAQ,MAAQ,aAG7DjF,gBAAA,QAAMwB,MAAO,CAAEgB,QAAS,OAAQ4C,eAAgB,SAAU8K,WAAY,UAAWxQ,SAAA,CAC7EC,eAACO,QAAI,CAACC,GAAI,kBAAkBT,SAAC,2BAC7BC,eAAA,QAAMI,UAAU,oBAAmBL,SAAC,OACpCC,eAAA,QAAMI,UAAU,SAEhBJ,eAACO,QAAI,CAACC,GAAI,mBAAmBT,SAAC,yBAI5C,MAAO5E,GACL,OAAOkF,gBAACT,GAAO,CAACE,QAAQ,SAAQC,SAAA,CAAC,oCAAiCC,eAACO,QAAI,CACnE6E,QAASoI,EAAehN,GAAI,SAAST,SACxC,WAAa,cAKf4N,ICgFI+C,OAhKf,WAEI,IAAIvP,EAAUC,eACd,MAAM5B,EAAWkC,cAIX7D,EAA8B8D,aAAYjG,GAASA,EAAMmC,+BACvD1C,MAAO4Q,GAAelO,GAEvByP,EAAUQ,GAAe/J,mBAAS,KAClCgC,EAAO0B,GAAY1D,mBAAS,KAC5BgK,EAAUC,GAAejK,mBAAS,KAClCuK,EAAiBC,GAAsBxK,mBAAS,IAGjD/G,EAAmB2E,aAAYjG,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfe,EAAqB4D,aAAYjG,GAASA,EAAMqC,sBAC9CC,KAAMyS,EAAc,QAAEvV,GAAY6C,EAGpCE,EAA2B0D,aAAYjG,GAASA,EAAMuC,4BACtD,QAAE7C,GAAY6C,EAEpB2D,qBAAU,KACD3E,GACDkE,EAAQ0D,KAAK,UAEjBrF,EAASwK,MACTxK,EAAS0K,GAAYjN,EAASqC,OAC/B,CAACE,EAAU2B,EAASlE,IAEnBA,GAA2B,wCAAf8O,IACZnH,MAAM,wCACNpF,EAASsK,MACT3I,EAAQ0D,KAAK,UACbuD,OAAO9G,SAAS+G,UAGpB,MAAMG,EAAY/F,IACdA,EAAEgG,iBACF,MAAMkI,EAA+B,KAAbrD,EAAkBmD,EAAenD,SAAWA,EAC9DsD,EAAyB,KAAV7K,EAAe0K,EAAe1K,MAAQA,EAE3D,GAAIgI,IAAaO,EACb1J,MAAM,8BACH,CAMHpF,EbkJsBqR,IAAatR,MAAOC,EAAU4E,KAE5D,IAEI5E,EAAS,CACLxD,KAAMlE,KAGV,MACIkF,kBAAkB,SAAEC,IACpBmH,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUtH,EAASuH,WAKpC,KAAEzH,SAAe0C,KAAMqR,IACzB,wBAAwB7T,EAASqC,MACjC,CACI,SAAYuR,EAASvD,SACrB,MAASuD,EAAS9K,MAClB,SAAY8K,EAAS9C,UAEzB1J,GAGJ7E,EAAS,CACLxD,KAAMjE,GACNkE,QAASc,IAGf,MAAO5B,GACLqE,EAAS,CACLxD,KAAMhE,GACNiE,QAASd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAKkN,QAAU9O,EAAMuJ,SAAS3H,KAAKkN,QAAU9O,EAAMwE,YaxLpFoR,CALQ,CACb,SAAYJ,EACZ,MAASC,EACT,SAAY7C,OAOlBP,EAAgBA,KAClBrM,EAAQ0D,KAAK,UACbrF,EAASsK,OA+Fb,OA5FG1O,IACCwJ,MAAM,iCACNpF,EAAS,CACLxD,KAAM/D,KAEVkJ,EAAQ0D,KAAK,aACbrF,EAAS0K,GAAYjN,EAASqC,MAGfqO,MACf,IACI,OACI3N,eAAA,OAAAD,SACIC,eAACgD,KAAG,CAAC5C,UAAU,4BAA2BL,SACtCM,gBAACiD,KAAG,CAAC4I,GAAI,GAAI1I,GAAI,EAAEzD,SAAA,CACfC,eAAA,QACII,UAAU,gCACVyB,MAAO,CAAEgB,QAAS,OAAQV,aAAc,OAAQF,MAAO,WAAYlC,SACnEC,eAAA,MAAAD,SAAI,0BAEP7E,GAAW8E,eAAC8C,KAAO,CAACC,UAAU,WAC/B1C,gBAACkI,KAAI,CAACC,SAAUA,EAASzI,SAAA,CAErBM,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,WAAUrO,SAAA,CAC5BC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,aAGZC,eAACuI,KAAKM,QAAO,CACTC,WAAW,EACX9M,KAAK,OACLqN,aAAcoH,EAAenD,SAC7BpE,YAAY,WACZD,SAAWxG,GAAMqL,EAAYrL,EAAEC,OAAOsG,YAK9C3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,QAAOrO,SAAA,CACzBC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,kBAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,QACLkN,YAAY,cACZG,aAAcoH,EAAe1K,MAC7BkD,SAAWxG,GAAMgF,EAAShF,EAAEC,OAAOsG,YAK3C3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,WAAUrO,SAAA,CAC5BC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,mBAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,WACLkN,YAAY,qBACZD,SAAWxG,GAAMuL,EAAYvL,EAAEC,OAAOsG,YAK9C3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,kBAAiBrO,SAAA,CACnCC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,qBAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,WACLkN,YAAY,uBACZD,SAAWxG,GAAM8L,EAAmB9L,EAAEC,OAAOsG,YAKrDhJ,eAACmF,KAAM,CAACnJ,KAAK,SAAS8D,QAAQ,UAAUM,UAAU,SAAQL,SAAC,iBAC3DC,eAACO,QAAI,CAACC,GAAI,WAAWT,SACjBC,eAAA,UAAQI,UAAU,8BAA8BpE,KAAK,SAAQ+D,SAAC,uBASxF,MAAO5E,GACL,OAAOkF,gBAACT,GAAO,CAACE,QAAQ,SAAQC,SAAA,CAAC,oCAAiCC,eAACO,QAAI,CACnE6E,QAASoI,EAAehN,GAAI,SAAST,SACxC,WAAa,cAIf4N,IC3FIqD,OAnEf,WAEI,IAAI7P,EAAUC,eACd,MAAM5B,EAAWkC,eACVuP,EAAYC,GAAiBnN,mBAAS,IAIvC/G,EAAmB2E,aAAYjG,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfkB,EAA2ByD,aAAYjG,GAASA,EAAMwC,4BACtD,QAAE9C,EAAO,QAAEF,EAAO,MAAEC,GAAU+C,EAsBpC,OAVG9C,IACCwJ,MAAM,iCACNpF,EAAS,CACLxD,KAAM3D,KAEVmH,EAASsK,MACT3I,EAAQ0D,KAAK,UACbuD,OAAO9G,SAAS+G,UAIhBrI,eAAA,OAAAD,SACIC,eAACgD,KAAG,CAAC5C,UAAU,4BAA2BL,SACtCM,gBAACiD,KAAG,CAAC4I,GAAI,GAAI1I,GAAI,EAAEzD,SAAA,CACfC,eAAA,MAAAD,SAAI,kDACH7E,GAAWmF,gBAAA,QAAMwB,MAAS,CAAEgB,QAAS,QAAS9C,SAAA,CAACC,eAAA,MAAAD,SAAI,gBAAgBC,eAAA,QAAMI,UAAY,OAAML,SAACC,eAAC8C,KAAO,CAACC,UAAU,gBAC/G5H,GAAS6E,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAC,wBACpCC,eAAA,OAAKI,UAAU,OAAML,SACjBM,gBAACkI,KAAI,CAACC,SA5BR/F,IACdA,EAAEgG,iBACF,MAAMoI,EAAW,CACb,GAAM5T,EAASqC,GACf,SAAY2R,GAEhBzR,EAASwK,MACTxK,EdiO0BqR,IAAatR,MAAOC,EAAU4E,KAE5D,IAEI5E,EAAS,CACLxD,KAAM9D,KAGV,MACI8E,kBAAkB,SAAEC,IACpBmH,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUtH,EAASuH,WAKpC,KAAEzH,SAAe0C,KAAMqG,KACzB,wBAAwB+K,EAASvR,MACjC,CACI,SAAYuR,EAAS9C,UAEzB1J,GAGJ7E,EAAS,CACLxD,KAAM7D,GACN8D,QAASc,IAGf,MAAO5B,GACLqE,EAAS,CACLxD,KAAM5D,GACN6D,QAASd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAKkN,QAAU9O,EAAMuJ,SAAS3H,KAAKkN,QAAU9O,EAAMwE,YcrQxFwR,CAAkBN,KAqBc9Q,SAAA,CACrBM,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,WAAUrO,SAAA,CAC5BC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,aAGZC,eAACuI,KAAKM,QAAO,CACTO,UAAQ,EACRpN,KAAK,WACLkN,YAAY,sBACZF,MAAOiI,EACPhI,SAAWxG,GAAMyO,EAAczO,EAAEC,OAAOsG,YAKhDhJ,eAACmF,KAAM,CAACnJ,KAAK,SAAS8D,QAAQ,SAAQC,SAAC,gC,UCqHpDqR,OAjLgBvR,IAA8B,IAA7B,oBAAEwR,GAAqBxR,EAEnD,MAAML,EAAWkC,eAEVX,EAAM4N,GAAW5K,mBAAS,KAC1BuN,EAAaC,GAAkBxN,mBAAS,KACxCyN,EAASC,GAAc1N,mBAAS,KAChC2N,EAAaC,GAAkB5N,mBAAS,KACxCiH,EAAU4G,GAAe7N,mBAAS,KAClCkH,EAAM4G,GAAW9N,mBAAS,KAC1BrI,EAAOoW,GAAY/N,mBAAS,IAG7BxG,EAA2BoE,aAAYjG,GAASA,EAAM6B,4BACpDnC,QAAS2W,EAAwB5W,MAAO6W,GAAyBzU,EAyBzE,OATIwU,IACAnN,MAAM,iCACNyM,IACA7R,EAAS,CACLxD,KAAMhD,KAEVwG,EAAS2K,OAIT9J,gBAAA,OAAAN,SAAA,CACIC,eAAA,KAAGI,UAAU,wBAAuBL,SAACC,eAAA,MAAAD,SAAI,kBACxCiS,EACKhS,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SACtBiS,IAGL,GACJhS,eAACG,KAAI,CACDC,UAAU,eACVyB,MAAO,CAAE0D,MAAO,MAAOxD,OAAQ,YAAa2D,YAAa,WAAY3F,SAErEC,eAACG,KAAKG,KAAI,CAAAP,SACNM,gBAACkI,KAAI,CAACC,SArCQ/F,IAC1BA,EAAEgG,iBAUFjJ,EfqV0ByS,IAAgB1S,MAAOC,EAAU4E,KAE/D,IACI5E,EAAS,CACLxD,KAAMnD,KAGV,MACImE,kBAAkB,SAAEC,IACpBmH,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUtH,EAASuH,WAKpC,KAAEzH,SAAe0C,KAAMqG,KACzB,2BACAmM,EACA5N,GAGJ7E,EAAS,CACLxD,KAAMlD,GACNmD,QAASc,IAGf,MAAO5B,GACLqE,EAAS,CACLxD,KAAMjD,GACNkD,QAASd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAKkN,QAAU9O,EAAMuJ,SAAS3H,KAAKkN,QAAU9O,EAAMwE,YetXxFuS,CATW,CAChB,KAAQnR,EACR,aAAgBuQ,EAChB,SAAYE,EACZ,SAAYE,EACZ,SAAY1G,EACZ,KAAQC,EACR,MAASvP,MA4BoCqE,SAAA,CAEjCM,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,OAAMrO,SAAA,CACxBC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,SAGZC,eAACuI,KAAKM,QAAO,CACTC,WAAW,EACX9M,KAAK,OACLkN,YAAY,kBACZF,MAAOjI,EACPkI,SAAWxG,GAAMkM,EAAQlM,EAAEC,OAAOsG,YAK1C3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,cAAarO,SAAA,CAC/BC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,iBAGZM,gBAAC8R,KAAU,CAAApS,SAAA,CACPC,eAACmS,KAAWnR,KAAI,CAAAjB,SAAC,QACjBC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACLkN,YAAY,eACZH,QAAQ,SACRI,UAAU,KACVH,MAAOsI,EACPrI,SAAWxG,GAAM8O,EAAe9O,EAAEC,OAAOsG,eAMrD3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,UAASrO,SAAA,CAC3BC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,aAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACLkN,YAAY,WACZF,MAAOwI,EACPzI,QAAQ,SACRI,UAAU,IACVF,SAAWxG,GAAMgP,EAAWhP,EAAEC,OAAOsG,YAK7C3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,cAAarO,SAAA,CAC/BC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,sBAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACLkN,YAAY,eACZF,MAAO0I,EACPzI,SAAWxG,GAAMkP,EAAelP,EAAEC,OAAOsG,YAKjD3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,WAAUrO,SAAA,CAC5BC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,aAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACLkN,YAAY,WACZF,MAAOgC,EACP/B,SAAWxG,GAAMmP,EAAYnP,EAAEC,OAAOsG,YAK9C3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,OAAMrO,SAAA,CACxBC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,SAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACLkN,YAAY,OACZF,MAAOiC,EACPhC,SAAWxG,GAAMoP,EAAQpP,EAAEC,OAAOsG,YAK1C3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,QAAOrO,SAAA,CACzBC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,UAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACLkN,YAAY,QACZF,MAAOtN,EACPuN,SAAWxG,GAAMqP,EAASrP,EAAEC,OAAOsG,YAK3ChJ,eAACmF,KAAM,CACHtD,MAAO,CAAE0D,MAAO,QAChBnF,UAAU,SACVpE,KAAK,SACL8D,QAAQ,UAASC,SACpB,iBAGDC,eAACmF,KAAM,CACHtD,MAAO,CAAE0D,MAAO,QAChBnF,UAAU,cACVN,QAAQ,UACRsF,QAASA,IAAMiM,IAAsBtR,SAAC,sBCcnDqS,OAnLf,WAEI,IAAIjR,EAAUC,eAGd,MAAMvD,EAA8B8D,aAAYjG,GAASA,EAAMmC,+BACvD1C,MAAO4Q,GAAelO,EAGxB2B,EAAWkC,eACV2Q,EAAeC,GAAoBvO,mBAAS,KAC5CwO,EAAeC,GAAoBzO,oBAAS,IAG5CF,EAAMC,GAAWC,oBAAS,GAC3BC,EAAcA,IAAMF,GAAQ,GAI5B9G,EAAmB2E,aAAYjG,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfK,EAA+BsE,aAAYjG,GAASA,EAAM2B,gCAC1D,UAAEC,EAAWpC,QAASuX,GAAwBpV,EAG9CI,EAA2BkE,aAAYjG,GAASA,EAAM+B,4BACpDrC,QAASsX,GAA2BjV,EAE5CmE,qBAAU,KACD3E,GAGDuC,EAASwK,MACTxK,EAAS2K,MACT3K,EAAS,CACLxD,KAAMpD,MALVuI,EAAQ0D,KAAK,YAQlB,CAACrF,EAAU2B,EAASlE,EAAUyV,IAG7BzV,GAA2B,wCAAf8O,IACZnH,MAAM,wCACNpF,EAASsK,MACT3I,EAAQ0D,KAAK,UACbuD,OAAO9G,SAAS+G,UAGhBqK,IACA9N,MAAM,iCACNpF,EAAS,CACLxD,KAAMxC,KAEVgG,EAAS2K,OAIb,MAAMwI,EAAwBvV,IAC1BkV,EAAiBlV,GA5CI0G,GAAQ,IAiD3BK,EAAiB7E,IACnBE,EhB4X0BF,IAAOC,MAAOC,EAAU4E,KACtD,IACI5E,EAAS,CACLxD,KAAM3C,KAGV,MACI2D,kBAAkB,SAAEC,IACpBmH,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUtH,EAASuH,WAKpC,KAAEzH,SAAe0C,KAAMgF,OACzB,2BAA2BnF,KAC3B+E,GAGJ7E,EAAS,CACLxD,KAAM1C,GACN2C,QAASc,IAGf,MAAO5B,GACLqE,EAAS,CACLxD,KAAMzC,GACN0C,QAASd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAKkN,QAAU9O,EAAMuJ,SAAS3H,KAAKkN,QAAU9O,EAAMwE,YgB3ZxFiT,CAAkBtT,IAC3B0E,KAIEqN,EAAsBA,KACxBmB,GAAkBD,IAItB,OACIlS,gBAAA,OAAAN,SAAA,CAGIC,eAAA,OAAAD,SACIC,eAAAsI,YAAA,CAAAvI,SACIM,gBAACyE,KAAK,CAACjB,KAAMA,EAAMkB,OAAQf,EAAYjE,SAAA,CACnCC,eAAC8E,KAAME,OAAM,CAACC,aAAW,EAAAlF,SACrBM,gBAACyE,KAAMjE,MAAK,CAAAd,SAAA,CACRC,eAAA,KAAG6B,MAAO,CAAEI,MAAO,WAAa7B,UAAU,gCACzC,IAAI,2BAIbC,gBAACyE,KAAMxE,KAAI,CAAAP,SAAA,CAAC,+CAEP,IAAIM,gBAAA,MAAAN,SAAA,CAAI,IAAEsS,EAActH,SAAS,KAAGsH,EAAcpH,KAAK,KAAGoH,EAAc3W,MAAM,OAAM,OAEzF2E,gBAACyE,KAAMI,OAAM,CAAAnF,SAAA,CACTC,eAACmF,KAAM,CAACrF,QAAQ,SAASsF,QAASA,IAAMjB,EAAckO,EAAc/S,IAAIS,SAAC,mBAGzEC,eAACmF,KAAM,CAACrF,QAAQ,UAAUsF,QAASpB,EAAYjE,SAAC,qBAY/D0S,GAAuBpS,gBAAA,QAAMwB,MAAO,CAAEgB,QAAS,QAAS9C,SAAA,CACrDC,eAAA,MAAAD,SAAI,sBACJC,eAAA,QAAMI,UAAU,OAAML,SAClBC,eAAC8C,KAAO,CAACC,UAAU,gBAK1BwP,EACGvS,eAAA,OAAAD,SACIC,eAACoR,GAAsB,CAACC,oBAAqBA,MAGjDrR,eAAA,UACII,UAAU,+CACVgF,QAASA,IAAMiM,IAAsBtR,SACxC,sBAKJzC,IAAciV,EAAgBjV,EAAU8F,KAAI,CAAChG,EAASiG,IACnDrD,eAAA,OAAAD,SACIM,gBAACF,KAAI,CACDC,UAAU,WAEVyB,MAAO,CAAEE,OAAQ,YAAa2D,YAAa,WAAY3F,SAAA,CAIvDM,gBAAA,QAAAN,SAAA,CAAMC,eAAA,KAAAD,SAAG,WAAW3C,EAAQ2D,QAC5BV,gBAAA,QAAAN,SAAA,CAAMC,eAAA,KAAAD,SAAG,eAAc,OAAK3C,EAAQoO,gBACpCnL,gBAAA,QAAAN,SAAA,CAAMC,eAAA,KAAAD,SAAG,cAAc3C,EAAQ2N,SAAS,UAC9B3N,EAAQ4N,SAAS,KAAG5N,EAAQ6N,KAAK,KAAG7N,EAAQ1B,MAAM,IACvD0B,EAAQ8N,SAITlL,eAAA,QACIoF,QAASA,IAAMuN,EAAqBvV,GAAS2C,SAC7CC,eAAA,KACI6J,MAAM,iBACNzJ,UAAU,oDAMlBJ,eAAA,QACIoF,QAASA,IAAMjE,EAAQ0D,KAAK,kBAAkBzH,EAAQkC,OAAOS,SAC7DC,eAAA,KACI6J,MAAM,eACNzJ,UAAU,uDAzBjBhD,EAAQkC,KALX+D,KAwCV,OC+BDwP,OA5MWhT,IAAgB,IAAf,MAAE+D,GAAO/D,EAE5BsB,EAAUC,eACd,MAAM5B,EAAWkC,eAEVX,EAAM4N,GAAW5K,mBAAS,KAC1BuN,EAAaC,GAAkBxN,mBAAS,KACxCyN,EAASC,GAAc1N,mBAAS,KAChC2N,EAAaC,GAAkB5N,mBAAS,KACxCiH,EAAU4G,GAAe7N,mBAAS,KAClCkH,EAAM4G,GAAW9N,mBAAS,KAC1BrI,EAAOoW,GAAY/N,mBAAS,IAG7B/G,EAAmB2E,aAAYjG,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfa,EAA8B8D,aAAYjG,GAASA,EAAMmC,+BACvD1C,MAAO4Q,GAAelO,EAGxBV,EAA0BwE,aAAYjG,GAASA,EAAMyB,2BACrD,QAAEC,EAASjC,MAAO2X,GAAyB3V,EAG3CK,EAA2BmE,aAAYjG,GAASA,EAAM8B,4BACpDpC,QAAS2X,GAAyBvV,EAE1CoE,qBAAU,KACD3E,GAGDuC,EAASwK,MACTxK,EAAS4K,GAAiBxG,EAAMM,OAAO5E,MAHvC6B,EAAQ0D,KAAK,YAKlB,CAACrF,EAAU2B,EAASlE,EAAU2G,IAG7B3G,GAA2B,wCAAf8O,IACZnH,MAAM,wCACNpF,EAASsK,MACT3I,EAAQ0D,KAAK,UACbuD,OAAO9G,SAAS+G,UA0BpB,OATG0K,IACCnO,MAAM,iCACNpF,EAAS,CACLxD,KAAM5C,KAEV+H,EAAQ0D,KAAK,mBACbrF,EAAS2K,OAIT9J,gBAAA,OAAAN,SAAA,CACIC,eAAA,KAAGI,UAAU,wBAAuBL,SAACC,eAAA,MAAAD,SAAI,qBACxC+S,GAAwB9S,eAAA,MAAAD,SAAI,4BAC7BC,eAACG,KAAI,CACDC,UAAU,eACVyB,MAAO,CAAE0D,MAAO,MAAOxD,OAAQ,YAAa2D,YAAa,WAAY3F,SAErEC,eAACG,KAAKG,KAAI,CAAAP,SACNM,gBAACkI,KAAI,CAACC,SAhCQ/F,IAC1BA,EAAEgG,iBACF,MAAMuK,EAAiB,CACnB,KAAQjS,EACR,aAAgBuQ,EAChB,SAAYE,EACZ,SAAYE,EACZ,SAAY1G,EACZ,KAAQC,EACR,MAASvP,GjBiWYuX,IAAC3T,EAAI2S,EiB/V9BzS,GjB+V0BF,EiB/VCsE,EAAMM,OAAO5E,GjB+VV2S,EiB/Vce,EjB+VEzT,MAAOC,EAAU4E,KACnE,IACI5E,EAAS,CACLxD,KAAM/C,KAGV,MACI+D,kBAAkB,SAAEC,IACpBmH,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUtH,EAASuH,WAKpC,KAAEzH,SAAe0C,KAAMqR,IACzB,2BAA2BxR,KAC3B2S,EACA5N,GAGJ7E,EAAS,CACLxD,KAAM9C,GACN+C,QAASc,IAGf,MAAO5B,GACLqE,EAAS,CACLxD,KAAM7C,GACN8C,QAASd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAKkN,QAAU9O,EAAMuJ,SAAS3H,KAAKkN,QAAU9O,EAAMwE,eiB1WhDI,SAAA,CAEjCM,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,OAAMrO,SAAA,CACxBC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,SAGZC,eAACuI,KAAKM,QAAO,CACTC,WAAW,EACX9M,KAAK,OACLkN,YAAY,kBACZG,aAAcjM,EAAUA,EAAQ2D,KAAO,GACvCkI,SAAWxG,GAAMkM,EAAQlM,EAAEC,OAAOsG,YAK1C3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,cAAarO,SAAA,CAC/BC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,iBAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACLkN,YAAY,eACZH,QAAQ,SACRI,UAAU,KACVE,aAAcjM,EAAUA,EAAQoO,aAAe,GAC/CvC,SAAWxG,GAAM8O,EAAe9O,EAAEC,OAAOsG,YAKjD3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,UAASrO,SAAA,CAC3BC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,aAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACLkN,YAAY,WACZG,aAAcjM,EAAUA,EAAQ8N,SAAW,GAC3CnC,QAAQ,SACRI,UAAU,IACVF,SAAWxG,GAAMgP,EAAWhP,EAAEC,OAAOsG,YAK7C3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,cAAarO,SAAA,CAC/BC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,sBAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACLkN,YAAY,eACZG,aAAcjM,EAAUA,EAAQ2N,SAAW,GAC3C9B,SAAWxG,GAAMkP,EAAelP,EAAEC,OAAOsG,YAKjD3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,WAAUrO,SAAA,CAC5BC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,aAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACLkN,YAAY,WACZG,aAAcjM,EAAUA,EAAQ4N,SAAW,GAC3C/B,SAAWxG,GAAMmP,EAAYnP,EAAEC,OAAOsG,YAK9C3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,OAAMrO,SAAA,CACxBC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,SAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACLkN,YAAY,OACZG,aAAcjM,EAAUA,EAAQ6N,KAAO,GACvChC,SAAWxG,GAAMoP,EAAQpP,EAAEC,OAAOsG,YAK1C3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,QAAOrO,SAAA,CACzBC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,UAGZC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACLkN,YAAY,QACZG,aAAcjM,EAAUA,EAAQ1B,MAAQ,GACxCuN,SAAWxG,GAAMqP,EAASrP,EAAEC,OAAOsG,YAM3ChJ,eAACmF,KAAM,CACHtD,MAAO,CAAE0D,MAAO,QAChBnF,UAAU,SACVpE,KAAK,SACL8D,QAAQ,UAASC,SACpB,iBAIDC,eAACmF,KAAM,CACHtD,MAAO,CAAE0D,MAAO,QAChBnF,UAAU,cACVN,QAAQ,UACRsF,QAASA,IAAMjE,EAAQ0D,KAAK,mBAAmB9E,SAClD,sB,UCvMlB,MAAMmT,GAAaC,IAGtB,MAAMC,EAAYD,EAAMxJ,MAAM,EAAG,IAC3B0J,EAAaF,EAAMxJ,MAAM,EAAG,GAC5B2J,EAAYH,EAAMxJ,MAAM,EAAG,GAEjC,OAAQ0J,GACN,IAAK,KACH,MAAO,GAAGD,aAAqBE,IACjC,IAAK,KACH,MAAO,GAAGF,cAAsBE,IAClC,IAAK,KACH,MAAO,GAAGF,WAAmBE,IAC/B,IAAK,KACH,MAAO,GAAGF,WAAmBE,IAC/B,IAAK,KACH,MAAO,GAAGF,SAAiBE,IAC7B,IAAK,KACH,MAAO,GAAGF,UAAkBE,IAC9B,IAAK,KACH,MAAO,GAAGF,UAAkBE,IAC9B,IAAK,KACH,MAAO,GAAGF,YAAoBE,IAChC,IAAK,KACH,MAAO,GAAGF,eAAuBE,IACnC,IAAK,KACH,MAAO,GAAGF,aAAqBE,IACjC,IAAK,KACH,MAAO,GAAGF,cAAsBE,IAClC,IAAK,KACH,MAAO,GAAGF,cAAsBE,IAClC,QACE,OAAO,OCGAC,OAlCgB1T,IAA6C,IAA5C,iBAAE2T,EAAgB,iBAAEC,GAAkB5T,EAElE,MAAOwB,EAAYiL,GAAiBvI,mBAAS,IAO7C,OACI/D,eAAA,OAAAD,SACIC,eAAA,QAAMwI,SAPI/F,IACdA,EAAEgG,iBACF+K,EAAiBnS,IAKYtB,SACrBM,gBAAA,QACIwB,MAAO,CAAEgB,QAAS,QAClBzC,UAAU,GAAEL,SAAA,CAEZC,eAAA,SACIhE,KAAK,OACLgN,MAAO3H,EACP6H,YAAauK,EACbrT,UAAU,eACV6I,SAAWxG,GAAM6J,EAAc7J,EAAEC,OAAOsG,SAE5ChJ,eAAA,UACIhE,KAAK,SACLoE,UAAU,wCAAuCL,SACpDC,eAAA,KAAGI,UAAU,4BCyJnBsT,OAzKf,WAEI,IAAIvS,EAAUC,eACd,MAAM5B,EAAWkC,cAGXiS,EAAcT,IAAU,IAAIzU,MAAOC,cAAciL,MAAM,EAAG,MAEzDiK,GAAmB7P,mBAAS4P,IAC5BE,EAA0BC,GAA+B/P,mBAAS,IAClEgQ,EAAiBC,GAAsBjQ,mBAAS,IAGjD/G,EAAmB2E,aAAYjG,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfU,EAAsBiE,aAAYjG,GAASA,EAAMgC,uBACjD,OAAEC,EAAQzC,QAAS+Y,GAAkBvW,EAGrCE,EAA8B+D,aAAYjG,GAASA,EAAMkC,+BACvDxC,QAAS8Y,EAA6BhZ,QAASiZ,GAAgCvW,EAGjFC,EAA8B8D,aAAYjG,GAASA,EAAMmC,+BACvD1C,MAAO4Q,GAAelO,EAE9B+D,qBAAU,KACD3E,GAGDuC,EAASwK,MACTxK,EAAS6K,OAHTlJ,EAAQ0D,KAAK,YAKlB,CAAC5H,EAAUuC,EAAU2B,IAEpBlE,GAA2B,wCAAf8O,IACZnH,MAAM,wCACNpF,EAASsK,MACT3I,EAAQ0D,KAAK,UACbuD,OAAO9G,SAAS+G,UAGpB,MAAM+L,EAA8BA,CAAC9U,EAAI+U,KACrCP,EAA4BxU,GAK5BE,E5BqI4B8U,EAAChV,EAAInD,IAAYoD,MAAOC,EAAU4E,KAElE,IACI5E,EAAS,CACLxD,KAAMpC,KAIV,MACIoD,kBAAkB,SAAEC,IACpBmH,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUtH,EAASuH,WAKpC,KAAEzH,SAAe0C,KAAMqR,IACzB,gCAAgCxR,KAChCnD,EACAkI,GAGJ7E,EAAS,CACLxD,KAAMnC,GACNoC,QAASc,IAGf,MAAO5B,GACLqE,EAAS,CACLxD,KAAMlC,GACNmC,QAASd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMwE,Y4BvKtF2U,CAAqBhV,EAJV,CAChB,aAAgB+U,EAChB,aAAgBA,EAAST,EAAkB,oBAkBnD,OAbIM,IACAtP,MAAM,wCACNpF,EAAS,CACLxD,KAAMjC,KAEVyF,EAAS6K,OASThK,gBAAA,OAAAN,SAAA,CACKkU,GAAiB5T,gBAAA,QAAMwB,MAAO,CAAEgB,QAAS,QAAS9C,SAAA,CAC/CC,eAAA,MAAAD,SAAI,mBACJC,eAAA,QAAMI,UAAU,OAAML,SAClBC,eAAC8C,KAAO,CAACC,UAAU,gBAG1B9F,EAASqI,OAAStF,eAACuT,GAAsB,CAACC,iBAbzBe,IACtBP,EAAmBO,IAYgEd,iBAtE9D,+DAuEZ9V,EAAO/B,OAAS,EACjByE,gBAACmU,KAAK,CAACpU,UAAU,OAAOqU,SAAO,EAACC,UAAQ,EAAA3U,SAAA,CACpCC,eAAA,SAAAD,SACIM,gBAAA,MAAID,UAAU,qCAAoCL,SAAA,CAC9CC,eAAA,MAAAD,SAAI,aACJC,eAAA,MAAAD,SAAI,kBACJC,eAAA,MAAAD,SAAI,cACJC,eAAA,MAAAD,SAAI,qBACJC,eAAA,MAAAD,SAAI,iBACJC,eAAA,MAAAD,SAAI,gBACJC,eAAA,MAAAD,SAAI,YACJC,eAAA,MAAAD,SAAI,iBACJC,eAAA,MAAAD,SAAI,qBACJC,eAAA,MAAAD,SAAI,iBACH9C,EAASqI,OACNtF,eAAA,MAAAD,SAAI,yBAOfpC,EAAOsF,QAAQC,GAEZA,EAAKnC,KAAKU,cAAc0B,SAAS4Q,IAEjC7Q,EAAKyR,aAAalT,cAAc0B,SAAS4Q,IAEzC7Q,EAAK9F,QAAQqE,cAAc0B,SAAS4Q,KAGtC3Q,KAAI,CAAC/H,EAAOgI,IACVrD,eAAA,SAAAD,SACIM,gBAAA,MAAID,UAAU,cAAaL,SAAA,CACvBC,eAAA,MAAAD,SACK1E,EAAMiE,KAEXU,eAAA,MAAAD,SAAK1E,EAAM0F,OACXf,eAAA,MAAAD,SAAK1E,EAAMsL,cACX3G,eAAA,MAAAD,SAAK1E,EAAM+B,UACX4C,eAAA,MAAAD,SAAK1E,EAAMsZ,eACX3U,eAAA,MAAAD,SAAK1E,EAAMuZ,YACP5U,eAAA,KAAGI,UAAU,qCAEbJ,eAAA,KAAGI,UAAU,sCAEjBJ,eAAA,MAAAD,SAAKmT,GAAU7X,EAAMwZ,WACrBxU,gBAAA,MAAAN,SAAA,CAAK1E,EAAMyZ,YAAY,UACvB9U,eAAA,MAAAD,SAAK1E,EAAM0Z,aACP/U,eAAA,KAAGI,UAAU,qCAEbJ,eAAA,KAAGI,UAAU,sCAEjBJ,eAAA,MAAAD,SAAK1E,EAAM2Z,eACV/X,EAASqI,OACNtF,eAAA,MAAAD,SACK1E,EAAM0Z,aACH/U,eAAA,UACII,UAAU,gCACVgF,QAASA,IAAMgP,EAA4B/Y,EAAMiE,IAAI,GAAOS,SAE3DoU,GAEGN,IAA6BxY,EAAMiE,GAEnCU,eAAC8C,KAAO,CAACC,UAAU,WAEnB,wBAGR/C,eAAA,UACII,UAAU,iCACVgF,QAASA,IAAMgP,EAA4B/Y,EAAMiE,IAAI,GAAMS,SAE1DoU,GAEGN,IAA6BxY,EAAMiE,GAEnCU,eAAC8C,KAAO,CAACC,UAAU,WAEnB,4BAhDhBM,QAyDlBrD,eAACJ,GAAO,CAACE,QAAQ,OAAMC,SAAC,uBCF3BkV,OApKWA,KAEtB,IAAI9T,EAAUC,eACd,MAAM5B,EAAWkC,eAEVX,EAAM4N,GAAW5K,mBAAS,KAC1ByB,EAAa0P,GAAkBnR,mBAAS,KACxC9C,EAAOkU,GAAYpR,mBAAS,KAC5B4B,EAAOyP,GAAYrR,oBAAS,IAC5BpD,EAAO0U,GAAYtR,mBAAS,MAG7B/G,EAAmB2E,aAAYjG,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfZ,EAAuBuF,aAAYjG,GAASA,EAAMU,wBAClD,QAAED,EAASf,QAASka,EAAwBna,MAAOoa,GAAyBnZ,EAG5EyB,EAA8B8D,aAAYjG,GAASA,EAAMmC,+BACvD1C,MAAO4Q,GAAelO,EAE9B+D,qBAAU,KACD3E,GACDkE,EAAQ0D,KAAK,UAEjBrF,EAASwK,QACV,CAACxK,EAAUvC,EAAUkE,IA8BxB,OAfImU,IACA1Q,MAAM,iCACNzD,EAAQ0D,KAAK,YAAY1I,EAAQmD,OACjCE,EAAS,CACLxD,KAAM3G,KAIV4H,GAA2B,wCAAf8O,IACZnH,MAAM,wCACNpF,EAASsK,MACT3I,EAAQ0D,KAAK,UACbuD,OAAO9G,SAAS+G,UAIhBhI,gBAAA,OAAAN,SAAA,CACKwV,GAAwBvV,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAEwV,EAAqB5U,MAAM,KAC/EX,eAAA,QACII,UAAU,0CAAyCL,SAEnDC,eAAA,MAAAD,SAAI,kBAERM,gBAACkI,KAAI,CAACC,SApCI/F,IACdA,EAAEgG,iBAEF,IAAI+M,EAAY,IAAIC,SACpBD,EAAUE,OAAO,OAAQ3U,GACzByU,EAAUE,OAAO,cAAelQ,GAChCgQ,EAAUE,OAAO,QAASzU,GAC1BuU,EAAUE,OAAO,QAAS/P,GAC1B6P,EAAUE,OAAO,QAAS/U,GAE1BnB,E7B2BsBrD,IAAYoD,MAAOC,EAAU4E,KAEvD,IACI5E,EAAS,CACLxD,KAAM9G,IAIV,MACI8H,kBAAkB,SAAEC,IACpBmH,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,sBAChBC,cAAe,UAAUtH,EAASuH,WAKpC,KAAEzH,SAAe0C,KAAMqG,KACzB,uBACA3J,EACAkI,GAGJ7E,EAAS,CACLxD,KAAM7G,EACN8G,QAASc,IAEf,MAAO5B,GACLqE,EAAS,CACLxD,KAAM5G,EACN6G,QAASd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMwE,Y6B5DtFgW,CAAcH,KA0BMzV,SAAA,CAErBM,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,OAAMrO,SAAA,CACxBC,eAACuI,KAAKK,MAAK,CAAA7I,SACPC,eAAA,KAAAD,SAAG,mBAIPC,eAACuI,KAAKM,QAAO,CACTO,UAAQ,EACRN,WAAW,EACX9M,KAAK,OACLgN,MAAOjI,EACPmI,YAAY,eACZD,SAAWxG,GAAMkM,EAAQlM,EAAEC,OAAOsG,YAK1C3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,cAAarO,SAAA,CAC/BC,eAACuI,KAAKK,MAAK,CAAA7I,SACPC,eAAA,KAAAD,SAAG,0BAIPC,eAACuI,KAAKM,QAAO,CACTO,UAAQ,EACRpN,KAAK,OACLgN,MAAOxD,EACP0D,YAAY,sBACZD,SAAWxG,GAAMyS,EAAezS,EAAEC,OAAOsG,YAKjD3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,QAAOrO,SAAA,CACzBC,eAACuI,KAAKK,MAAK,CAAA7I,SACPC,eAAA,KAAAD,SAAG,YAIPC,eAACuI,KAAKM,QAAO,CACTO,UAAQ,EACRpN,KAAK,OACL+M,QAAQ,2BACRC,MAAO/H,EACPiI,YAAY,SACZ0M,KAAK,OACLzM,UAAU,IACVF,SAAWxG,GAAM0S,EAAS1S,EAAEC,OAAOsG,YAK3C3I,gBAAA,QAAMwB,MAAO,CAAEgB,QAAS,QAAS9C,SAAA,CAC7BC,eAAA,SAAAD,SAAO,aACPC,eAAA,SACIhE,KAAK,WACLgN,MAAOrD,EACPvF,UAAU,YACV6I,SAAUA,IAAMmM,GAAUzP,QAIlCtF,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,QAAOrO,SAAA,CACzBC,eAACuI,KAAKK,MAAK,CAAA7I,SACPC,eAAA,KAAAD,SAAG,oBAIPC,eAACuI,KAAKM,QAAO,CACTO,UAAQ,EACRpN,KAAK,OACLiN,SAAWxG,GAAM4S,EAAS5S,EAAEC,OAAOmT,MAAM,SAKjD7V,eAACmF,KAAM,CACHnJ,KAAK,SACL8D,QAAQ,UACRM,UAAU,0BAAyBL,SACtC,iBAGDC,eAACmF,KAAM,CACHnJ,KAAK,SACL8D,QAAQ,UACRM,UAAU,+BACVgF,QAASA,IAAMjE,EAAQ0D,KAAK,KAAK9E,SACpC,kBCyEF+V,OApOWjW,IAAgB,IAAf,MAAE+D,GAAO/D,EAGhC,MAAM3D,EAAwByF,aAAYjG,GAASA,EAAMQ,yBACjDhB,QAAS6a,EAAkB,QAAE5Z,GAAYD,GAW1C6E,EAAM4N,GAAW5K,mBAAS,KAC1ByB,EAAa0P,GAAkBnR,mBAAS,KACxC9C,EAAOkU,GAAYpR,mBAAS,KAC5B4B,EAAOyP,GAAYrR,mBAAS5H,EAAQwJ,QACpChF,EAAO0U,GAAYtR,mBAAS,IAEnC,IAAI5C,EAAUC,eACd,MAAM5B,EAAWkC,eAEVsU,EAAUC,GAAelS,oBAAS,GAGnC/G,EAAmB2E,aAAYjG,GAASA,EAAMsB,oBAC9C,SAAEC,GAAaD,EAGfX,EAAuBsF,aAAYjG,GAASA,EAAMW,wBAEpDjB,QAAS8a,EACThb,QAASib,EACThb,MAAOib,GACP/Z,EAGEwB,EAA8B8D,aAAYjG,GAASA,EAAMmC,+BACvD1C,MAAO4Q,GAAelO,EAG9B+D,qBAAU,KACD3E,GAAaA,EAASqI,OACvBnE,EAAQ0D,KAAK,UAEjBrF,EAASwK,MACTxK,EAASH,GAAkBuE,EAAMM,OAAO5E,OACzC,CAACE,EAAUvC,EAAUkE,EAASyC,IA+BjC,OAhBIsS,IACAtR,MAAM,iCACNpF,EAAS,CACLxD,KAAMvG,IAEV0L,EAAQ0D,KAAK,YAAY1I,EAAQmD,OAIjCrC,GAA2B,wCAAf8O,IACZnH,MAAM,wCACNpF,EAASsK,MACT3I,EAAQ0D,KAAK,UACbuD,OAAO9G,SAAS+G,UAIhBhI,gBAAA,OAAAN,SAAA,CACIC,eAAA,QACII,UAAU,0CAAyCL,SAEnDC,eAAA,MAAAD,SAAI,mBAEPqW,EACG/V,gBAAA,OAAAN,SAAA,MAhFRqI,OAAOiO,SAAS,CACZC,IAAK,EACLC,SAAU,WAgFFvW,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAEqW,EAAqBzV,MAAM,QAE1D,GACHoV,GAAsB1V,gBAAA,QAAMwB,MAAO,CAAEgB,QAAS,QAAS9C,SAAA,CACpDC,eAAA,MAAAD,SAAI,4BACJC,eAAA,QAAMI,UAAU,OAAML,SAClBC,eAAC8C,KAAO,CAACC,UAAU,gBAG1BoT,EAA0B9V,gBAAA,QAAMwB,MAAO,CAAEgB,QAAS,QAAS9C,SAAA,CACxDC,eAAA,MAAAD,SAAI,qBACJC,eAAA,QAAMI,UAAU,OAAML,SAClBC,eAAC8C,KAAO,CAACC,UAAU,gBAEjB,GACV1C,gBAACkI,KAAI,CAACC,SAtDI/F,IACdA,EAAEgG,iBACF,MAAM+N,EAAYra,EAAQmD,GAC1B,IAAIkW,EAAY,IAAIC,SACpBD,EAAUE,OAAO,OAAQ3U,GACzByU,EAAUE,OAAO,cAAelQ,GAChCgQ,EAAUE,OAAO,QAASzU,GAC1BuU,EAAUE,OAAO,QAAS/P,GAC1B6P,EAAUE,OAAO,QAAS/U,GAE1BnB,E9BkFqBiX,EAACnX,EAAInD,IAAYoD,MAAOC,EAAU4E,KAE3D,IACI5E,EAAS,CACLxD,KAAM1G,IAIV,MACI0H,kBAAkB,SAAEC,IACpBmH,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,sBAChBC,cAAe,UAAUtH,EAASuH,WAKpC,KAAEzH,SAAe0C,KAAMqR,IACzB,uBAAuBxR,KACvBnD,EACAkI,GAGJ7E,EAAS,CACLxD,KAAMzG,EACN0G,QAASc,IAGf,MAAO5B,GACLqE,EAAS,CACLxD,KAAMxG,EACNyG,QAASd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMuJ,SAAS3H,KAAK4H,OAASxJ,EAAMwE,Y8BpHtF8W,CAAcD,EAAWhB,KA4CLzV,SAAA,CAErBM,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,QAAOrO,SAAA,CACzBC,eAACuI,KAAKK,MAAK,CAAA7I,SACPC,eAAA,KAAAD,SAAG,oBAIPC,eAAA,KAAAD,SACIC,eAAA,OAAKU,IAAKvE,EAAQwE,MAAOyL,IAAKjQ,EAAQ4E,KAAMH,OAAO,UAGtDoV,EACG3V,gBAAA,OAAAN,SAAA,CACIC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACLiN,SAAWxG,GAAM4S,EAAS5S,EAAEC,OAAOmT,MAAM,MAI7C7V,eAAA,QACIoF,QAASA,KACL6Q,GAAaD,GACbX,EAAS,IACT7V,EAAS,CACLxD,KAAMvG,KAGd2K,UAAU,8BAA6BL,SAC1C,cAKLC,eAAA,KAAAD,SACIC,eAAA,QACIoF,QAASA,IAAM6Q,GAAaD,GAC5B5V,UAAU,yBAAwBL,SACrC,gCAObM,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,OAAMrO,SAAA,CACxBC,eAACuI,KAAKK,MAAK,CAAA7I,SACPC,eAAA,KAAAD,SAAG,mBAIPC,eAACuI,KAAKM,QAAO,CACTC,WAAW,EACX9M,KAAK,OACLqN,aAAclN,EAAQ4E,KACtBmI,YAAY,eACZD,SAAWxG,GAAMkM,EAAQlM,EAAEC,OAAOsG,YAK1C3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,cAAarO,SAAA,CAC/BC,eAACuI,KAAKK,MAAK,CAAA7I,SACPC,eAAA,KAAAD,SAAG,0BAIPC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACLqN,aAAclN,EAAQqJ,YACtB0D,YAAY,sBACZD,SAAWxG,GAAMyS,EAAezS,EAAEC,OAAOsG,YAKjD3I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,QAAOrO,SAAA,CACzBC,eAACuI,KAAKK,MAAK,CAAA7I,SACPC,eAAA,KAAAD,SAAG,YAIPC,eAACuI,KAAKM,QAAO,CACT7M,KAAK,OACL+M,QAAQ,2BACRM,aAAclN,EAAQ8E,MACtBiI,YAAY,SACZ0M,KAAK,OACLzM,UAAU,IACVF,SAAWxG,GAAM0S,EAAS1S,EAAEC,OAAOsG,YAK3C3I,gBAAA,QAAMwB,MAAO,CAAEgB,QAAS,QAAS9C,SAAA,CAC7BC,eAAA,SAAAD,SAAO,aACPC,eAAA,SACIhE,KAAK,WACL0a,eAAgBva,EAAQwJ,MACxBvF,UAAU,YACV6I,SAAUA,IAAMmM,GAAUzP,QAIlC3F,eAACmF,KAAM,CACHnJ,KAAK,SACL8D,QAAQ,UACRM,UAAU,+BAA8BL,SAC3C,iBAGDC,eAACmF,KAAM,CACHC,QAASA,IAAMjE,EAAQ0D,KAAK,YAAY1I,EAAQmD,MAChDQ,QAAQ,UACRM,UAAU,oCAAmCL,SAChD,kBC1NF4W,OAVf,WACI,OACI3W,eAAA,OAAAD,SACIC,eAACJ,GAAO,CAACE,QAAQ,SAAQC,SAAC,qBCU/B,MAgGM6W,GAAiBA,IAAMrX,MAAOC,EAAU4E,KACjD,IACE5E,EAAS,CAAExD,KAAMzB,KAEjB,MACEsc,WAAW,SAAE5Z,IACXmH,IAEEC,EAAS,CACbC,QAAS,CACPC,cAAe,UAAUtH,EAASuH,WAIhC,KAAEzH,SAAe0C,KAAMC,IAC3B,oBACA2E,GAGF7E,EAAS,CACPxD,KAAMxB,GACNyB,QAASc,IAGX,MAAO5B,GACPqE,EAAS,CACPxD,KAAMvB,GACNwB,QACEd,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAK4H,OAClCxJ,EAAMuJ,SAAS3H,KAAK4H,OACpBxJ,EAAMwE,YCxDLmX,OAhFf,WACE,MAAOC,EAAQC,GAAajT,oBAAS,IAC9BkT,EAAgBC,GAAqBnT,mBAAS,GAE/CvE,EAAWkC,cAEXyV,EAAgBxV,aAAYjG,GAASA,EAAMyb,eAAiB,MAC5D,QAAEjc,EAAO,UAAEoD,GAAc6Y,EAGzBC,EAAWC,uBAAY,KACvB/Y,GAAaA,EAAU1C,OAAS,GAClCsb,GAAkBI,IAAcA,EAAY,GAAKhZ,EAAU1C,WAE5D,CAAC0C,IAmBJ,GAjBAsD,qBAAU,KACRpC,GDmE+BD,UAC/B,IACIC,EAAS,CAAExD,KAAMtB,KAEjB,MAAM,KAAEqC,SAAe0C,KAAMC,IAAI,oBAEjCF,EAAS,CACLxD,KAAMrB,GACNsB,QAASc,IAGf,MAAO5B,GACLqE,EAAS,CACLxD,KAAMpB,GACNqB,QACId,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAK4H,OAChCxJ,EAAMuJ,SAAS3H,KAAK4H,OACpBxJ,EAAMwE,cClFxB,MAAM4X,EAAeC,YAAW,KAC1BlZ,GAAaA,EAAU1C,OAAS,GAClCob,GAAU,KAEX,KAEGS,EAAWC,YAAYN,EAAU,KAEvC,MAAO,KACLO,aAAaJ,GACbK,cAAcH,MAEf,CAACjY,EAAUlB,EAAW8Y,IAErBlc,IAAYoD,GAAkC,IAArBA,EAAU1C,OACrC,OAAO,KAGT,MAAMic,EAAYvZ,EAAU2Y,GAE5B,OACE5W,gBAACyE,KAAK,CACJjB,KAAMkT,EACNhS,OAAQA,IAAMiS,GAAU,GACxB3L,KAAK,KACLyM,UAAQ,EACRC,SAAS,SAAQhY,SAAA,CAEjBC,eAAC8E,KAAME,OAAM,CAACC,aAAW,EAAAlF,SACvBC,eAAC8E,KAAMjE,MAAK,CAAAd,SAAE8X,EAAUG,aAE1B3X,gBAACyE,KAAMxE,KAAI,CAAAP,SAAA,CACc,UAAtB8X,EAAUI,QACTjY,eAAA,OACEU,IAAKmX,EAAUK,YACf9L,IAAKyL,EAAUG,SACfnW,MAAO,CAAE0D,MAAO,OAAQ4S,UAAW,OAAQC,UAAW,aAGxDpY,eAAA,SACEqY,UAAQ,EACRxW,MAAO,CAAE0D,MAAO,OAAQ4S,UAAW,QACnCG,UAAQ,EAAAvY,SAERC,eAAA,UAAQU,IAAKmX,EAAUK,YAAalc,KAAK,gBAG7CgE,eAAA,KAAGI,UAAU,OAAML,SAAE8X,EAAUU,oBAEjClY,gBAACyE,KAAMI,OAAM,CAAAnF,SAAA,CACXC,eAACmF,KAAM,CAACrE,GAAIP,QAAMC,GAAI,iBAAiBqX,EAAUvY,KAAMQ,QAAQ,UAASC,SAAC,cAGzEC,eAACmF,KAAM,CAACrF,QAAQ,YAAYsF,QAASA,IAAM4R,GAAU,GAAOjX,SAAC,iB,gBCYtDyY,OApFf,WACE,OACEnY,gBAACgF,KAAS,CAACjF,UAAU,sBAAqBL,SAAA,CACxCC,eAACgD,KAAG,CAAC5C,UAAU,8BAA6BL,SAC1CM,gBAACiD,KAAG,CAACG,GAAI,EAAGrD,UAAU,cAAaL,SAAA,CACjCM,gBAAA,MAAID,UAAU,iBAAgBL,SAAA,CAC5BC,eAACyY,KAAI,CAACrY,UAAU,sBAAsB,uBAGxCJ,eAAA,KAAGI,UAAU,kBAAiBL,SAAC,uEAMnCM,gBAAC2C,KAAG,CAAC5C,UAAU,yBAAwBL,SAAA,CACrCC,eAACsD,KAAG,CAACE,GAAI,EAAGC,GAAI,EAAGrD,UAAU,OAAML,SACjCC,eAACG,KAAI,CAACC,UAAU,wCAAuCL,SACrDM,gBAACF,KAAKG,KAAI,CAACF,UAAU,kBAAiBL,SAAA,CACpCC,eAAA,OAAKI,UAAU,2CAA0CL,SAAC,YAC1DC,eAAA,MAAII,UAAU,OAAML,SAAC,oBACrBM,gBAAA,MAAID,UAAU,iBAAgBL,SAAA,CAC5BC,eAAA,QAAMI,UAAU,eAAcL,SAAC,YAAc,UAE/CM,gBAAA,MAAID,UAAU,qBAAoBL,SAAA,CAChCM,gBAAA,MAAID,UAAU,OAAML,SAAA,CAACC,eAAC0Y,KAAa,CAACtY,UAAU,sBAAsB,wBACpEC,gBAAA,MAAID,UAAU,OAAML,SAAA,CAACC,eAAC0Y,KAAa,CAACtY,UAAU,sBAAsB,wBACpEC,gBAAA,MAAID,UAAU,OAAML,SAAA,CAACC,eAAC0Y,KAAa,CAACtY,UAAU,sBAAsB,2BAEtEC,gBAAC8E,KAAM,CACLrE,GAAIP,QACJC,GAAG,iBACHV,QAAQ,UACRuL,KAAK,KACLjL,UAAU,aAAYL,SAAA,CACvB,eACaC,eAAC2Y,KAAY,CAACvY,UAAU,mBAM5CJ,eAACsD,KAAG,CAACE,GAAI,EAAGC,GAAI,EAAGrD,UAAU,OAAML,SACjCC,eAACG,KAAI,CAACC,UAAU,wCAAuCL,SACrDM,gBAACF,KAAKG,KAAI,CAACF,UAAU,kBAAiBL,SAAA,CACpCC,eAAA,MAAII,UAAU,OAAML,SAAC,oBACrBM,gBAAA,MAAID,UAAU,iBAAgBL,SAAA,CAC5BC,eAAA,QAAMI,UAAU,eAAcL,SAAC,aAAe,YAEhDM,gBAAA,MAAID,UAAU,qBAAoBL,SAAA,CAChCM,gBAAA,MAAID,UAAU,OAAML,SAAA,CAACC,eAAC0Y,KAAa,CAACtY,UAAU,sBAAsB,uBACpEC,gBAAA,MAAID,UAAU,OAAML,SAAA,CAACC,eAAC0Y,KAAa,CAACtY,UAAU,sBAAsB,uBACpEC,gBAAA,MAAID,UAAU,OAAML,SAAA,CAACC,eAAC0Y,KAAa,CAACtY,UAAU,sBAAsB,wBACpEC,gBAAA,MAAID,UAAU,OAAML,SAAA,CAACC,eAAC0Y,KAAa,CAACtY,UAAU,sBAAsB,qBAEtEC,gBAAC8E,KAAM,CACLrE,GAAIP,QACJC,GAAG,iBACHV,QAAQ,kBACRuL,KAAK,KACLjL,UAAU,aAAYL,SAAA,CACvB,eACaC,eAAC2Y,KAAY,CAACvY,UAAU,sBAO9CJ,eAACgD,KAAG,CAAC5C,UAAU,8BAA6BL,SAC1CC,eAACsD,KAAG,CAACG,GAAI,EAAGrD,UAAU,cAAaL,SACjCM,gBAAA,OAAKD,UAAU,uBAAsBL,SAAA,CACnCC,eAAA,MAAII,UAAU,OAAML,SAAC,oBACrBM,gBAAA,KAAGD,UAAU,OAAML,SAAA,CAAC,mCACcC,eAAA,KAAG4Y,KAAK,yBAAwB7Y,SAAC,oBAAmB,WAC5EC,eAAA,KAAG4Y,KAAK,oBAAmB7Y,SAAC,mCCqHnC8Y,OA/Lf,WACE,MAAO9X,EAAM4N,GAAW5K,mBAAS,KAC1BgC,EAAO0B,GAAY1D,mBAAS,KAC5B+U,EAAOC,GAAYhV,mBAAS,KAC5BiV,EAASC,GAAclV,mBAAS,KAChCmV,EAAeC,GAAoBpV,mBAAS,KAC5CqV,EAAQC,GAAatV,mBAAS,UAC9BuV,EAAQC,GAAaxV,mBAAS,OAC9ByV,EAAcC,GAAmB1V,mBAAS,OAC1C2V,EAAWC,GAAgB5V,oBAAS,IACpC6V,EAAeC,GAAoB9V,mBAAS,cAE7CvE,EAAWkC,cACXP,EAAUC,gBAGV,QACJlG,GAAU,EAAK,MACfC,EAAQ,KAAI,QACZC,GAAU,GACRuG,aAAYjG,GAASA,EAAMoe,qBAAuB,KAmBtD,OAAI1e,GACFoE,EAAS,CAAExD,KAAM7B,KACjBgH,EAAQ0D,KAAK,KACN,MAIP7E,eAACqF,KAAS,CAAAtF,SACRC,eAACgD,KAAG,CAAC5C,UAAU,4BAA2BL,SACxCM,gBAACiD,KAAG,CAAC4I,GAAI,GAAI1I,GAAI,EAAEzD,SAAA,CACjBC,eAAA,MAAII,UAAU,OAAML,SAAC,mBACpB5E,GAAS6E,eAACC,KAAK,CAACH,QAAQ,SAAQC,SAAE5E,IAEnCkF,gBAACkI,KAAI,CAACC,SA9BS/F,IACrBA,EAAEgG,iBAEF,MAAMsR,EAAW,IAAItE,SACrBsE,EAASrE,OAAO,OAAQ3U,GACxBgZ,EAASrE,OAAO,QAAS3P,GACzBgU,EAASrE,OAAO,eAAgBoD,GAChCiB,EAASrE,OAAO,WAAYsD,GAC5Be,EAASrE,OAAO,iBAAkBwD,GAClCa,EAASrE,OAAO,UAAW0D,GAC3BW,EAASrE,OAAO,UAAW4D,GAC3BS,EAASrE,OAAO,gBAAiB8D,GACjCO,EAASrE,OAAO,gBAAiB,IAEjClW,EH3BqBua,IAAaxa,MAAOC,EAAU4E,KACnD,IACI5E,EAAS,CAAExD,KAAMhC,KAEjB,MACI6c,WAAW,SAAE5Z,IACbmH,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,sBAChBC,cAAe,UAAUtH,EAASuH,WAIpC,KAAEzH,SAAe0C,KAAMqG,KACzB,mBACAiU,EACA1V,GAGJ7E,EAAS,CACLxD,KAAM/B,GACNgC,QAASc,IAGf,MAAO5B,GACLqE,EAAS,CACLxD,KAAM9B,GACN+B,QACId,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAK4H,OAChCxJ,EAAMuJ,SAAS3H,KAAK4H,OACpBxJ,EAAMwE,YGLfqa,CAASD,KAgBkBha,SAAA,CAC5BM,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,OAAMrO,SAAA,CAC1BC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,SACZC,eAACuI,KAAKM,QAAO,CACX7M,KAAK,OACLkN,YAAY,kBACZF,MAAOjI,EACPkI,SAAWxG,GAAMkM,EAAQlM,EAAEC,OAAOsG,OAClCI,UAAQ,OAIZ/I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,QAAOrO,SAAA,CAC3BC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,kBACZC,eAACuI,KAAKM,QAAO,CACX7M,KAAK,QACLkN,YAAY,cACZF,MAAOjD,EACPkD,SAAWxG,GAAMgF,EAAShF,EAAEC,OAAOsG,OACnCI,UAAQ,OAIZ/I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,QAAOrO,SAAA,CAC3BC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,iBACZC,eAACuI,KAAKM,QAAO,CACX7M,KAAK,OACLkN,YAAY,qBACZF,MAAO8P,EACP7P,SAAWxG,GAAMsW,EAAStW,EAAEC,OAAOsG,OACnCI,UAAQ,OAIZ/I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,UAASrO,SAAA,CAC7BC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,aACZC,eAACuI,KAAKM,QAAO,CACX7M,KAAK,OACLkN,YAAY,iBACZF,MAAOgQ,EACP/P,SAAWxG,GAAMwW,EAAWxW,EAAEC,OAAOsG,OACrCI,UAAQ,OAIZ/I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,gBAAerO,SAAA,CACnCC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,mBACZC,eAACuI,KAAKM,QAAO,CACX/H,GAAG,WACHmZ,KAAM,EACN/Q,YAAY,uBACZF,MAAOkQ,EACPjQ,SAAWxG,GAAM0W,EAAiB1W,EAAEC,OAAOsG,OAC3CI,UAAQ,OAIZ/I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,SAAQrO,SAAA,CAC5BC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,YACZM,gBAACkI,KAAKM,QAAO,CACX/H,GAAG,SACHkI,MAAOoQ,EACPnQ,SAAWxG,GAAM4W,EAAU5W,EAAEC,OAAOsG,OAAOjJ,SAAA,CAE3CC,eAAA,UAAQgJ,MAAM,QAAOjJ,SAAC,UACtBC,eAAA,UAAQgJ,MAAM,QAAOjJ,SAAC,gBAI1BM,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,SAAQrO,SAAA,CAC5BC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,mBACZC,eAACuI,KAAK2R,KAAI,CACRjR,SAAWxG,GAAM8W,EAAU9W,EAAEC,OAAOmT,MAAM,IAC1CsE,OAAmB,UAAXf,EAAqB,UAAY,UACzChQ,UAAQ,OAIZ/I,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,gBAAerO,SAAA,CACnCC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,mBACZM,gBAACkI,KAAKM,QAAO,CACX/H,GAAG,SACHkI,MAAO4Q,EACP3Q,SAAWxG,GAAMoX,EAAiBpX,EAAEC,OAAOsG,OAAOjJ,SAAA,CAElDC,eAAA,UAAQgJ,MAAM,aAAYjJ,SAAC,eAC3BC,eAAA,UAAQgJ,MAAM,QAAOjJ,SAAC,aAEL,eAAlB6Z,GACC5Z,eAAA,SAAOI,UAAU,aAAYL,SAAC,2DAMlCM,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,eAAcrO,SAAA,CAClCC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,+BACZC,eAACuI,KAAK2R,KAAI,CACRjR,SAAWxG,GAAMgX,EAAgBhX,EAAEC,OAAOmT,MAAM,IAChDsE,OAAO,UACP/Q,UAAQ,OAIZpJ,eAACuI,KAAKI,MAAK,CAACyF,UAAU,YAAWrO,SAC/BC,eAACuI,KAAK6R,MAAK,CACTpe,KAAK,WACLqe,MAAM,4EACNC,QAASZ,EACTzQ,SAAWxG,GAAMkX,EAAalX,EAAEC,OAAO4X,SACvClR,UAAQ,MAIZpJ,eAACmF,KAAM,CACLrF,QAAQ,UACR9D,KAAK,SACLoP,SAAUlQ,IAAYwe,EAAU3Z,SAE/B7E,EACCmF,gBAAAiI,YAAA,CAAAvI,SAAA,CACEC,eAAC8C,KAAO,CACNhC,GAAG,OACHiC,UAAU,SACVsI,KAAK,KACLC,KAAK,SACLC,cAAY,SAEb,oBAED,yBCjGHgP,OAtFf,SAAuB1a,GAAe,IAAd,QAAEsB,GAAStB,EACjC,MAAML,EAAWkC,cAEXmV,EAAYlV,aAAYjG,GAASA,EAAMmb,aACvC,SAAE5Z,GAAa4Z,EAEf2D,EAAiB7Y,aAAYjG,GAASA,EAAM8e,kBAC5C,QAAEtf,EAAO,MAAEC,EAAK,WAAEoD,GAAeic,EAEjCnc,EAAasD,aAAYjG,GAASA,EAAM2C,cACtCjD,QAASqf,GAAmBpc,EAEpCuD,qBAAU,KAEH3E,GAAaA,EAASmQ,SACzBjM,EAAQ0D,KAAK,UAGfrF,EAASoX,MAEL6D,IACFjb,EAAS,CAAExD,K5CgHgB,sB4C/G3BwD,EAASoX,SAEV,CAACpX,EAAU2B,EAASlE,EAAUwd,IAEjC,MAAMC,EAAkBpb,IAClB8I,OAAOuS,QAAQ,8CACjBnb,EJmBoBF,IAAOC,MAAOC,EAAU4E,KAC9C,IACI5E,EAAS,CAAExD,KAAM5B,KAEjB,MACIyc,WAAW,SAAE5Z,IACbmH,IAEEC,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUtH,EAASuH,WAIpC,KAAEzH,SAAe0C,KAAMqR,IACzB,oBAAoBxR,KACpB,GACA+E,GAGJ7E,EAAS,CACLxD,KAAM3B,GACN4B,QAASc,IAGf,MAAO5B,GACLqE,EAAS,CACLxD,KAAM1B,GACN2B,QACId,EAAMuJ,UAAYvJ,EAAMuJ,SAAS3H,KAAK4H,OAChCxJ,EAAMuJ,SAAS3H,KAAK4H,OACpBxJ,EAAMwE,YInDbib,CAAUtb,KAIvB,OACEe,gBAACgF,KAAS,CAAAtF,SAAA,CACRC,eAACgD,KAAG,CAAC5C,UAAU,qBAAoBL,SACjCC,eAACsD,KAAG,CAAAvD,SACFC,eAAA,MAAII,UAAU,OAAML,SAAC,iCAIxB7E,EACC8E,eAAC8C,KAAO,CAACC,UAAU,SAASuI,KAAK,SAAQvL,SACvCC,eAAA,QAAMI,UAAU,UAASL,SAAC,iBAE1B5E,EACF6E,eAACC,KAAK,CAACH,QAAQ,SAAQC,SAAE5E,IAEzBkF,gBAACmU,KAAK,CAACC,SAAO,EAACC,UAAQ,EAACmG,OAAK,EAACC,YAAU,EAAC1a,UAAU,WAAUL,SAAA,CAC3DC,eAAA,SAAAD,SACEM,gBAAA,MAAAN,SAAA,CACEC,eAAA,MAAAD,SAAI,OACJC,eAAA,MAAAD,SAAI,aACJC,eAAA,MAAAD,SAAI,eACJC,eAAA,MAAAD,SAAI,UACJC,eAAA,MAAAD,SAAI,UACJC,eAAA,MAAAD,SAAI,cACJC,eAAA,cAGJA,eAAA,SAAAD,SACGxB,EAAW6E,KAAIhF,GACdiC,gBAAA,MAAAN,SAAA,CACEC,eAAA,MAAAD,SAAK3B,EAAGkB,KACRU,eAAA,MAAAD,SAAK3B,EAAG4Z,WACRhY,eAAA,MAAAD,SAAK3B,EAAG2C,OACRf,eAAA,MAAAD,SAAIC,eAAA,KAAG4Y,KAAM,UAAUxa,EAAG2H,QAAQhG,SAAE3B,EAAG2H,UACvC/F,eAAA,MAAAD,SAAIC,eAAA,KAAG4Y,KAAM,OAAOxa,EAAGoN,eAAezL,SAAE3B,EAAGoN,iBAC3CxL,eAAA,MAAAD,SAAK,IAAItB,KAAKL,EAAG2c,YAAYC,uBAC7Bhb,eAAA,MAAAD,SACEC,eAACmF,KAAM,CACLrF,QAAQ,UACRM,UAAU,SACVgF,QAASA,IAAMsV,EAAetc,EAAGkB,IAAIS,SACtC,gBAZI3B,EAAGkB,e,iBCmDX2b,OAjHf,WAOE,OACE5a,gBAACgF,KAAS,CAACjF,UAAU,iBAAgBL,SAAA,CACnCC,eAACgD,KAAG,CAAC5C,UAAU,OAAML,SACnBM,gBAACiD,KAAG,CAACG,GAAI,EAAGrD,UAAU,sBAAqBL,SAAA,CACzCC,eAAA,MAAII,UAAU,iBAAgBL,SAAC,gBAC/BC,eAAA,KAAGI,UAAU,kBAAiBL,SAAC,6DAMnCM,gBAAC2C,KAAG,CAAC5C,UAAU,OAAML,SAAA,CACnBC,eAACsD,KAAG,CAACG,GAAI,EAAGrD,UAAU,OAAML,SAC1BC,eAACG,KAAI,CAACC,UAAU,2BAA0BL,SACxCM,gBAACF,KAAKG,KAAI,CAACF,UAAU,MAAKL,SAAA,CACxBC,eAAA,OAAKI,UAAU,qCAAoCL,SACjDC,eAACkb,KAAO,CAAC9a,UAAU,eAAeiL,KAAM,OAE1CrL,eAAA,MAAII,UAAU,OAAML,SAAC,oBACrBC,eAACmb,KAAS,CAACrb,QAAQ,QAAOC,SAzBrB,CACf,CAAEqb,OAAQ,gBAAiBpf,KAAM,SACjC,CAAEof,OAAQ,gBAAiBpf,KAAM,YACjC,CAAEof,OAAQ,gBAAiBpf,KAAM,UAuBXoH,KAAI,CAACiY,EAASC,IACtBtb,eAACmb,KAAU5N,KAAI,CAAanN,UAAU,gBAAeL,SACnDM,gBAAA,OAAKD,UAAU,4BAA2BL,SAAA,CACtB,aAAjBsb,EAAQrf,KACPgE,eAACub,KAAU,CAACnb,UAAU,oBAAoBiL,KAAM,KAEhDrL,eAACkb,KAAO,CAAC9a,UAAU,oBAAoBiL,KAAM,KAE/ChL,gBAAA,OAAAN,SAAA,CACEC,eAAA,MAAII,UAAU,OAAML,SAAEsb,EAAQD,SAC9Bpb,eAAA,SAAOI,UAAU,aAAYL,SACT,aAAjBsb,EAAQrf,KAAsB,qBAAuB,eAG1DgE,eAACmF,KAAM,CACLrF,QAAQ,OACR8Y,KAAM,OAAOyC,EAAQD,SACrBhb,UAAU,UAASL,SACpB,iBAjBgBub,cA4B/Btb,eAACsD,KAAG,CAACG,GAAI,EAAGrD,UAAU,OAAML,SAC1BC,eAACG,KAAI,CAACC,UAAU,2BAA0BL,SACxCM,gBAACF,KAAKG,KAAI,CAACF,UAAU,MAAKL,SAAA,CACxBC,eAAA,OAAKI,UAAU,qCAAoCL,SACjDC,eAACwb,KAAU,CAACpb,UAAU,eAAeiL,KAAM,OAE7CrL,eAAA,MAAII,UAAU,OAAML,SAAC,sBACrBM,gBAAA,OAAKD,UAAU,OAAML,SAAA,CACnBM,gBAAA,MAAID,UAAU,4BAA2BL,SAAA,CACvCC,eAACkb,KAAO,CAAC9a,UAAU,oBAAoBiL,KAAM,KAC7CrL,eAAA,QAAAD,SAAM,qBAERC,eAAA,KAAGI,UAAU,aAAYL,SAAC,2DAI5BM,gBAAA,OAAAN,SAAA,CACEM,gBAAA,MAAID,UAAU,iCAAgCL,SAAA,CAC5CC,eAACwb,KAAU,CAACpb,UAAU,oBAAoBiL,KAAM,KAChDrL,eAAA,QAAAD,SAAM,2BAERC,eAACmF,KAAM,CACLrF,QAAQ,UACR8Y,KAAK,6BACLxY,UAAU,QAAOL,SAClB,+BASXC,eAACgD,KAAG,CAAAjD,SACFC,eAACsD,KAAG,CAACG,GAAI,EAAGrD,UAAU,UAASL,SAC7BC,eAACG,KAAI,CAACC,UAAU,qBAAoBL,SAClCC,eAACG,KAAKG,KAAI,CAACF,UAAU,MAAKL,SACxBM,gBAAA,OAAKD,UAAU,4BAA2BL,SAAA,CACxCC,eAAA,OAAKI,UAAU,qCAAoCL,SACjDC,eAACyb,KAAO,CAACrb,UAAU,eAAeiL,KAAM,OAE1ChL,gBAAA,OAAAN,SAAA,CACEC,eAAA,MAAII,UAAU,OAAML,SAAC,oBACrBM,gBAAA,KAAGD,UAAU,OAAML,SAAA,CAACC,eAAA,UAAAD,SAAQ,qBAAyB,wBACrDM,gBAAA,KAAGD,UAAU,OAAML,SAAA,CAACC,eAAA,UAAAD,SAAQ,cAAkB,wBAC9CM,gBAAA,KAAGD,UAAU,OAAML,SAAA,CAACC,eAAA,UAAAD,SAAQ,YAAgB,2C,OCI/C2b,OAzGf,WACE,OACErb,gBAACgF,KAAS,CAACjF,UAAU,kBAAiBL,SAAA,CACpCC,eAACgD,KAAG,CAAC5C,UAAU,OAAML,SACnBM,gBAACiD,KAAG,CAACG,GAAI,EAAGrD,UAAU,sBAAqBL,SAAA,CACzCC,eAAA,MAAII,UAAU,iBAAgBL,SAAC,mBAC/BC,eAAA,KAAGI,UAAU,kBAAiBL,SAAC,0EAMnCM,gBAAC2C,KAAG,CAAC5C,UAAU,0BAAyBL,SAAA,CACtCC,eAACsD,KAAG,CAACG,GAAI,EAAGrD,UAAU,eAAcL,SAClCC,eAAA,OAAKI,UAAU,gDAA+CL,SAC5DC,eAAA,OACEU,IAAKib,GACLvP,IAAI,gBACJhM,UAAU,kBAIhBC,gBAACiD,KAAG,CAACG,GAAI,EAAE1D,SAAA,CACTC,eAAA,MAAII,UAAU,OAAML,SAAC,cACrBC,eAAA,KAAGI,UAAU,OAAML,SAAC,wQAKpBM,gBAAA,OAAKD,UAAU,iCAAgCL,SAAA,CAC7CC,eAAC4b,KAAa,CAACxb,UAAU,oBAAoBiL,KAAM,KACnDhL,gBAAA,OAAAN,SAAA,CACEC,eAAA,MAAII,UAAU,OAAML,SAAC,mBACrBC,eAAA,KAAGI,UAAU,kBAAiBL,SAAC,wCAGnCM,gBAAA,OAAKD,UAAU,iCAAgCL,SAAA,CAC7CC,eAAC6b,KAAU,CAACzb,UAAU,oBAAoBiL,KAAM,KAChDhL,gBAAA,OAAAN,SAAA,CACEC,eAAA,MAAII,UAAU,OAAML,SAAC,mBACrBC,eAAA,KAAGI,UAAU,kBAAiBL,SAAC,4CAGnCM,gBAAA,OAAKD,UAAU,4BAA2BL,SAAA,CACxCC,eAAC8b,KAAS,CAAC1b,UAAU,oBAAoBiL,KAAM,KAC/ChL,gBAAA,OAAAN,SAAA,CACEC,eAAA,MAAII,UAAU,OAAML,SAAC,iBACrBC,eAAA,KAAGI,UAAU,kBAAiBL,SAAC,0CAMvCC,eAACgD,KAAG,CAAC5C,UAAU,OAAML,SACnBC,eAACsD,KAAG,CAAClD,UAAU,cAAaL,SAC1BC,eAACG,KAAI,CAACC,UAAU,0BAAyBL,SACvCM,gBAACF,KAAKG,KAAI,CAAAP,SAAA,CACRC,eAAA,MAAII,UAAU,OAAML,SAAC,sBACrBM,gBAAC2C,KAAG,CAAC5C,UAAU,yBAAwBL,SAAA,CACrCC,eAACsD,KAAG,CAACE,GAAI,EAAGpD,UAAU,OAAML,SAC1BM,gBAAA,OAAKD,UAAU,cAAaL,SAAA,CAC1BC,eAAA,OAAKI,UAAU,+CAA8CL,SAC3DC,eAAA,OACEU,IAAI,kCACJ0L,IAAI,UACJhM,UAAU,gBAGdJ,eAAA,MAAAD,SAAI,gBACJC,eAAA,KAAGI,UAAU,aAAYL,SAAC,wCAG9BC,eAACsD,KAAG,CAACE,GAAI,EAAGpD,UAAU,OAAML,SAC1BM,gBAAA,OAAKD,UAAU,cAAaL,SAAA,CAC1BC,eAAA,OAAKI,UAAU,+CAA8CL,SAC3DC,eAAA,OACEU,IAAI,kCACJ0L,IAAI,aACJhM,UAAU,gBAGdJ,eAAA,MAAAD,SAAI,sBACJC,eAAA,KAAGI,UAAU,aAAYL,SAAC,+CASxCC,eAACgD,KAAG,CAAAjD,SACFC,eAACsD,KAAG,CAAClD,UAAU,cAAaL,SAC1BM,gBAAA,OAAKD,UAAU,eAAcL,SAAA,CAC3BC,eAAA,MAAII,UAAU,OAAML,SAAC,oBACrBM,gBAAA,KAAGuY,KAAK,6CAA6CxY,UAAU,+BAA8BL,SAAA,CAC3FC,eAAA,KAAGI,UAAU,qBAAuB,uCC+CnC2b,OA9If,WACE,MAAOhC,EAAUiC,GAAejY,mBAAS,CACvChD,KAAM,GACNkb,OAAQ,GACRC,SAAU,GACVC,KAAM,GACNC,OAAQ,GACRC,gBAAiB,KAGb7c,EAAWkC,cACXP,EAAUC,eACVE,EAAWoM,eAEXlP,EAAemD,aAAYjG,GAASA,EAAM8C,gBAC1C,QAAEtD,EAAO,MAAEC,EAAK,QAAEC,GAAYoD,GAE9B,SAAEvB,GAAa0E,aAAYjG,GAASA,EAAMmb,WAAa,KAGvDyF,EAAgB7Z,IACpBuZ,EAAY,IACPjC,EACH,CAACtX,EAAEC,OAAOpD,IAAKmD,EAAEC,OAAOsG,SAgD5B,OA3CApH,qBAAU,KACR,GAAIN,EAASC,OAAQ,CACnB,MACMiV,EADS,IAAI+F,gBAAgBjb,EAASC,QACnB7B,IAAI,WACzB8W,GACFwF,GAAYQ,IAAI,IACXA,EACHH,gBAAiB,yBAAyB7F,WAI/C,CAAClV,IAGJM,qBAAU,KACR,GAAK3E,GAKL,GAAI7B,EAAS,CACX,MAAMqhB,EAAQjF,YAAW,KACvBhY,EAAS,CAAExD,KAAMhB,KACjBmG,EAAQ0D,KAAK,OACZ,KACH,MAAO,IAAM8S,aAAa8E,SAT1Btb,EAAQ0D,KAAK,6BAA+BvD,EAASC,UAWtD,CAAC/B,EAAU2B,EAASlE,EAAU7B,EAASkG,EAASC,SAiBjDvB,eAACqF,KAAS,CAAAtF,SACRC,eAACgD,KAAG,CAAC5C,UAAU,4BAA2BL,SACxCM,gBAACiD,KAAG,CAAC4I,GAAI,GAAI1I,GAAI,EAAGC,GAAI,EAAE1D,SAAA,CACxBC,eAAA,MAAII,UAAU,mBAAkBL,SAAC,qBAEhC3E,GACC4E,eAACC,KAAK,CAACH,QAAQ,UAAUM,UAAU,cAAaL,SAAC,iDAKlD5E,GAAS6E,eAACC,KAAK,CAACH,QAAQ,SAAQC,SAAE5E,IAEnCkF,gBAACkI,KAAI,CAACC,SA5BS/F,ICzDUia,OD0D/Bja,EAAEgG,iBAEGxL,GAKLuC,GCjE+Bkd,EDiEH,IACvB3C,EACH/b,KAAMf,EAASqC,ICnE4BC,MAAOC,EAAU4E,KAC9D,IACI5E,EAAS,CAAExD,KAAMnB,KAEjB,MAAQgc,WAAW,SAAE5Z,IAAemH,IAEpC,IAAKnH,IAAaA,EAASuH,MACvB,MAAM,IAAImY,MAAM,2BAGpB,MAAMtY,EAAS,CACXC,QAAS,CACL,eAAgB,mBAChBC,cAAe,UAAUtH,EAASuH,UAKpCoY,EAAoB,IACnBF,EACHG,YAAY,IAAIpe,MAAOC,cACvB2V,OAAQ,YAGN,KAAEtX,SAAe0C,KAAMqG,KACzB,uBACA8W,EACAvY,GAQJ,OALA7E,EAAS,CACLxD,KAAMlB,GACNmB,QAASc,IAGNA,EAET,MAAO5B,GAAQ,IAAD2hB,EAAAC,EAAAC,EAAAC,EACZ,MAAMC,GAA6B,QAAdJ,EAAA3hB,EAAMuJ,gBAAQ,IAAAoY,GAAM,QAANC,EAAdD,EAAgB/f,YAAI,IAAAggB,OAAN,EAAdA,EAAsBpY,UACT,QADeqY,EAC7B7hB,EAAMuJ,gBAAQ,IAAAsY,GAAM,QAANC,EAAdD,EAAgBjgB,YAAI,IAAAkgB,OAAN,EAAdA,EAAsBtd,UACtBxE,EAAMwE,SACN,yBAOpB,MALAH,EAAS,CACLxD,KAAMjB,GACNkB,QAASihB,IAGP/hB,MDaRgG,EAAQ0D,KAAK,6BAA+BvD,EAASC,SAwBnBxB,SAAA,CAC3B,CAAC,OAAQ,SAAU,WAAY,OAAQ,UAAUqD,KAAK+Z,GACrD9c,gBAACkI,KAAKI,MAAK,CAAayF,UAAW+O,EAAMpd,SAAA,CACvCC,eAACuI,KAAKK,MAAK,CAAA7I,SACRod,EAAMC,OAAO,GAAGC,cAAgBF,EAAMxT,MAAM,GAAG2T,QAAQ,IAAK,OAE/Dtd,eAACuI,KAAKM,QAAO,CACX7M,KAAK,OACLgN,MAAO+Q,EAASoD,GAChBlU,SAAUqT,EACVlT,UAAQ,EACRF,YAAa,cAAciU,EAAMG,QAAQ,IAAK,WATjCH,KAcnB9c,gBAACkI,KAAKI,MAAK,CAACyF,UAAU,kBAAiBrO,SAAA,CACrCC,eAACuI,KAAKK,MAAK,CAAA7I,SAAC,oBACZC,eAACuI,KAAKM,QAAO,CACX/H,GAAG,WACHmZ,KAAM,EACNjR,MAAO+Q,EAASsC,gBAChBpT,SAAUqT,EACVlT,UAAQ,EACRF,YAAY,uCAIhBlJ,eAAA,OAAKI,UAAU,mBAAkBL,SAC/BC,eAACmF,KAAM,CACLrF,QAAQ,UACR9D,KAAK,SACLoP,SAAUlQ,EACVmQ,KAAK,KAAItL,SAER7E,EACCmF,gBAAAiI,YAAA,CAAAvI,SAAA,CACEC,eAAC8C,KAAO,CACNhC,GAAG,OACHiC,UAAU,SACVsI,KAAK,KACLC,KAAK,SACLC,cAAY,OACZnL,UAAU,SACV,mBAGF,8BEnELmd,OAzCHA,IAGRvd,eAAA,OAAAD,SACEM,gBAACmd,iBAAM,CAAAzd,SAAA,CACLC,eAACuM,GAAM,IACPvM,eAAC8W,GAAY,IACb9W,eAAA,OAAKI,UAAU,iBAAgBL,SAC7BM,gBAACod,KAAM,CAAA1d,SAAA,CACLC,eAAC0d,KAAK,CAACC,KAAK,IAAIC,UAAWC,GAAiBC,OAAK,IACjD9d,eAAC0d,KAAK,CAACC,KAAK,gBAAgBC,UAAW3I,GAAmB6I,OAAK,IAC/D9d,eAAC0d,KAAK,CAACC,KAAK,gBAAgBC,UAAWja,GAAoBma,OAAK,IAChE9d,eAAC0d,KAAK,CAACC,KAAK,uBAAuBC,UAAW9H,GAAmBgI,OAAK,IACtE9d,eAAC0d,KAAK,CAACC,KAAK,yBAAyBC,UAAWhS,GAAckS,OAAK,IACnE9d,eAAC0d,KAAK,CAACC,KAAK,kBAAkBC,UAAWnQ,GAAeqQ,OAAK,IAC7D9d,eAAC0d,KAAK,CAACC,KAAK,SAASC,UAAWG,GAAOD,OAAK,IAC5C9d,eAAC0d,KAAK,CAACC,KAAK,YAAYC,UAAWI,GAAUF,OAAK,IAClD9d,eAAC0d,KAAK,CAACC,KAAK,WAAWC,UAAWpN,GAAasN,OAAK,IACpD9d,eAAC0d,KAAK,CAACC,KAAK,mBAAmBC,UAAWlN,GAAmBoN,OAAK,IAClE9d,eAAC0d,KAAK,CAACC,KAAK,mBAAmBC,UAAWK,GAAuBH,OAAK,IACtE9d,eAAC0d,KAAK,CAACC,KAAK,uBAAuBC,UAAWxN,GAAiB0N,OAAK,IACpE9d,eAAC0d,KAAK,CAACC,KAAK,sBAAsBC,UAAWlP,GAAgBoP,OAAK,IAClE9d,eAAC0d,KAAK,CAACC,KAAK,kBAAkBC,UAAWxL,GAAwB0L,OAAK,IACtE9d,eAAC0d,KAAK,CAACC,KAAK,sBAAsBC,UAAW/K,GAAmBiL,OAAK,IACrE9d,eAAC0d,KAAK,CAACC,KAAK,eAAeC,UAAWlK,GAAgBoK,OAAK,IAE3D9d,eAAC0d,KAAK,CAACC,KAAK,aAAaC,UAAWpF,GAAesF,OAAK,IACxD9d,eAAC0d,KAAK,CAACC,KAAK,iBAAiBC,UAAW/E,GAAkBiF,OAAK,IAC/D9d,eAAC0d,KAAK,CAACC,KAAK,eAAeC,UAAWrD,GAAgBuD,OAAK,IAC3D9d,eAAC0d,KAAK,CAACC,KAAK,QAAQC,UAAW3C,GAAU6C,OAAK,IAC9C9d,eAAC0d,KAAK,CAACC,KAAK,SAASC,UAAWlC,GAAWoC,OAAK,IAChD9d,eAAC0d,KAAK,CAACC,KAAK,aAAaC,UAAW7B,GAAc+B,OAAK,IAEvD9d,eAAC0d,KAAK,CAACC,KAAK,GAAGC,UAAWM,GAAUJ,OAAK,c,OCzDrDK,IAASC,OACPpe,eAACqe,IAAQ,CAACpf,MAASA,GAAMc,SACvBC,eAACud,GAAG,MAENe,SAASC,eAAe,W","file":"static/js/main.41cc8d7d.chunk.js","sourcesContent":["// products list\nexport const PRODUCTS_LIST_REQUEST = \"PRODUCTS_LIST_REQUEST\" \nexport const PRODUCTS_LIST_SUCCESS = \"PRODUCTS_LIST_SUCCESS\"\nexport const PRODUCTS_LIST_FAIL = \"PRODUCTS_LIST_FAIL\"\n\n// product details\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\" \nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\"\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\"\n\n// create product\nexport const CREATE_PRODUCT_REQUEST = \"CREATE_PRODUCT_REQUEST\" \nexport const CREATE_PRODUCT_SUCCESS = \"CREATE_PRODUCT_SUCCESS\" \nexport const CREATE_PRODUCT_FAIL = \"CREATE_PRODUCT_FAIL\" \nexport const CREATE_PRODUCT_RESET = \"CREATE_PRODUCT_RESET\" \n\n// update product\nexport const UPDATE_PRODUCT_REQUEST = \"UPDATE_PRODUCT_REQUEST\" \nexport const UPDATE_PRODUCT_SUCCESS = \"UPDATE_PRODUCT_SUCCESS\" \nexport const UPDATE_PRODUCT_FAIL = \"UPDATE_PRODUCT_FAIL\" \nexport const UPDATE_PRODUCT_RESET = \"UPDATE_PRODUCT_RESET\" \n\n// delete product\nexport const DELETE_PRODUCT_REQUEST = \"DELETE_PRODUCT_REQUEST\" \nexport const DELETE_PRODUCT_SUCCESS = \"DELETE_PRODUCT_SUCCESS\" \nexport const DELETE_PRODUCT_FAIL = \"DELETE_PRODUCT_FAIL\" \nexport const DELETE_PRODUCT_RESET = \"DELETE_PRODUCT_RESET\" \n\n// check token validation\nexport const CHECK_TOKEN_VALID_REQUEST = \"CHECK_TOKEN_VALID_REQUEST\"\nexport const CHECK_TOKEN_VALID_SUCCESS = \"CHECK_TOKEN_VALID_SUCCESS\"\nexport const CHECK_TOKEN_VALID_FAIL = \"CHECK_TOKEN_VALID_FAIL\"\nexport const CHECK_TOKEN_VALID_RESET = \"CHECK_TOKEN_VALID_RESET\"\n\n// create card\nexport const CARD_CREATE_REQUEST = \"CARD_CREATE_REQUEST\" \nexport const CARD_CREATE_SUCCESS = \"CARD_CREATE_SUCCESS\"\nexport const CARD_CREATE_FAIL = \"CARD_CREATE_FAIL\"\nexport const CARD_CREATE_RESET = \"CARD_CREATE_RESET\"\n\n// charge card\nexport const CHARGE_CARD_REQUEST = \"CHARGE_CARD_REQUEST\" \nexport const CHARGE_CARD_SUCCESS = \"CHARGE_CARD_SUCCESS\"\nexport const CHARGE_CARD_FAIL = \"CHARGE_CARD_FAIL\"\nexport const CHARGE_CARD_RESET = \"CHARGE_CARD_RESET\"\n\n// saved cards list\nexport const SAVED_CARDS_LIST_REQUEST = \"SAVED_CARDS_LIST_REQUEST\"\nexport const SAVED_CARDS_LIST_SUCCESS = \"SAVED_CARDS_LIST_SUCCESS\"\nexport const SAVED_CARDS_LIST_FAIL = \"SAVED_CARDS_LIST_FAIL\"\n\n// delete saved card\nexport const DELETE_SAVED_CARD_REQUEST = \"DELETE_SAVED_CARD_REQUEST\"\nexport const DELETE_SAVED_CARD_SUCCESS = \"DELETE_SAVED_CARD_SUCCESS\"\nexport const DELETE_SAVED_CARD_FAIL = \"DELETE_SAVED_CARD_FAIL\"\n\n// update saved card\nexport const UPDATE_STRIPE_CARD_REQUEST = \"UPDATE_STRIPE_CARD_REQUEST\"\nexport const UPDATE_STRIPE_CARD_SUCCESS = \"UPDATE_STRIPE_CARD_SUCCESS\"\nexport const UPDATE_STRIPE_CARD_FAIL = \"UPDATE_STRIPE_CARD_FAIL\"\nexport const UPDATE_STRIPE_CARD_RESET = \"UPDATE_STRIPE_CARD_RESET\"\n\n// user login/logout\nexport const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\nexport const USER_LOGOUT = \"USER_LOGOUT\"\n\n// user registration/signup\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\"\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\"\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\"\n\n// user info/details\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\"\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\"\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\"\n\n// user update details\nexport const UPDATE_USER_DETAILS_REQUEST = \"UPDATE_USER_DETAILS_REQUEST\"\nexport const UPDATE_USER_DETAILS_SUCCESS = \"UPDATE_USER_DETAILS_SUCCESS\"\nexport const UPDATE_USER_DETAILS_FAIL = \"UPDATE_USER_DETAILS_FAIL\"\nexport const UPDATE_USER_DETAILS_RESET = \"UPDATE_USER_DETAILS_RESET\"\n\n// delete user account\nexport const DELETE_USER_ACCOUNT_REQUEST = \"DELETE_USER_ACCOUNT_REQUEST\" \nexport const DELETE_USER_ACCOUNT_SUCCESS = \"DELETE_USER_ACCOUNT_SUCCESS\" \nexport const DELETE_USER_ACCOUNT_FAIL = \"DELETE_USER_ACCOUNT_FAIL\" \nexport const DELETE_USER_ACCOUNT_RESET = \"DELETE_USER_ACCOUNT_RESET\" \n\n// user all address\nexport const GET_USER_ALL_ADDRESSES_REQUEST = \"GET_USER_ALL_ADDRESSES_REQUEST\"\nexport const GET_USER_ALL_ADDRESSES_SUCCESS = \"GET_USER_ALL_ADDRESSES_SUCCESS\"\nexport const GET_USER_ALL_ADDRESSES_FAIL = \"GET_USER_ALL_ADDRESSES_FAIL\"\n\n// user single address details\nexport const GET_SINGLE_ADDRESS_REQUEST = \"GET_SINGLE_ADDRESS_REQUEST\"\nexport const GET_SINGLE_ADDRESS_SUCCESS = \"GET_SINGLE_ADDRESS_SUCCESS\"\nexport const GET_SINGLE_ADDRESS_FAIL = \"GET_SINGLE_ADDRESS_FAIL\"\nexport const GET_SINGLE_ADDRESS_RESET = \"GET_SINGLE_ADDRESS_RESET\"\n\n// create address\nexport const CREATE_USER_ADDRESS_REQUEST = \"CREATE_USER_ADDRESS_REQUEST\"\nexport const CREATE_USER_ADDRESS_SUCCESS = \"CREATE_USER_ADDRESS_SUCCESS\"\nexport const CREATE_USER_ADDRESS_FAIL = \"CREATE_USER_ADDRESS_FAIL\"\nexport const CREATE_USER_ADDRESS_RESET = \"CREATE_USER_ADDRESS_RESET\"\n\n// update address\nexport const UPDATE_USER_ADDRESS_REQUEST = \"UPDATE_USER_ADDRESS_REQUEST\"\nexport const UPDATE_USER_ADDRESS_SUCCESS = \"UPDATE_USER_ADDRESS_SUCCESS\"\nexport const UPDATE_USER_ADDRESS_FAIL = \"UPDATE_USER_ADDRESS_FAIL\"\nexport const UPDATE_USER_ADDRESS_RESET = \"UPDATE_USER_ADDRESS_RESET\"\n\n// delete user address\nexport const DELETE_USER_ADDRESS_REQUEST = \"DELETE_USER_ADDRESS_REQUEST\"\nexport const DELETE_USER_ADDRESS_SUCCESS = \"DELETE_USER_ADDRESS_SUCCESS\"\nexport const DELETE_USER_ADDRESS_FAIL = \"DELETE_USER_ADDRESS_FAIL\"\nexport const DELETE_USER_ADDRESS_RESET = \"DELETE_USER_ADDRESS_RESET\"\n\n// all orders list\nexport const GET_ALL_ORDERS_REQUEST = \"GET_ALL_ORDERS_REQUEST\"\nexport const GET_ALL_ORDERS_SUCCESS = \"GET_ALL_ORDERS_SUCCESS\"\nexport const GET_ALL_ORDERS_FAIL = \"GET_ALL_ORDERS_FAIL\"\n\n// change order delivery status\nexport const CHANGE_DELIVERY_STATUS_REQUEST = \"CHANGE_DELIVERY_STATUS_REQUEST\"\nexport const CHANGE_DELIVERY_STATUS_SUCCESS = \"CHANGE_DELIVERY_STATUS_SUCCESS\"\nexport const CHANGE_DELIVERY_STATUS_FAIL = \"CHANGE_DELIVERY_STATUS_FAIL\"\nexport const CHANGE_DELIVERY_STATUS_RESET = \"CHANGE_DELIVERY_STATUS_RESET\"\n\n// Ads\nexport const AD_SUBMISSION_REQUEST = \"AD_SUBMISSION_REQUEST\"\nexport const AD_SUBMISSION_SUCCESS = \"AD_SUBMISSION_SUCCESS\"\nexport const AD_SUBMISSION_FAIL = \"AD_SUBMISSION_FAIL\"\nexport const AD_SUBMISSION_RESET = \"AD_SUBMISSION_RESET\"\n\nexport const AD_APPROVAL_REQUEST = \"AD_APPROVAL_REQUEST\"\nexport const AD_APPROVAL_SUCCESS = \"AD_APPROVAL_SUCCESS\"\nexport const AD_APPROVAL_FAIL = \"AD_APPROVAL_FAIL\"\nexport const AD_APPROVAL_RESET = \"AD_APPROVAL_RESET\"\n\n// Pending Ads List\nexport const PENDING_ADS_REQUEST = \"PENDING_ADS_REQUEST\"\nexport const PENDING_ADS_SUCCESS = \"PENDING_ADS_SUCCESS\"\nexport const PENDING_ADS_FAIL = \"PENDING_ADS_FAIL\"\n\n// Active Ads\nexport const ACTIVE_ADS_REQUEST = \"ACTIVE_ADS_REQUEST\"\nexport const ACTIVE_ADS_SUCCESS = \"ACTIVE_ADS_SUCCESS\"\nexport const ACTIVE_ADS_FAIL = \"ACTIVE_ADS_FAIL\"\n\n// Orders\nexport const ORDER_REQUEST_REQUEST = \"ORDER_REQUEST_REQUEST\"\nexport const ORDER_REQUEST_SUCCESS = \"ORDER_REQUEST_SUCCESS\"\nexport const ORDER_REQUEST_FAIL = \"ORDER_REQUEST_FAIL\"\nexport const ORDER_REQUEST_RESET = \"ORDER_REQUEST_RESET\"","import {\n    ORDER_REQUEST_REQUEST,\n    ORDER_REQUEST_SUCCESS,\n    ORDER_REQUEST_FAIL,\n    ORDER_REQUEST_RESET\n} from '../constants'\n\nconst initialState = {\n    loading: false,\n    error: null,\n    success: false,\n    order: null,\n    lastSubmitted: null\n}\n\nexport const orderRequestReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ORDER_REQUEST_REQUEST:\n            return { \n                ...state,\n                loading: true,\n                error: null,\n                success: false\n            }\n            \n        case ORDER_REQUEST_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                order: action.payload,\n                lastSubmitted: new Date().toISOString(),\n                error: null\n            }\n            \n        case ORDER_REQUEST_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload,\n                success: false\n            }\n            \n        case ORDER_REQUEST_RESET:\n            return initialState\n            \n        default:\n            return state\n    }\n}","import { combineReducers } from \"redux\";\nimport {\n    productsListReducer,\n    productDetailsReducer,\n    createProductReducer,\n    updateProductReducer,\n    deleteProductReducer,\n    changeDeliveryStatusReducer,\n} from \"./productReducers\";\n\nimport {\n    createCardReducer,\n    chargeCardReducer,\n    savedCardsListReducer,\n    deleteSavedCardReducer,\n    updateStripeCardtReducer\n} from \"./cardReducers\";\n\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userDetailsUpdateReducer,\n    deleteUserAccountReducer,\n    checkTokenValidationReducer,\n    getSingleAddressReducer,\n    getAllAddressesOfUserReducer,\n    createUserAddressReducer,\n    updateUserAddressReducer,\n    deleteUserAddressReducer,\n    getAllOrdersReducer,\n} from \"./userReducers\";\n\n// Import the new ad reducers\nimport {\n    adSubmissionReducer,\n    adApprovalReducer,\n    activeAdsListReducer,\n    pendingAdsListReducer\n} from \"./adReducers\";\n\nimport { orderRequestReducer } from './orderReducers'\n\nconst allReducers = combineReducers({\n    productsListReducer,\n    productDetailsReducer,\n    createProductReducer,\n    updateProductReducer,\n    deleteProductReducer,\n    createCardReducer,\n    chargeCardReducer,\n    savedCardsListReducer,\n    updateStripeCardtReducer,\n    deleteSavedCardReducer,\n    userLoginReducer,\n    userRegisterReducer,    \n    getSingleAddressReducer,\n    getAllAddressesOfUserReducer,\n    createUserAddressReducer,\n    updateUserAddressReducer,\n    deleteUserAddressReducer,\n    getAllOrdersReducer,\n    changeDeliveryStatusReducer,\n    checkTokenValidationReducer,\n    userDetailsReducer,\n    userDetailsUpdateReducer,\n    deleteUserAccountReducer,\n    \n    // Add the new ad reducers\n    adSubmission: adSubmissionReducer, // Changed from adSubmissionReducer\n    adApproval: adApprovalReducer,\n    activeAds: activeAdsListReducer,\n    pendingAds: pendingAdsListReducer,\n\n    orderRequest: orderRequestReducer,\n})\n\nexport default allReducers;","import {\n    PRODUCTS_LIST_REQUEST,\n    PRODUCTS_LIST_SUCCESS,\n    PRODUCTS_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    CREATE_PRODUCT_REQUEST,\n    CREATE_PRODUCT_SUCCESS,\n    CREATE_PRODUCT_FAIL,\n    CREATE_PRODUCT_RESET,\n\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_RESET,\n\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    DELETE_PRODUCT_RESET,\n\n    CHANGE_DELIVERY_STATUS_REQUEST,\n    CHANGE_DELIVERY_STATUS_SUCCESS,\n    CHANGE_DELIVERY_STATUS_FAIL,\n    CHANGE_DELIVERY_STATUS_RESET,\n\n\n} from '../constants/index'\n\n\n// products list\nexport const productsListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCTS_LIST_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                products: [],   // always pass the object during the request\n                error: \"\"\n            }\n        case PRODUCTS_LIST_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                products: action.payload,\n                error: \"\"\n            }\n        case PRODUCTS_LIST_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n\n// product details\nexport const productDetailsReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                product: {},        // always pass the object during the request\n                error: \"\"\n            }\n        case PRODUCT_DETAILS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                product: action.payload,\n                error: \"\"\n            }\n        case PRODUCT_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// create product reducer\nexport const createProductReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case CREATE_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                product: {},\n                success: false,\n                error: \"\"\n            }\n        case CREATE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                product: action.payload,\n                error: \"\"\n            }\n        case CREATE_PRODUCT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                product: {},\n                error: action.payload\n            }\n        case CREATE_PRODUCT_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                product: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// update product reducer\nexport const updateProductReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case UPDATE_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                product: {},\n                success: false,\n                error: \"\"\n            }\n        case UPDATE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                product: action.payload,\n                error: \"\"\n            }\n        case UPDATE_PRODUCT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                product: {},\n                error: action.payload\n            }\n        case UPDATE_PRODUCT_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                product: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n\n// delete product reducer\nexport const deleteProductReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DELETE_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case DELETE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case DELETE_PRODUCT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case DELETE_PRODUCT_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// change order delivery status reducer\nexport const changeDeliveryStatusReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CHANGE_DELIVERY_STATUS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case CHANGE_DELIVERY_STATUS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case CHANGE_DELIVERY_STATUS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case CHANGE_DELIVERY_STATUS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}","import {\n    CARD_CREATE_REQUEST,\n    CARD_CREATE_SUCCESS,\n    CARD_CREATE_FAIL,\n    CARD_CREATE_RESET,\n\n    CHARGE_CARD_REQUEST,\n    CHARGE_CARD_SUCCESS,\n    CHARGE_CARD_FAIL,\n    CHARGE_CARD_RESET,\n\n    SAVED_CARDS_LIST_REQUEST,\n    SAVED_CARDS_LIST_SUCCESS,\n    SAVED_CARDS_LIST_FAIL,\n\n    UPDATE_STRIPE_CARD_REQUEST,\n    UPDATE_STRIPE_CARD_SUCCESS,\n    UPDATE_STRIPE_CARD_FAIL,\n    UPDATE_STRIPE_CARD_RESET,\n\n    DELETE_SAVED_CARD_REQUEST,\n    DELETE_SAVED_CARD_SUCCESS,\n    DELETE_SAVED_CARD_FAIL,\n\n} from '../constants/index'\n\n\n// create card reducer\nexport const createCardReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CARD_CREATE_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                cardData: {},\n                success: false,\n                error: \"\"\n            }\n        case CARD_CREATE_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                cardData: action.payload,\n                error: \"\"\n            }\n        case CARD_CREATE_FAIL:\n            return {\n                ...state,\n                loading: false,\n                cardData: {},\n                success: false,\n                error: action.payload\n            }\n        case CARD_CREATE_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                cardData: {},\n                error: \"\",\n            }\n        default:\n            return state\n    }\n}\n\n// charge card reducer\nexport const chargeCardReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CHARGE_CARD_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case CHARGE_CARD_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case CHARGE_CARD_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case CHARGE_CARD_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// saved cards list reducer\nexport const savedCardsListReducer = (state = {stripeCards: []}, action) => {\n    switch (action.type) {\n        case SAVED_CARDS_LIST_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case SAVED_CARDS_LIST_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                stripeCards: action.payload,\n                error: \"\"\n            }\n        case SAVED_CARDS_LIST_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// update stripe card reducer\nexport const updateStripeCardtReducer = (state = {}, action) => {\n    switch (action.type) {\n        case UPDATE_STRIPE_CARD_REQUEST:\n            return {\n                loading: true,\n                success: false,\n                stripeCard: {},\n                error: \"\",\n            }\n        case UPDATE_STRIPE_CARD_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                stripeCard: action.payload,\n                error: \"\",\n            }\n        case UPDATE_STRIPE_CARD_FAIL:\n            return {\n                loading: false,\n                success: false,\n                stripeCard: {},\n                error: action.payload\n            }\n        case UPDATE_STRIPE_CARD_RESET:\n            return {\n                loading: false,\n                success: false,\n                stripeCard: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n\n// delete saved card reducer\nexport const deleteSavedCardReducer = (state = {data: {}}, action) => {\n    switch (action.type) {\n        case DELETE_SAVED_CARD_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                error: \"\"\n            }\n        case DELETE_SAVED_CARD_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                data: action.payload,\n                error: \"\"\n            }\n        case DELETE_SAVED_CARD_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n\n    UPDATE_USER_DETAILS_REQUEST,\n    UPDATE_USER_DETAILS_SUCCESS,\n    UPDATE_USER_DETAILS_FAIL,\n    UPDATE_USER_DETAILS_RESET,\n\n    DELETE_USER_ACCOUNT_REQUEST,\n    DELETE_USER_ACCOUNT_SUCCESS,\n    DELETE_USER_ACCOUNT_FAIL,\n    DELETE_USER_ACCOUNT_RESET,\n\n    GET_USER_ALL_ADDRESSES_REQUEST,\n    GET_USER_ALL_ADDRESSES_SUCCESS,\n    GET_USER_ALL_ADDRESSES_FAIL,\n\n    GET_SINGLE_ADDRESS_REQUEST,\n    GET_SINGLE_ADDRESS_SUCCESS,\n    GET_SINGLE_ADDRESS_FAIL,\n    GET_SINGLE_ADDRESS_RESET,\n\n    CREATE_USER_ADDRESS_REQUEST,\n    CREATE_USER_ADDRESS_SUCCESS,\n    CREATE_USER_ADDRESS_FAIL,\n    CREATE_USER_ADDRESS_RESET,\n\n    UPDATE_USER_ADDRESS_REQUEST,\n    UPDATE_USER_ADDRESS_SUCCESS,\n    UPDATE_USER_ADDRESS_FAIL,\n    UPDATE_USER_ADDRESS_RESET,\n\n    DELETE_USER_ADDRESS_REQUEST,\n    DELETE_USER_ADDRESS_SUCCESS,\n    DELETE_USER_ADDRESS_FAIL,\n    DELETE_USER_ADDRESS_RESET,\n\n    CHECK_TOKEN_VALID_REQUEST,\n    CHECK_TOKEN_VALID_SUCCESS,\n    CHECK_TOKEN_VALID_FAIL,\n    CHECK_TOKEN_VALID_RESET,\n\n    GET_ALL_ORDERS_REQUEST,\n    GET_ALL_ORDERS_SUCCESS,\n    GET_ALL_ORDERS_FAIL,\n\n} from '../constants/index'\n\n\n// Login\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case USER_LOGIN_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                userInfo: action.payload\n            }\n        case USER_LOGIN_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n// Register\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case USER_REGISTER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                userInfo: action.payload\n            }\n        case USER_REGISTER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\n// user details reducer\nexport const userDetailsReducer = (state = {}, action) => {\n    switch(action.type) {\n        case USER_DETAILS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                user: {},\n                error: \"\"\n            }\n        case USER_DETAILS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                user: action.payload,\n                error: \"\"\n            }\n        case USER_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                user: {},\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// user details update reducer\nexport const userDetailsUpdateReducer = (state = {}, action) => {\n    switch(action.type) {\n        case UPDATE_USER_DETAILS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                user: {},\n                success: false,\n                error: \"\"\n            }\n        case UPDATE_USER_DETAILS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                user: action.payload,\n                error: \"\"\n            }\n        case UPDATE_USER_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                user: {},\n                error: action.payload\n            }\n        case UPDATE_USER_DETAILS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                user: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// delete user account reducer\nexport const deleteUserAccountReducer = (state = {}, action) => {\n    switch(action.type) {\n        case DELETE_USER_ACCOUNT_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case DELETE_USER_ACCOUNT_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case DELETE_USER_ACCOUNT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case DELETE_USER_ACCOUNT_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// check token validation reducer\nexport const checkTokenValidationReducer = (state = {}, action) => {\n    switch(action.type) {\n        case CHECK_TOKEN_VALID_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                valid: false,\n                error: \"\"\n            }\n        case CHECK_TOKEN_VALID_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                valid: true,\n                error: \"\"\n            }\n        case CHECK_TOKEN_VALID_FAIL:\n            return {\n                ...state,\n                loading: false,\n                valid: false,\n                error: action.payload\n            }\n        case CHECK_TOKEN_VALID_RESET:\n            return {\n                ...state,\n                loading: false,\n                valid: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n\n\n// get all addresses of user reducer\nexport const getAllAddressesOfUserReducer = (state = {}, action) => {\n    switch(action.type) {\n        case GET_USER_ALL_ADDRESSES_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                addresses: [],\n                success: false,\n                error: \"\"\n            }\n        case GET_USER_ALL_ADDRESSES_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                addresses: action.payload,\n                success: true,\n                error: \"\"\n            }\n        case GET_USER_ALL_ADDRESSES_FAIL:\n            return {\n                ...state,\n                loading: false,\n                addresses: [],\n                success: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// get single address reducer\nexport const getSingleAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case GET_SINGLE_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                address: {},\n                success: false,\n                error: \"\"\n            }\n        case GET_SINGLE_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                address: action.payload,\n                success: true,\n                error: \"\"\n            }\n        case GET_SINGLE_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                address: {},\n                success: false,\n                error: action.payload\n            }\n        case GET_SINGLE_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                address: {},\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// create user address\nexport const createUserAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case CREATE_USER_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                address: {},\n                success: false,\n                error: \"\"\n            }\n        case CREATE_USER_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                address: action.payload,\n                success: true,\n                error: \"\"\n            }\n        case CREATE_USER_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                address: {},\n                error: action.payload\n            }\n        case CREATE_USER_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                address: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// update user address\nexport const updateUserAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case UPDATE_USER_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case UPDATE_USER_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case UPDATE_USER_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case UPDATE_USER_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// delete user address reducer\nexport const deleteUserAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case DELETE_USER_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case DELETE_USER_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case DELETE_USER_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case DELETE_USER_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// get all orders reducer\nexport const getAllOrdersReducer = (state = {orders: []}, action) => {\n    switch(action.type) {\n        case GET_ALL_ORDERS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                orders: [],\n                error: \"\"\n            }\n        case GET_ALL_ORDERS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                orders: action.payload,\n                error: \"\"\n            }\n        case GET_ALL_ORDERS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                orders: [],\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n","import {\n    AD_SUBMISSION_REQUEST,\n    AD_SUBMISSION_SUCCESS,\n    AD_SUBMISSION_FAIL,\n    AD_SUBMISSION_RESET,\n    AD_APPROVAL_REQUEST,\n    AD_APPROVAL_SUCCESS,\n    AD_APPROVAL_FAIL,\n    ACTIVE_ADS_REQUEST,\n    ACTIVE_ADS_SUCCESS,\n    ACTIVE_ADS_FAIL,\n    PENDING_ADS_REQUEST,\n    PENDING_ADS_SUCCESS,\n    PENDING_ADS_FAIL\n} from '../constants'\n\nexport const adSubmissionReducer = (state = {\n    loading: false,\n    error: null,\n    success: false,\n    ad: null\n}, action) => {\n    switch (action.type) {\n        case AD_SUBMISSION_REQUEST:\n            return { ...state, loading: true, error: null }\n        case AD_SUBMISSION_SUCCESS:\n            return { ...state, loading: false, success: true, ad: action.payload }\n        case AD_SUBMISSION_FAIL:\n            return { ...state, loading: false, error: action.payload }\n        case AD_SUBMISSION_RESET:\n            return { loading: false, error: null, success: false, ad: null }\n        default:\n            return state\n    }\n}\n\nexport const adApprovalReducer = (state = {}, action) => {\n    switch (action.type) {\n        case AD_APPROVAL_REQUEST:\n            return { loading: true }\n        case AD_APPROVAL_SUCCESS:\n            return { loading: false, success: true }\n        case AD_APPROVAL_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const activeAdsListReducer = (state = { activeAds: [] }, action) => {\n    switch (action.type) {\n        case ACTIVE_ADS_REQUEST:\n            return { loading: true, activeAds: [] }\n        case ACTIVE_ADS_SUCCESS:\n            return { loading: false, activeAds: action.payload }\n        case ACTIVE_ADS_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const pendingAdsListReducer = (state = { pendingAds: [] }, action) => {\n    switch (action.type) {\n      case PENDING_ADS_REQUEST:\n        return { loading: true, pendingAds: [] }\n      case PENDING_ADS_SUCCESS:\n        return { loading: false, pendingAds: action.payload }\n      case PENDING_ADS_FAIL:\n        return { loading: false, error: action.payload }\n      default:\n        return state\n    }\n}","import {createStore, applyMiddleware} from 'redux'\nimport { composeWithDevTools} from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport allReducers from './reducers/index'\n\nconst middleware = [thunk]\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null\n\nlet initialState = {\n    userLoginReducer: { userInfo: userInfoFromStorage }\n}\n\nconst store = createStore(allReducers, initialState, composeWithDevTools(applyMiddleware(...middleware)))\n\nexport default store","import {\n    PRODUCTS_LIST_REQUEST,\n    PRODUCTS_LIST_SUCCESS,\n    PRODUCTS_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    CREATE_PRODUCT_REQUEST,\n    CREATE_PRODUCT_SUCCESS,\n    CREATE_PRODUCT_FAIL,\n\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n\n    CHANGE_DELIVERY_STATUS_REQUEST,\n    CHANGE_DELIVERY_STATUS_SUCCESS,\n    CHANGE_DELIVERY_STATUS_FAIL,\n\n} from '../constants/index'\n\nimport axios from 'axios'\n\n\n// products list\nexport const getProductsList = () => async (dispatch) => {\n    try {\n        dispatch({\n            type: PRODUCTS_LIST_REQUEST\n        })\n\n        // call api\n        const { data } = await axios.get(\"/api/products/\")\n\n        dispatch({\n            type: PRODUCTS_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCTS_LIST_FAIL,\n            payload: error.message\n        })\n    }\n}\n\n\n// product details\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({\n            type: PRODUCT_DETAILS_REQUEST\n        })\n\n        // call api\n        const { data } = await axios.get(`/api/product/${id}/`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.message\n        })\n    }\n}\n\n\n// create product\nexport const createProduct = (product) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: CREATE_PRODUCT_REQUEST\n        })\n\n        // login reducer\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            \"/api/product-create/\",\n            product,\n            config\n        )\n\n        dispatch({\n            type: CREATE_PRODUCT_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: CREATE_PRODUCT_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n// delete product\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: DELETE_PRODUCT_REQUEST\n        })\n\n        // login reducer\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.delete(\n            `/api/product-delete/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n// update product\nexport const updateProduct = (id, product) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: UPDATE_PRODUCT_REQUEST\n        })\n\n        // login reducer\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.put(\n            `/api/product-update/${id}/`,\n            product,\n            config\n        )\n\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n// change ordered product delivery status\nexport const changeDeliveryStatus = (id, product) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: CHANGE_DELIVERY_STATUS_REQUEST\n        })\n\n        // login reducer\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.put(\n            `/account/change-order-status/${id}/`,\n            product,\n            config\n        )\n\n        dispatch({\n            type: CHANGE_DELIVERY_STATUS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CHANGE_DELIVERY_STATUS_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({ variant, children }) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nimport React from 'react'\n\nfunction Product({ product }) {\n    return (\n        <div>\n            <Card className=\"mb-4 rounded\">\n\n                <Card.Body>\n                <Link to={`/product/${product.id}`}>\n                    <Card.Img variant=\"top\" src={product.image} height=\"162\" />\n                </Link>\n                    <Link to={`/product/${product.id}`}>\n                        <Card.Title as=\"div\">\n                            <strong>{product.name}</strong>\n                        </Card.Title>\n                    </Link>\n\n                    <Card.Text as=\"h3\">\n                        Tsh {product.price}\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default Product\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductsList } from '../actions/productActions'\nimport Message from '../components/Message'\nimport { Spinner, Row, Col, Card } from 'react-bootstrap'\nimport Product from '../components/Product'\nimport { useHistory } from \"react-router-dom\";\nimport { CREATE_PRODUCT_RESET } from '../constants'\nimport { Link } from 'react-router-dom'\n\nfunction ProductsListPage() {\n    let history = useHistory()\n    let searchTerm = history.location.search ? history.location.search.split(\"=\")[1].toLowerCase() : \"\";\n    const dispatch = useDispatch()\n\n    // products list reducer\n    const productsListReducer = useSelector(state => state.productsListReducer)\n    const { loading, error, products } = productsListReducer\n\n    useEffect(() => {\n        dispatch(getProductsList())\n        dispatch({\n            type: CREATE_PRODUCT_RESET\n        })\n    }, [dispatch])\n\n    const showNothingMessage = () => {\n        return (\n            <div>\n                {!loading ? <Message variant='info'>Nothing to show</Message> : \"\"}                \n            </div>\n        )\n    }\n\n    return (\n        <div>\n            {/* Prominent Advertise Section */}\n            <Card className=\"mb-4 shadow-sm\" style={{ \n                background: 'linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)',\n                border: 'none',\n                borderRadius: '10px'\n            }}>\n                <Card.Body className=\"text-center py-4\">\n                    <h2 style={{ \n                        color: '#2c3e50',\n                        fontWeight: 'bold',\n                        marginBottom: '1rem'\n                    }}>\n                        Want More Customers For Your Products?\n                    </h2>\n                    <p className=\"lead mb-4\" style={{ \n                        color: '#34495e',\n                        fontSize: '1.25rem'\n                    }}>\n                        Advertise with us and reach thousands of potential buyers!\n                    </p>\n                    <div className=\"d-flex justify-content-center\">\n                        <Link \n                            to=\"/advertise\" \n                            className=\"btn btn-primary btn-lg\"\n                            style={{\n                                padding: '0.75rem 2rem',\n                                fontSize: '1.1rem',\n                                fontWeight: '600',\n                                borderRadius: '50px',\n                                boxShadow: '0 4px 15px rgba(0, 0, 0, 0.1)',\n                                transition: 'all 0.3s ease'\n                            }}\n                            onMouseOver={(e) => {\n                                e.target.style.transform = 'translateY(-2px)'\n                                e.target.style.boxShadow = '0 6px 20px rgba(0, 0, 0, 0.15)'\n                            }}\n                            onMouseOut={(e) => {\n                                e.target.style.transform = 'translateY(0)'\n                                e.target.style.boxShadow = '0 4px 15px rgba(0, 0, 0, 0.1)'\n                            }}\n                        >\n                            Advertise With Us →\n                        </Link>\n                    </div>\n                    <div className=\"mt-3 text-muted\">\n                        <small>Only Tsh 500 per day or Tsh 5000 per month</small>\n                    </div>\n                </Card.Body>\n            </Card>\n\n            {/* Existing Product Listing */}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <span style={{ display: \"flex\" }}>\n                <h5>Getting Products</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n            <div>\n                <Row>\n                    {products.filter((item) => item.name.toLowerCase().includes(searchTerm)).length === 0 \n                        ? showNothingMessage() \n                        : products.filter((item) => item.name.toLowerCase().includes(searchTerm))\n                            .map((product, idx) => (\n                                <Col key={product.id} sm={12} md={6} lg={4} xl={3}>\n                                    <div className=\"mx-2\"> \n                                        <Product product={product} />\n                                    </div>\n                                </Col>\n                            ))\n                    }\n                </Row>\n            </div>\n        </div>\n    )\n}\n\nexport default ProductsListPage","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { deleteProduct, getProductDetails } from '../actions/productActions'\nimport Message from '../components/Message'\nimport { Spinner, Row, Col, Container, Card, Button, Modal } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { CREATE_PRODUCT_RESET, DELETE_PRODUCT_RESET, UPDATE_PRODUCT_RESET, CARD_CREATE_RESET } from '../constants'\n\n\nfunction ProductDetailsPage({ history, match }) {\n\n    const dispatch = useDispatch()\n\n    // modal state and functions\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    // product details reducer\n    const productDetailsReducer = useSelector(state => state.productDetailsReducer)\n    const { loading, error, product } = productDetailsReducer\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // product details reducer\n    const deleteProductReducer = useSelector(state => state.deleteProductReducer)\n    const { success: productDeletionSuccess } = deleteProductReducer\n\n    useEffect(() => {\n        dispatch(getProductDetails(match.params.id))\n        dispatch({\n            type: UPDATE_PRODUCT_RESET\n        })\n        dispatch({\n            type: CREATE_PRODUCT_RESET\n        })\n        dispatch({\n            type: CARD_CREATE_RESET\n        })\n    }, [dispatch, match])\n\n    // product delete confirmation\n    const confirmDelete = () => {\n        dispatch(deleteProduct(match.params.id))\n        handleClose()\n    }\n\n    // after product deletion\n    if (productDeletionSuccess) {\n        alert(\"Product successfully deleted.\")\n        history.push(\"/\")\n        dispatch({\n            type: DELETE_PRODUCT_RESET\n        })\n    }\n\n    return (\n        <div>\n\n            {/* Modal Start*/}\n            <div>\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>\n                            <i style={{ color: \"#e6e600\" }} className=\"fas fa-exclamation-triangle\"></i>\n                            {\" \"}\n                            Delete Confirmation\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>Are you sure you want to delete this product <em>\"{product.name}\"</em>?</Modal.Body>\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={() => confirmDelete()}>\n                            Confirm Delete\n                        </Button>\n                        <Button variant=\"primary\" onClick={handleClose}>\n                            Cancel\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n\n            {/* Modal End */}\n\n            {loading && <span style={{ display: \"flex\" }}>\n                <h5>Getting Product Details</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n            {error ? <Message variant='danger'>{error}</Message>\n                :\n                <div>\n                    <Container>\n                        <Row>\n                            <Col md={6}>\n                                <Card.Img variant=\"top\" src={product.image} height=\"420\" />\n\n                                {/* Product edit and delete conditions */}\n\n                                {userInfo && userInfo.admin ?\n                                    <span style={{ display: \"flex\" }}>\n                                        < button\n                                            className=\"btn mt-2 btn-danger btn-sm button-focus-css\"\n                                            style={{ width: \"100%\" }}\n                                            onClick={() => handleShow()}\n                                        >Delete Product\n                                        </button>\n\n                                        <button\n                                            className=\"ml-2 mt-2 btn btn-primary btn-sm button-focus-css\"\n                                            onClick={() => history.push(`/product-update/${product.id}/`)}\n                                            style={{ width: \"100%\" }}\n                                        >Edit Product\n                                        </button>\n                                    </span>\n                                    : \"\"}\n                            </Col>\n\n                            <Col sm>\n                                <b>{product.name}</b>\n                                <hr />\n                                <span className=\"justify-description-css\">\n                                    <p>{product.description}</p>\n                                </span>\n                                <span style={{\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    border: \"1px solid\",\n                                    borderColor: \"#C6ACE7\",\n                                    padding: \"2px\"\n                                }}>\n                                    Price:<span className=\"text-success ml-2\">Tsh {product.price}</span>\n                                </span>\n                            </Col>\n                            <Col sm>\n                                <b>Buy</b>\n                                <hr />\n                                {product.stock ?\n                                    // <Link to={`${product.id}/checkout/`}>\n                                    //     <button className=\"btn btn-primary\">\n                                    //         <span>Pay with Stripe</span>\n                                    //     </button>\n                                    // </Link>\n                                    <Link to={`/order-now?product=${product.id}`} className=\"btn btn-success ml-2\">\n                                        Order Now\n                                    </Link>\n                                    :\n                                    <Message variant='danger'>\n                                        Out Of Stock!\n                                    </Message>}\n                            </Col>\n                        </Row>\n\n                    </Container>\n                </div>\n            }\n        </div >\n    )\n}\n\nexport default ProductDetailsPage\n","import {\n    CARD_CREATE_REQUEST,\n    CARD_CREATE_SUCCESS,\n    CARD_CREATE_FAIL,\n\n    CHARGE_CARD_REQUEST,\n    CHARGE_CARD_SUCCESS,\n    CHARGE_CARD_FAIL,\n\n    SAVED_CARDS_LIST_REQUEST,\n    SAVED_CARDS_LIST_SUCCESS,\n    SAVED_CARDS_LIST_FAIL,\n\n    DELETE_SAVED_CARD_REQUEST,\n    DELETE_SAVED_CARD_SUCCESS,\n    DELETE_SAVED_CARD_FAIL,\n\n    UPDATE_STRIPE_CARD_REQUEST,\n    UPDATE_STRIPE_CARD_SUCCESS,\n    UPDATE_STRIPE_CARD_FAIL,\n\n} from '../constants/index'\n\nimport axios from 'axios'\n\n// create card\nexport const createCard = (cardData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: CARD_CREATE_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n                \"Card-Number\": cardData.cardNumber,\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            \"/payments/create-card/\",\n            {\n                'email': cardData.email,\n                'number': cardData.cardNumber,\n                'exp_month': cardData.expMonth,\n                'exp_year': cardData.expYear,\n                'cvc': cardData.cvc,\n                'save_card': cardData.saveCard\n            },\n            config\n        )\n\n        dispatch({\n            type: CARD_CREATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CARD_CREATE_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n// charge customer\nexport const chargeCustomer = (cardData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: CHARGE_CARD_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            \"/payments/charge-customer/\",\n            cardData,\n            config\n        )\n\n        dispatch({\n            type: CHARGE_CARD_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CHARGE_CARD_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n// saved cards list\nexport const savedCardsList = () => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: SAVED_CARDS_LIST_REQUEST,\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.get('/account/stripe-cards/', config)\n\n        dispatch({\n            type: SAVED_CARDS_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: SAVED_CARDS_LIST_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n// update stripe card\nexport const updateStripeCard = (cardData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: UPDATE_STRIPE_CARD_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            \"/payments/update-card/\",\n            cardData,\n            config\n        )\n\n        dispatch({\n            type: UPDATE_STRIPE_CARD_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_STRIPE_CARD_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n\n// delete saved card\nexport const deleteSavedCard = (card_number) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: DELETE_SAVED_CARD_REQUEST,\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            '/payments/delete-card/',\n            { \"card_number\": card_number },\n            config\n        )\n\n        dispatch({\n            type: DELETE_SAVED_CARD_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_SAVED_CARD_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}","import React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { deleteSavedCard } from '../actions/cardActions'\nimport { useDispatch } from 'react-redux'\nimport { Modal } from 'react-bootstrap'\n\n\nfunction DeleteCardComponent({ userId, deleteCardNumber, runCardDeleteHandler, toggleRunCardDeleteHandler }) {\n\n    const dispatch = useDispatch()\n\n    // card delete confirmation\n    const confirmDelete = (c_number) => {\n        dispatch(deleteSavedCard(c_number))\n        toggleRunCardDeleteHandler()\n    }\n\n    return (\n        <div>\n            {/* Modal Start*/}\n            <div>\n                <Modal show={runCardDeleteHandler} onHide={toggleRunCardDeleteHandler}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>\n                            <i style={{ color: \"#e6e600\" }} className=\"fas fa-exclamation-triangle\"></i>\n                            {\" \"}\n                            Delete Confirmation\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <p>\n                            <b>\n                                Warning!\n                            </b>\n                            {\" \"}deleting your card will delete your stripe account and all its data.\n                        </p>\n                        Are you sure you want to delete the card \"{deleteCardNumber}\"?\n                    </Modal.Body>\n\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={() => confirmDelete(deleteCardNumber)}>\n                            Confirm Delete\n                        </Button>\n                        <Button variant=\"primary\" onClick={toggleRunCardDeleteHandler}>\n                            Cancel\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n\n            {/* Modal End */}\n        </div>\n    )\n}\n\nexport default DeleteCardComponent\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap'\nimport { createCard } from '../actions/cardActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Spinner } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Message from './Message';\nimport DeleteCardComponent from './DeleteCardComponent';\n\n// to manage our exp month and exp year\nlet todays_date = new Date()\nlet current_year = todays_date.getFullYear()\n\n\nconst CreateCardComponent = ({ stripeCards, addressSelected }) => {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const [userId] = useState(0)\n    const [runCardDeleteHandler, setRunCardDeleteHandler] = useState(false)\n    const [differentCard, setDifferentCard] = useState(false)\n    const [cardDetails, setCardDetails] = useState(false)\n    const [cardDetailsId, setCardDetailsId] = useState(0)\n    const [showStripeCard, setShowStripeCard] = useState(false)\n    const [deleteCardNumber] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [cardNumber, setCardNumber] = useState(\"\")\n    const [expMonth, setExpMonth] = useState(\"\")\n    const [expYear, setExpYear] = useState(\"\")\n    const [cvc, setCvc] = useState(\"\")\n    const [saveCard, setSaveCard] = useState(false)\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // card delete reducer\n    const deleteSavedCardReducer = useSelector(state => state.deleteSavedCardReducer)\n    const { loading, success, error } = deleteSavedCardReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        }\n    }, [history, userInfo, success])\n\n    // stripe card form submission handler\n    const handleCardSubmittion = (e) => {\n        e.preventDefault()\n        if (addressSelected) {\n            const data = {\n                \"email\": email === \"\" ? userInfo.email : email,\n                \"cardNumber\": cardNumber,\n                \"expMonth\": expMonth ? Number(expMonth) : \"\",\n                \"expYear\": expYear ? Number(expYear) : \"\",\n                \"cvc\": cvc ? Number(cvc) : \"\",\n                \"saveCard\": saveCard\n            }\n            dispatch(createCard(data))\n        } else {\n            alert(\"Please select or add your Address to continue\")\n        }\n    }\n\n    // pay with already existing (saved) stripe card handler\n    const payWithSavedCard = (cardData) => {\n        if (addressSelected) {\n            const data = {\n                \"email\": cardData.email,\n                \"cardNumber\": cardData.card_number,\n                \"expMonth\": Number(cardData.exp_month),\n                \"expYear\": Number(cardData.exp_year),\n                \"cvc\": Number(cardData.cvc),\n                \"saveCard\": false\n            }\n            dispatch(createCard(data))\n        } else {\n            alert(\"Please select or add your Address to continue\")\n        }\n    }\n\n    // show card details\n    const showCardDetails = (cardData) => {\n        if (cardDetails) {\n            if (cardData.id === cardDetailsId) {\n                return (\n                    <div>\n                        <button\n                            onClick={() => setCardDetails(false)}\n                            className=\"btn btn-outline-danger btn-sm button-focus-css\"\n                            style={{ float: \"right\", position: \"relative\", \"top\": \"-40px\" }}>\n                            close\n                        </button>\n                        <p><b>Exp Month:</b> {cardData.exp_month}</p>\n                        <p><b>Exp Year:</b> {cardData.exp_year}</p>                       \n                    </div>\n                )\n            }\n        }\n    }\n\n    const toggleRunCardDeleteHandler = () => {\n        setRunCardDeleteHandler(!runCardDeleteHandler)\n    }\n\n    // reload the webpage after new card deletion\n    if (success) {\n        alert(\"Card successfully deleted.\")\n        window.location.reload()\n\n    }\n\n    return (\n        <div>\n\n            {/* Working on Modal Start*/}\n            <div>\n                <>\n                    <DeleteCardComponent\n                        userId={userId}\n                        deleteCardNumber={deleteCardNumber}\n                        runCardDeleteHandler={runCardDeleteHandler}\n                        toggleRunCardDeleteHandler={toggleRunCardDeleteHandler}\n                    />\n                </>\n            </div>\n\n            {/* Working on Modal End */}\n\n            {loading\n                &&\n                <span style={{ display: \"flex\" }}>\n                    <h5>Deleting card</h5>\n                    <span className=\"ml-2\">\n                        <Spinner animation=\"border\" />\n                    </span>\n                </span>}\n            {error && <Message variant='danger'>{error}</Message>}\n            <div className=\"card px-4 py-4\">\n                <button className={showStripeCard\n                    ? \"btn btn-sm btn-danger mb-3 button-focus-css\"\n                    : \"btn btn-sm btn-primary mb-3 button-focus-css\"}\n                    onClick={() =>\n                        setShowStripeCard(!showStripeCard)\n                    }>\n                    {showStripeCard\n                        ? \"close\"\n                        : \"Enter stripe card\"}\n                </button>\n\n                {showStripeCard ?\n                    <Form onSubmit={handleCardSubmittion}>\n\n                        {differentCard ?\n                            <Form.Group>\n                                <Form.Label><b>Card Holder Email Address</b></Form.Label>\n                                <Form.Control\n                                    autoFocus={true}\n                                    type=\"email\"\n                                    pattern=\".+@gmail\\.com\"\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                    placeholder=\"Email address linked with the Card\" />\n                            </Form.Group>\n                            :\n                            <span><b>Default Customer Email: </b>{userInfo.email}</span>\n                        }\n                        <p>\n                            <Link to=\"#\" onClick={() => {\n                                setDifferentCard(!differentCard)\n                                setEmail(\"\")\n                            }}>\n                                {differentCard ? \"Use Your default Email\" : \"Use a different Card\"}\n                            </Link>\n                        </p>\n\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label><b>Card Number</b></Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                pattern=\"[0-9]+\"\n                                value={cardNumber}\n                                onChange={(e) => setCardNumber(e.target.value)}\n                                placeholder=\"Enter Your Card Number\" maxLength=\"16\"\n                                required\n                            />\n                        </Form.Group>\n\n                        <Row>\n\n                            <Col>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label><b>Exp Month</b></Form.Label>\n                                    <select\n                                        className=\"form-control\"\n                                        defaultValue={expMonth}\n                                        onChange={e => setExpMonth(e.target.value)}\n                                        required\n                                    >\n                                        <option>-- --</option>\n                                        {Array.from({ length: 12 }, (x, i) => <option\n                                            key={i}\n                                        >\n                                            {i + 1}\n                                        </option>\n                                        )}\n                                    </select>\n                                </Form.Group>\n                            </Col>\n\n                            <Col>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label><b>Exp Year</b></Form.Label>\n                                    <select className=\"form-control\"\n                                        defaultValue={expYear}\n                                        onChange={e => setExpYear(e.target.value)}\n                                        required\n                                    >\n                                        <option>-- --</option>\n                                        {Array.from({ length: 21 }, (x, i) => <option\n                                            key={i}\n                                        >{current_year + i}</option>)}\n                                    </select>\n                                </Form.Group>\n                            </Col>\n\n                            <Col>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label><b>CVC Number</b></Form.Label>\n                                    <Form.Control\n                                        type=\"numbers\"\n                                        onChange={(e) => setCvc(e.target.value)}\n                                        placeholder=\"123\" \n                                        maxLength=\"3\"\n                                        pattern=\"[0-9]+\"\n                                        required\n                                    />\n                                </Form.Group>\n                            </Col>\n\n                        </Row>\n\n                        <Form.Text className=\"text-muted pb-2\">\n                            <span style={{ display: \"flex\" }}>\n                                <input\n                                    hidden={differentCard}\n                                    type=\"checkbox\"\n                                    className=\"mt-1\"\n                                    value={differentCard ? false : saveCard}\n                                    onChange={() => setSaveCard(!saveCard)}\n                                />\n                                <span hidden={differentCard} className=\"ml-1\">Save my card for future payments</span>\n                            </span>\n                        </Form.Text>\n\n                        <Button className=\"btn-sm button-focus-css\" variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                    : \"\"}\n\n            </div>\n\n            <div className=\"my-4 card px-4 py-4\">\n                <h5>Saved card</h5>\n                {stripeCards.length > 0 ?\n                    stripeCards.map(cardData => (\n                        <div key={cardData.id}>\n                            <Card\n                                style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                                className=\"p-2\">\n                                <p><b>Card Number:</b> XXXX XXXX XXXX {cardData.card_number.slice(12,18)}</p>\n                                <div>\n                                    {showCardDetails(cardData)}\n                                    <button onClick={() => {\n                                        setCardDetails(true)\n                                        setCardDetailsId(cardData.id)\n                                    }} className=\"btn btn-sm btn-outline-primary button-focus-css\"\n                                    >\n                                        Show Card Details\n                                    </button>\n                                    <button onClick={() => payWithSavedCard(cardData)}\n                                        className=\"ml-2 btn btn-sm btn-outline-primary button-focus-css\">\n                                        Pay with this Card\n                                    </button>\n                                </div>\n                            </Card>\n\n                            {/* Edit Card Buttton */}\n\n                            <span\n                                onClick={() => history.push(\"/stripe-card-details/\")}>\n                                <i\n                                    title=\"edit card\"\n                                    className=\"fas fa-edit fa-lg edit-button-css mr-2\"\n                                ></i>\n                            </span>\n                        </div>\n                    )) : \"No saved card.\"}\n            </div>\n        </div>\n    )\n}\n\nexport default CreateCardComponent\n","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n\n    CARD_CREATE_RESET,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n\n    UPDATE_USER_DETAILS_REQUEST,\n    UPDATE_USER_DETAILS_SUCCESS,\n    UPDATE_USER_DETAILS_FAIL,\n\n    DELETE_USER_ACCOUNT_REQUEST,\n    DELETE_USER_ACCOUNT_SUCCESS,\n    DELETE_USER_ACCOUNT_FAIL,\n\n    GET_USER_ALL_ADDRESSES_REQUEST,\n    GET_USER_ALL_ADDRESSES_SUCCESS,\n    GET_USER_ALL_ADDRESSES_FAIL,\n\n    GET_SINGLE_ADDRESS_REQUEST,\n    GET_SINGLE_ADDRESS_SUCCESS,\n    GET_SINGLE_ADDRESS_FAIL,\n\n    CREATE_USER_ADDRESS_REQUEST,\n    CREATE_USER_ADDRESS_SUCCESS,\n    CREATE_USER_ADDRESS_FAIL,\n\n    UPDATE_USER_ADDRESS_REQUEST,\n    UPDATE_USER_ADDRESS_SUCCESS,\n    UPDATE_USER_ADDRESS_FAIL,\n\n    DELETE_USER_ADDRESS_REQUEST,\n    DELETE_USER_ADDRESS_SUCCESS,\n    DELETE_USER_ADDRESS_FAIL,\n\n    CHECK_TOKEN_VALID_REQUEST,\n    CHECK_TOKEN_VALID_SUCCESS,\n    CHECK_TOKEN_VALID_FAIL,\n\n    GET_ALL_ORDERS_REQUEST,\n    GET_ALL_ORDERS_SUCCESS,\n    GET_ALL_ORDERS_FAIL,\n\n} from '../constants/index'\n\nimport axios from 'axios'\n\n// Login\nexport const login = (username, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            '/account/login/',\n            { 'username': username, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data)) // will create a new key-value pair in localStorage\n        // also see store.js file\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n// Logout\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({\n        type: USER_LOGOUT\n    })\n    dispatch({\n        type: CARD_CREATE_RESET\n    })\n}\n\n// register\nexport const register = (username, email, password) => async (dispatch) => {\n    try {\n        dispatch({ type: USER_REGISTER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`/account/register/`,\n            { 'username': username, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    }\n    catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n// check token validation\nexport const checkTokenValidation = () => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: CHECK_TOKEN_VALID_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(\"/payments/check-token/\", config)\n\n        dispatch({\n            type: CHECK_TOKEN_VALID_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CHECK_TOKEN_VALID_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n\n// user details\nexport const userDetails = (id) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(`/account/user/${id}`, config)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n// user update details\nexport const userUpdateDetails = (userData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: UPDATE_USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.put(\n            `/account/user_update/${userInfo.id}/`,\n            {\n                \"username\": userData.username,\n                \"email\": userData.email,\n                \"password\": userData.password\n            },\n            config\n        )\n\n        dispatch({\n            type: UPDATE_USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// user account delete\nexport const userAccountDelete = (userData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: DELETE_USER_ACCOUNT_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.post(\n            `/account/user_delete/${userData.id}/`,\n            {\n                \"password\": userData.password\n            },\n            config\n        )\n\n        dispatch({\n            type: DELETE_USER_ACCOUNT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_USER_ACCOUNT_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// get user address\nexport const getAllAddress = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: GET_USER_ALL_ADDRESSES_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(\n            \"/account/all-address-details/\",\n            config\n        )\n\n        dispatch({\n            type: GET_USER_ALL_ADDRESSES_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GET_USER_ALL_ADDRESSES_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// get user single address\nexport const getSingleAddress = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: GET_SINGLE_ADDRESS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(\n            `/account/address-details/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: GET_SINGLE_ADDRESS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GET_SINGLE_ADDRESS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// create user address\nexport const createUserAddress = (addressData) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: CREATE_USER_ADDRESS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.post(\n            \"/account/create-address/\",\n            addressData,\n            config\n        )\n\n        dispatch({\n            type: CREATE_USER_ADDRESS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CREATE_USER_ADDRESS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// update user address\nexport const updateUserAddress = (id, addressData) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: UPDATE_USER_ADDRESS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.put(\n            `/account/update-address/${id}/`,\n            addressData,\n            config\n        )\n\n        dispatch({\n            type: UPDATE_USER_ADDRESS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_USER_ADDRESS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// delete user address\nexport const deleteUserAddress = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: DELETE_USER_ADDRESS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.delete(\n            `/account/delete-address/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: DELETE_USER_ADDRESS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_USER_ADDRESS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n// get all orders\nexport const getAllOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: GET_ALL_ORDERS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(\n            `/account/all-orders-list/`,\n            config\n        )\n\n        dispatch({\n            type: GET_ALL_ORDERS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GET_ALL_ORDERS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Spinner, Form, Button, Card } from 'react-bootstrap'\nimport { chargeCustomer } from '../actions/cardActions'\nimport { Link, useHistory } from \"react-router-dom\";\nimport { getSingleAddress } from '../actions/userActions'\nimport Message from './Message'\n\n\nconst ChargeCardComponent = ({ product, match, selectedAddressId, addressSelected }) => {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    // create card reducer\n    const createCardReducer = useSelector(state => state.createCardReducer)\n    const { cardData } = createCardReducer\n\n    // charge card reducer\n    const chargeCardReducer = useSelector(state => state.chargeCardReducer)\n    const { success: chargeSuccessfull, error: chargeError, loading: chargingStatus } = chargeCardReducer\n\n    // get single address reducer    \n    const getSingleAddressReducer = useSelector(state => state.getSingleAddressReducer)\n    const { address } = getSingleAddressReducer\n\n    useEffect(() => {\n        dispatch(getSingleAddress(selectedAddressId))\n    }, [dispatch, match, selectedAddressId])\n\n    // charge card handler\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const address_detail = `${address.house_no}, near ${address.landmark}, ${address.city}, \n        ${address.state}, ${address.pin_code}`\n        const data = {\n            \"email\": cardData.email,\n            \"source\": cardData.id,\n            \"amount\": product.price,\n            \"name\": address.name,\n            \"card_number\": cardData.card_data.last4,\n            \"address\": address_detail,\n            \"ordered_item\": product.name,\n            \"paid_status\": true,\n            \"total_price\": product.price,\n            \"is_delivered\": false,\n            \"delivered_at\": \"Not Delivered\",\n        }\n        dispatch(chargeCustomer(data))\n    }\n\n    if (chargeSuccessfull) {\n        history.push({\n            pathname: '/payment-status/',\n            state: { detail: product }\n        })\n        window.location.reload()\n    }\n\n    return (\n        <div>\n            {chargeError ? <Message variant=\"danger\">{chargeError}</Message> : \"\"}\n            <span className=\"text-info\">\n                <h5>Confirm payment</h5>\n            </span>\n            <div className=\"mb-2\">\n                Using Card: XXXX XXXX XXXX {cardData.card_data.last4}\n            </div>\n            <Form onSubmit={onSubmit}>\n\n                {chargingStatus ?\n                    <Button variant=\"primary\" disabled style={{ width: \"100%\" }}>\n                        <Spinner\n                            as=\"span\"\n                            animation=\"grow\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                        />\n                        {\" \"}Processing Payment...\n                    </Button>\n                    :\n                    <Button variant=\"primary\" type=\"submit\" style={{ width: \"100%\" }}>\n                        Pay ₹{product.price}\n                    </Button>\n                }\n            </Form>\n\n            <Card\n                className=\"p-2 mt-2 mb-2\"\n                style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n            >\n                {address ?\n                    <div>\n                        <span className=\"text-info\">\n                            <b><em>Will be delievered at this address</em></b>\n                        </span>\n                        <p></p>\n                        <p><b>Name: </b>{address ? address.name : \"\"}</p>\n                        <p><b>Phone Number: </b>{address ? address.phone_number : \"\"}</p>\n                        <p><b>House Number: </b>{address ? address.house_no : \"\"}</p>\n                        <p><b>Landmark: </b>{address ? address.landmark : \"\"}</p>\n                        <p><b>City: </b>{address ? address.city : \"\"}</p>\n                        <p><b>State: </b>{address ? address.state : \"\"}</p>\n                        <p><b>Pin Code/Zip Code: </b>{address ? address.pin_code : \"\"}</p>\n                    </div>\n                    :\n                    \"\"\n                }\n            </Card>\n            <Link to=\"#\" onClick={() => window.location.reload()}>Select a different card to pay</Link>\n\n        </div >\n    )\n}\n\nexport default ChargeCardComponent\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Card } from 'react-bootstrap'\nimport { getAllAddress } from '../actions/userActions'\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction UserAddressComponent({ handleAddressId }) {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const updatehandleAddressId = (id) => {\n        handleAddressId(id)\n    }\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // get address list reducer\n    const getAllAddressesOfUserReducer = useSelector(state => state.getAllAddressesOfUserReducer)\n    const { addresses } = getAllAddressesOfUserReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(getAllAddress())\n        }\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            {addresses ? addresses.map((address, idx) => (\n                <div key={idx}>\n                    <Card\n                        className=\"p-2 mb-2\"\n                        style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                        key={address.id}\n\n                    >\n                        <input\n                            type=\"radio\"\n                            name=\"addressId\"\n                            value={0}\n                            onClick={() => updatehandleAddressId(address.id)}\n                        />                        \n                        <span><b>Name: </b>{address.name}</span>\n                        <span><b>Address: </b>\n                        {address.house_no}, {address.landmark}, {address.city}, \n                        {address.state}, {address.pin_code}</span>\n                    </Card>\n                </div>\n            ))\n                :\n                \"empty\"\n            }\n\n        </div >\n    )\n}\n\nexport default UserAddressComponent\n","import React, { useEffect, useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Row, Col, Container, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductDetails } from '../actions/productActions'\nimport CreateCardComponent from '../components/CreateCardComponent'\nimport ChargeCardComponent from '../components/ChargeCardComponent'\nimport Message from '../components/Message'\nimport { Spinner } from 'react-bootstrap'\nimport { savedCardsList } from '../actions/cardActions'\nimport UserAddressComponent from '../components/UserAddressComponent'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport {CHARGE_CARD_RESET} from '../constants/index'\n\nconst CheckoutPage = ({ match }) => {\n\n    let history = useHistory()\n\n    const dispatch = useDispatch()\n    const [addressSelected, setAddressSelected] = useState(false)\n    const [selectedAddressId, setSelectedAddressId] = useState(0)\n\n    // set address id handler\n    const handleAddressId = (id) => {\n        if (id) {\n            setAddressSelected(true)\n        }\n        setSelectedAddressId(id)\n    }\n      \n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    // product details reducer\n    const productDetailsReducer = useSelector(state => state.productDetailsReducer)\n    const { loading, error, product } = productDetailsReducer\n\n    // create card reducer\n    const createCardReducer = useSelector(state => state.createCardReducer)\n    const { error: cardCreationError, success, loading: cardCreationLoading } = createCardReducer\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // saved cards list reducer\n    const savedCardsListReducer = useSelector(state => state.savedCardsListReducer)\n    const { stripeCards } = savedCardsListReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getProductDetails(match.params.id))\n            dispatch(savedCardsList())\n            dispatch({\n                type: CHARGE_CARD_RESET\n            })\n        }\n    }, [dispatch, match, history, success, userInfo])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n      }\n\n    return (\n        <div>\n            {cardCreationError ? <Message variant='danger'>{cardCreationError}</Message> : \"\"}\n            {loading\n                &&\n                <span style={{ display: \"flex\" }}>\n                    <h5>Getting Checkout Info</h5>\n                    <span className=\"ml-2\">\n                        <Spinner animation=\"border\" />\n                    </span>\n                </span>}\n            {!loading && cardCreationLoading ?\n                <span style={{ display: \"flex\" }}>\n                    <h5>Checking your card</h5>\n                    <span className=\"ml-2\">\n                        <Spinner animation=\"border\" />\n                    </span>\n                </span> : \"\"}\n            {error ? <Message variant='danger'>{error}</Message> :\n                <Container>\n                    <Row>\n                        <Col xs={6}>\n                            <h3>Checkout Summary</h3>\n                            <Card className=\"mb-4\">\n                                <Card.Body>\n                                    <Container>\n                                        <Row>\n                                            <Col>\n                                                <Image src={product.image} alt=\"image\" height=\"180\" />\n                                            </Col>\n                                            <Col>\n                                                <h5 className=\"card-title text-capitalize\">\n                                                    {product.name}\n                                                </h5>\n                                                <span className=\"card-text text-success\">₹ {product.price}</span>\n                                            </Col>\n                                        </Row>\n                                    </Container>\n                                </Card.Body>\n                            </Card>\n\n                            <span style={{ display: \"flex\" }}>\n                                <h3>Billing Address</h3>\n                                <Link\n                                    className=\"ml-2 mt-2\"\n                                    to=\"/all-addresses/\"\n                                >\n                                    Edit/Add Address\n                                </Link>\n                            </span>\n                            <UserAddressComponent handleAddressId={handleAddressId} />\n                        </Col>\n                        <Col xs={6}>\n                            <h3>\n                                Payments Section\n                            </h3>\n                            {success ?\n                                <ChargeCardComponent\n                                    selectedAddressId={selectedAddressId}\n                                    addressSelected={addressSelected}\n                                    product={product}\n                                />\n                                :\n                                <CreateCardComponent\n                                    addressSelected={addressSelected}\n                                    stripeCards={stripeCards} />}\n                        </Col>\n                    </Row>\n                </Container>\n            }\n        </div>\n    )\n}\n\nexport default CheckoutPage","import React, { useState } from 'react'\nimport {useHistory} from 'react-router-dom'\n\n\nfunction SearchBarForProducts() {\n\n    let history = useHistory()\n    const [searchTerm, setSearchTerm] = useState(\"\")\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if(searchTerm) {\n            history.push(`/?searchTerm=${searchTerm}`)\n        }\n    };\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <span\n                    style={{ display: \"flex\" }}\n                    className=\"\"\n                >\n                    <input\n                        type=\"text\"\n                        value={searchTerm}\n                        placeholder=\"search products\"\n                        className=\"form-control\"\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                    />\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-primary ml-2 button-focus-css\"\n                    ><i className=\"fas fa-search\"></i>\n                    </button>\n                </span>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchBarForProducts\n","export default __webpack_public_path__ + \"static/media/logo.b76b78ec.jpeg\";","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { logout } from '../actions/userActions'\nimport { useHistory } from \"react-router-dom\";\nimport SearchBarForProducts from './SearchBarForProducts'\nimport logo from '../assets/logo.jpeg'; // Import the logo image\n\nfunction NavBar() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // logout\n    const logoutHandler = () => {\n        dispatch(logout()) // action\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    return (\n        <header>\n            <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                <Container>\n                    <LinkContainer to=\"/\">\n                        <Navbar.Brand>\n                            <img\n                                src={logo}\n                                alt=\"Logo\"\n                                style={{ width: '40px', height: '40px', marginRight: '10px' }}\n                            />\n                            Home\n                        </Navbar.Brand>\n                    </LinkContainer>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                    <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\">\n\n                            {/* All Products */}\n                            <LinkContainer to=\"/\">\n                                <Nav.Link >All Products</Nav.Link>\n                            </LinkContainer>\n\n                            {/* Add these new links */}\n                            <LinkContainer to=\"/advertise\">\n                            <Nav.Link>Advertise</Nav.Link>\n                            </LinkContainer>\n                            <LinkContainer to=\"/help\">\n                            <Nav.Link>Help</Nav.Link>\n                            </LinkContainer>\n                            <LinkContainer to=\"/about\">\n                            <Nav.Link>About Us</Nav.Link>\n                            </LinkContainer>\n\n                            {/* New Product (Admins Only) */}\n\n                            {userInfo && userInfo.admin ?\n                                <LinkContainer to=\"/new-product/\">\n                                    <Nav.Link >Add Product</Nav.Link>\n                                </LinkContainer>\n                                : \"\"\n                            }\n\n                            {/* Admin-only links (if user is admin) */}\n                            {userInfo && userInfo.isAdmin && (\n                                <LinkContainer to=\"/ad-approval\">\n                                    <Nav.Link>Approve Ads</Nav.Link>\n                                </LinkContainer>\n                            )}\n\n                                <span className=\"\">\n                                    <SearchBarForProducts />\n                                </span>\n\n                        </Nav>\n\n                        {/* login-logout condition here */}\n\n                        {userInfo ?\n                            <div>\n                                <NavDropdown className=\"navbar-nav text-capitalize\" title={userInfo.username} id='username'>\n                                    <LinkContainer to=\"/account\">\n                                        <NavDropdown.Item>Account Settings</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to=\"/all-addresses/\">\n                                        <NavDropdown.Item>Address Settings</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to=\"/stripe-card-details/\">\n                                        <NavDropdown.Item>Card Settings</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <LinkContainer to=\"/all-orders/\">\n                                        <NavDropdown.Item>All Orders</NavDropdown.Item>\n                                    </LinkContainer>\n                                    <NavDropdown.Item onClick={logoutHandler}>\n                                        Logout\n                                    </NavDropdown.Item>\n                                </NavDropdown>\n                            </div>\n                            :\n\n                            <LinkContainer to=\"/login\">\n                                <Nav.Link><i className=\"fas fa-user\"></i> Login</Nav.Link>\n                            </LinkContainer>\n                        }\n                    </Navbar.Collapse>\n                </Container>\n            </Navbar>\n        </header>\n    )\n}\n\nexport default NavBar\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from 'react-router-dom'\nimport Message from \"./Message\"\n\nconst PaymentStatus = () => {\n    const location = useLocation()\n\n    const renderData = () => {\n\n        try {\n            const boughtData = location.state.detail\n\n            return (\n                <div>\n                    <h3 className=\"text-success\">Payment was Successfull</h3>\n                    <Card className=\"p-3\">\n                        Successfully bought\n                        <br />\n                        <span className=\"mb-2\" style={{ display: \"flex\" }}>\n                            {boughtData.name},\n                            ₹{boughtData.price} <i className=\"text-primary ml-1 mt-1 fas fa-check-circle\"></i>\n                        </span>\n                        <Link to=\"/all-orders/\">Go to orders page</Link>\n                    </Card>\n                </div>\n            )\n        } catch (error) {\n            return <Message variant='info'>Payment status not available.</Message>\n        }\n    }\n\n    return renderData()\n}\n\nexport default PaymentStatus\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { login } from '../actions/userActions'\nimport Message from '../components/Message';\n\n\nfunction LoginPage({ history }) {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const dispatch = useDispatch()\n\n    // reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { error, userInfo } = userLoginReducer\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/') // homepage\n        }\n    }, [history, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(username, password))\n    }\n\n    return (\n        <div>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>                    \n                    <h1>Sign In</h1>                    \n                    {error && <Message variant='danger'>{error}</Message>}\n                    <Form onSubmit={submitHandler}>\n                        <Form.Group controlId='username'>\n                            <Form.Label>\n                                Username\n                    </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"enter username\"\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='password'>\n                            <Form.Label>\n                                Password\n                    </Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"enter your password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Button type=\"submit\" variant='primary'>Sign In</Button>\n                    </Form>\n\n                    <Row className=\"py-3\">\n                        <Col>\n                            Do not have an account?\n                    <Link\n                                to={`/register`}\n                            > Register</Link>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </div>\n\n    )\n}\n\nexport default LoginPage","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { register } from '../actions/userActions'\nimport Message from '../components/Message'\n\nfunction RegisterPage({ history, variant }) {\n    const [username, setUsername] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n\n    const dispatch = useDispatch()\n\n    // reducer\n    const userRegisterReducer = useSelector(state => state.userRegisterReducer)\n    const { error, userInfo } = userRegisterReducer\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/') // homepage\n        }\n    }, [history, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match!')\n        } else {\n            dispatch(register(username, email, password))\n        }\n    }\n\n    return (\n        <div>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    <h1>Sign Up</h1>\n                    {message && <Message variant='danger'>{message}</Message>}\n                    {error && <Message variant='danger'>{error}</Message>}\n                    <Form onSubmit={submitHandler}>\n\n                        <Form.Group controlId='name'>\n                            <Form.Label>\n                                Username\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"enter your username\"\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='email'>\n                            <Form.Label>\n                                Email Address\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"email\"\n                                placeholder=\"enter your email\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='password'>\n                            <Form.Label>\n                                Password\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"password\"\n                                placeholder=\"enter your password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='passwordConfirm'>\n                            <Form.Label>\n                                Confirm Password\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"password\"\n                                placeholder=\"confirm your password\"\n                                value={confirmPassword}\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Button type=\"submit\" variant='primary'>Sign Up</Button>\n                    </Form>\n\n                    <Row className=\"py-3\">\n                        <Col>\n                            Already have an account?\n                    <Link\n                                to={`/login`}\n                            > Login</Link>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </div>\n\n    )\n}\n\nexport default RegisterPage","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { savedCardsList, updateStripeCard } from '../actions/cardActions'\nimport { Row, Col, Form, Button, Card } from 'react-bootstrap'\nimport { Spinner } from 'react-bootstrap'\nimport { UPDATE_STRIPE_CARD_RESET } from '../constants'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { useHistory } from 'react-router-dom'   \n\n\nconst CardUpdatePage = () => {\n\n    let history = useHistory()\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n\n    const dispatch = useDispatch()\n    const [cardNumber, setCardNumber] = useState(\"\")\n    const [name, setName] = useState(\"\")\n    const [expMonth, setExpMonth] = useState(\"\")\n    const [expYear, setExpYear] = useState(\"\")\n    const [addressCity, setAddressCity] = useState(\"\")\n    const [addressCountry, setAddressCountry] = useState(\"\")\n    const [addressState, setAddressState] = useState(\"\")\n    const [addressZip, setAddressZip] = useState(\"\")\n    const [customerId, setCustomerId] = useState(\"\")\n    const [cardId, setCardId] = useState(\"\")\n\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // saved cards list reducer\n    const savedCardsListReducer = useSelector(state => state.savedCardsListReducer)\n    const { stripeCards, loading } = savedCardsListReducer\n\n    // update card reducer\n    const updateStripeCardtReducer = useSelector(state => state.updateStripeCardtReducer)\n    const { success } = updateStripeCardtReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(savedCardsList())\n        }\n    }, [dispatch, history, userInfo, success])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (customerId && cardId) {\n            const all_card_data = {\n                card_number: cardNumber,\n                customer_id: customerId,\n                card_id: cardId,\n                exp_month: expMonth,\n                exp_year: expYear,\n                name_on_card: name,\n                address_city: addressCity,\n                address_country: addressCountry,\n                address_state: addressState,\n                address_zip: addressZip\n            }\n            // action\n            dispatch(updateStripeCard(all_card_data))\n        }\n    }\n\n    const setCustomerAndCardIds = (cus_Id, card_Id, c_num) => {\n        setCustomerId(cus_Id)\n        setCardId(card_Id)\n        setCardNumber(c_num)\n    }\n\n    if (success) {\n        alert(\"Card Successfully Updated\")\n        history.push(\"/stripe-card-details\")\n        dispatch({\n            type: UPDATE_STRIPE_CARD_RESET\n        })\n    }\n\n    return (\n        <div>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    <span\n                        className=\"d-flex justify-content-center\"\n                        style={{ display: \"flex\", marginBottom: \"15px\", color: \"#008080\" }}>\n                        <em>Update Card Details</em>\n                    </span>\n                    {loading && <Spinner animation=\"border\" />}\n                    {stripeCards.map((each, idx) => (\n                        <div key={idx}>\n                            <Card\n                                className=\"p-4 mb-4\"\n                                style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                            >\n                                <Form onSubmit={onSubmit}>\n\n                                    <Form.Group controlId='name'>\n                                        <Form.Label>\n                                            Name on Card\n                                        </Form.Label>\n                                        <Form.Control\n                                            autoFocus={true}\n                                            type=\"text\"\n                                            defaultValue={each.name_on_card}\n                                            placeholder=\"full name\"\n                                            onChange={(e) => setName(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='month'>\n                                        <Form.Label>\n                                            Exp Month\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            pattern=\"[0-9]+\"\n                                            maxLength=\"2\"\n                                            defaultValue={each.exp_month}\n                                            placeholder=\"exp month\"\n                                            onChange={(e) => setExpMonth(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='year'>\n                                        <Form.Label>\n                                            Exp Year\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            pattern=\"[0-9]+\"\n                                            defaultValue={each.exp_year}\n                                            placeholder=\"exp year\"\n                                            maxLength=\"4\"\n                                            onChange={(e) => setExpYear(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='city'>\n                                        <Form.Label>\n                                            Address City\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            defaultValue={each.address_city}\n                                            placeholder=\"address city\"\n                                            onChange={(e) => setAddressCity(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='country'>\n                                        <Form.Label>\n                                            Address Country\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            defaultValue={each.address_country}\n                                            placeholder=\"address country\"\n                                            onChange={(e) => setAddressCountry(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='state'>\n                                        <Form.Label>\n                                            Address State\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            defaultValue={each.address_state}\n                                            placeholder=\"address state\"\n                                            onChange={(e) => setAddressState(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='zip'>\n                                        <Form.Label>\n                                            Address Zip\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            defaultValue={each.address_zip}\n                                            placeholder=\"address zip\"\n                                            pattern=\"[0-9]+\"\n                                            maxLength=\"6\"\n                                            onChange={(e) => setAddressZip(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Button\n                                        type=\"submit\"\n                                        variant='success'\n                                        onClick={() => setCustomerAndCardIds(each.customer_id, each.card_id, each.card_number)}\n                                        style={{ width: \"100%\" }}\n                                        className=\"btn-sm button-focus-css\">\n                                        Save Changes\n                                    </Button>\n                                    <Button\n                                        type=\"submit\"\n                                        variant='primary'\n                                        onClick={() => history.push(\"/stripe-card-details/\")}\n                                        style={{ width: \"100%\" }}\n                                        className=\"btn-sm mt-2 button-focus-css\">\n                                        Cancel\n                                    </Button>\n                                </Form>\n                            </Card>\n                        </div>\n                    ))}\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default CardUpdatePage\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { savedCardsList } from '../actions/cardActions'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { Spinner } from 'react-bootstrap'\nimport Message from \"../components/Message\"\nimport DeleteCardComponent from '../components/DeleteCardComponent'\nimport { useHistory } from 'react-router-dom'\n\n\nconst CardDetailsPage = () => {\n\n    let history = useHistory()\n\n    const dispatch = useDispatch()\n    const [userId, setUserId] = useState(0)\n    const [runCardDeleteHandler, setRunCardDeleteHandler] = useState(false)\n    const [deleteCardNumber, setDeleteCardNumber] = useState(\"\")\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    // saved cards list reducer\n    const savedCardsListReducer = useSelector(state => state.savedCardsListReducer)\n    const { stripeCards, loading } = savedCardsListReducer\n\n    // saved cards list reducer\n    const deleteSavedCardReducer = useSelector(state => state.deleteSavedCardReducer)\n    const { success } = deleteSavedCardReducer\n\n\n    // toggle run card delete handler\n    const toggleRunCardDeleteHandler = () => {\n        setRunCardDeleteHandler(!runCardDeleteHandler)\n    }\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(savedCardsList())\n        }\n    }, [dispatch, history, userInfo])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    // card deletion message\n    if (success) {\n        alert(\"Card successfully deleted.\")\n        window.location.reload()\n\n    }\n\n    return (\n        <div>\n            {loading && <span style={{ display: \"flex\" }}>\n                <h5>Getting Card Information</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n\n            {/* Modal Start*/}\n            <div>\n                <>\n                    <DeleteCardComponent\n                        userId={userId}\n                        deleteCardNumber={deleteCardNumber}\n                        runCardDeleteHandler={runCardDeleteHandler}\n                        toggleRunCardDeleteHandler={toggleRunCardDeleteHandler}\n                    />\n                </>\n            </div>\n\n            {stripeCards.length > 0 ? stripeCards.map((each, idx) => (\n                <div key={idx}>\n                    <Container>\n                        <Row className=\"mr-6 mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Name on Card:</Col>\n                            <Col className=\"p-3\">\n                                {each.name_on_card ? <span>\n                                    {each.name_on_card}\n                                </span>\n                                    : \"Not Set\"}\n                            </Col>\n\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Exp Month:</Col>\n                            <Col className=\"p-3\">{each.exp_month ? each.exp_month : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Exp Year:</Col>\n                            <Col className=\"p-3\">{each.exp_year ? each.exp_year : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mr-6 mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address City:</Col>\n                            <Col className=\"p-3\">{each.address_city ? each.address_city : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address Country:</Col>\n                            <Col className=\"p-3\">{each.address_country ? each.address_country : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address State:</Col>\n                            <Col className=\"p-3\">{each.address_state ? each.address_state : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address Zip:</Col>\n                            <Col className=\"p-3\">{each.address_zip ? each.address_zip : \"Not Set\"}</Col>\n                        </Row>\n                    </Container>\n                    <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <Link to=\"/stripe-card-update/\">Update Card details</Link>\n                        <span className=\"ml-1 text-primary\">| </span>\n                        <span className=\"ml-1\"></span>\n\n                        <Link to=\"#\"\n                            onClick={() => {\n                                setDeleteCardNumber(each.card_number)\n                                setUserId(each.user)\n                                setRunCardDeleteHandler(!runCardDeleteHandler)\n                            }}\n                        >Delete Card</Link>\n                    </span>\n                </div>\n            )) :\n                <div>\n                    <Message variant='info'>Card details not available.</Message>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default CardDetailsPage\n","import React, { useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { userDetails, logout, checkTokenValidation } from '../actions/userActions'\n//import { UPDATE_USER_ACCOUNT_RESET } from '../constants'\nimport Message from '../components/Message'\nimport { Spinner } from 'react-bootstrap'\nimport {useHistory} from 'react-router-dom'\n\n\nfunction AccountPage() {\n\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // user details reducer\n    const userDetailsReducer = useSelector(state => state.userDetailsReducer)\n    const { user: userAccDetails, loading } = userDetailsReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            try {\n                dispatch(checkTokenValidation())\n                dispatch(userDetails(userInfo.id))\n            } catch (error) {\n                history.push(\"/\")\n            }\n        }\n    }, [history, userInfo, dispatch])\n\n    // logout\n    const logoutHandler = () => {\n        dispatch(logout()) // action\n    }\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n      }\n\n    const renderData = () => {\n        try {\n\n            return (\n                <div>\n                    {loading && <span style = {{ display: \"flex\" }}><h5>Getting User Information</h5><span className = \"ml-2\"><Spinner animation=\"border\" /></span></span>}\n                    <Container>\n                        <Row className=\"mr-6 mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Name:</Col>\n                            <Col className=\"p-3\">{userAccDetails.username}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Email:</Col>\n                            <Col className=\"p-3\">{userAccDetails.email}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Admin Privileges:</Col>\n                            <Col className=\"p-3\">{userAccDetails.admin ? \"Yes\" : \"No\"}</Col>\n                        </Row>\n                    </Container>\n                    <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <Link to={`/account/update`}>Update Account details</Link>\n                        <span className=\"ml-1 text-primary\">| </span>\n                        <span className=\"ml-1\"></span>\n\n                        <Link to={`/account/delete/`}>Delete Account</Link>\n                    </span>\n                </div>\n            )\n        } catch (error) {\n            return <Message variant='danger'>Something went wrong, go back to <Link\n                onClick={logoutHandler} to={`/login`}\n            > Login</Link> page.</Message>\n        }\n    }\n\n\n    return renderData()\n\n}\n\nexport default AccountPage\n","import React, { useState, useEffect } from 'react'\nimport { Row, Col, Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { userDetails, userUpdateDetails, checkTokenValidation, logout } from '../actions/userActions'\nimport Message from '../components/Message'\nimport { Spinner } from 'react-bootstrap'\nimport {useHistory} from 'react-router-dom'\nimport { UPDATE_USER_DETAILS_RESET } from '../constants'\n\n\nfunction AccountUpdatePage() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n  \n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    const [username, setUsername] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // user details reducer\n    const userDetailsReducer = useSelector(state => state.userDetailsReducer)\n    const { user: userAccDetails, loading } = userDetailsReducer\n\n    // user update details reducer\n    const userDetailsUpdateReducer = useSelector(state => state.userDetailsUpdateReducer)\n    const { success } = userDetailsUpdateReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        }\n        dispatch(checkTokenValidation())\n        dispatch(userDetails(userInfo.id))\n    }, [dispatch, history, userInfo])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n      }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const updatedUsername = username === \"\" ? userAccDetails.username : username\n        const updatedEmail = email === \"\" ? userAccDetails.email : email\n\n        if (password !== confirmPassword) {\n            alert(\"Passwords do not match\")\n        } else {\n            const userData = {\n                'username': updatedUsername,\n                'email': updatedEmail,\n                'password': password,\n            }\n            dispatch(userUpdateDetails(userData))\n        }\n    }\n\n    // logout\n    const logoutHandler = () => {\n        history.push(\"/login\")\n        dispatch(logout()) // action        \n    }\n\n    if(success) {\n        alert(\"Account successfully updated.\")\n        dispatch({\n            type: UPDATE_USER_DETAILS_RESET\n        })\n        history.push(\"/account/\")\n        dispatch(userDetails(userInfo.id))\n    }\n\n    const renderData = () => {\n        try {\n            return (\n                <div>\n                    <Row className='justify-content-md-center'>\n                        <Col xs={12} md={6}>\n                            <span\n                                className=\"d-flex justify-content-center\"\n                                style={{ display: \"flex\", marginBottom: \"15px\", color: \"#008080\" }}>\n                                <em>Update User Details</em>\n                            </span>\n                            {loading && <Spinner animation=\"border\" />}\n                            <Form onSubmit={onSubmit}>\n\n                                <Form.Group controlId='username'>\n                                    <Form.Label>\n                                        Username\n                                    </Form.Label>\n                                    <Form.Control\n                                        autoFocus={true}\n                                        type=\"text\"\n                                        defaultValue={userAccDetails.username}\n                                        placeholder=\"username\"\n                                        onChange={(e) => setUsername(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='email'>\n                                    <Form.Label>\n                                        Email Address\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"email\"\n                                        placeholder=\"enter email\"\n                                        defaultValue={userAccDetails.email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='password'>\n                                    <Form.Label>\n                                        Reset-Password\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"password\"\n                                        placeholder=\"enter new password\"\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='confirmPassword'>\n                                    <Form.Label>\n                                        Confirm Password\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"password\"\n                                        placeholder=\"confirm new password\"\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Button type=\"submit\" variant='success' className=\"btn-sm\">Save Changes</Button>\n                                <Link to={`/account`}>\n                                    <button className=\"btn btn-primary btn-sm ml-2\" type=\"button\">\n                                        Cancel\n                                    </button>\n                                </Link>\n                            </Form>\n                        </Col>\n                    </Row>\n                </div>\n            )\n        } catch (error) {\n            return <Message variant='danger'>Something went wrong, go back to <Link\n                onClick={logoutHandler} to={`/login`}\n            > Login</Link> page.</Message>\n        }\n    }\n\n    return renderData()\n}\n\nexport default AccountUpdatePage\n","import React, { useState } from 'react'\nimport { Row, Col, Button, Form } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { logout, userAccountDelete, checkTokenValidation } from '../actions/userActions'\nimport Message from '../components/Message'\nimport { Spinner } from 'react-bootstrap'\nimport { useHistory } from \"react-router-dom\";\nimport { DELETE_USER_ACCOUNT_RESET } from '../constants'\n\n\nfunction DeleteUserAccount() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n    const [myPassword, setMyPassword] = useState(\"\")\n\n    \n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // delete user account reducer\n    const deleteUserAccountReducer = useSelector(state => state.deleteUserAccountReducer)\n    const { success, loading, error } = deleteUserAccountReducer\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const userData = {\n            \"id\": userInfo.id,\n            \"password\": myPassword\n        }\n        dispatch(checkTokenValidation())        \n        dispatch(userAccountDelete(userData))        \n    }\n    \n    if(success) {\n        alert(\"Account successfully deleted.\")\n        dispatch({\n            type: DELETE_USER_ACCOUNT_RESET\n        })\n        dispatch(logout()) // action\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    return (\n        <div>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    <h3>Confirm your password to delete your account.</h3>\n                    {loading && <span style = {{ display: \"flex\" }}><h5>Please wait</h5><span className = \"ml-2\"><Spinner animation=\"border\" /></span></span>}                    \n                    {error && <Message variant='danger'>Incorrect Password!</Message>}        \n                    <div className=\"mt-4\">\n                        <Form onSubmit={onSubmit}>\n                            <Form.Group controlId='password'>\n                                <Form.Label>\n                                    Password\n                            </Form.Label>\n                                <Form.Control\n                                    required\n                                    type=\"password\"\n                                    placeholder=\"enter your password\"\n                                    value={myPassword}\n                                    onChange={(e) => setMyPassword(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Button type=\"submit\" variant=\"danger\">Confirm Delete</Button>\n                        </Form>\n                    </div>\n                </Col>\n            </Row>\n        </div>\n    )\n}\n\nexport default DeleteUserAccount\n","import React, { useState } from 'react'\nimport { Form, Button, Card, InputGroup } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createUserAddress, getAllAddress } from '../actions/userActions'\nimport { CREATE_USER_ADDRESS_RESET } from '../constants'\nimport Message from './Message'\n\n\nconst CreateAddressComponent = ({ toggleCreateAddress }) => {\n\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState(\"\")\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\n    const [pinCode, setPinCode] = useState(\"\")\n    const [houseNumber, setHouseNumber] = useState(\"\")\n    const [landmark, setLandmark] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n    const [state, setState] = useState(\"\")\n\n    // Create User Address Reducer\n    const createUserAddressReducer = useSelector(state => state.createUserAddressReducer)\n    const { success: addressCreationSuccess, error: errorCreatingAddress } = createUserAddressReducer\n\n    const addressSubmitHandler = (e) => {\n        e.preventDefault()\n        const addressData = {\n            \"name\": name,\n            \"phone_number\": phoneNumber,\n            \"pin_code\": pinCode,\n            \"house_no\": houseNumber,\n            \"landmark\": landmark,\n            \"city\": city,\n            \"state\": state,\n        }\n        dispatch(createUserAddress(addressData))\n    }\n\n    if (addressCreationSuccess) {\n        alert(\"Address successfully created.\")\n        toggleCreateAddress()\n        dispatch({\n            type: CREATE_USER_ADDRESS_RESET\n        })\n        dispatch(getAllAddress())\n    }\n\n    return (\n        <div>\n            <p className=\"text-center text-info\"><em>New Address</em></p>\n            {errorCreatingAddress\n                ? <Message variant='danger'>\n                    {errorCreatingAddress}\n                </Message>\n                :\n                \"\"}\n            <Card\n                className=\"mx-auto mb-4\"\n                style={{ width: \"50%\", border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n            >\n                <Card.Body>\n                    <Form onSubmit={addressSubmitHandler}>\n\n                        <Form.Group controlId='name'>\n                            <Form.Label>\n                                Name\n                            </Form.Label>\n                            <Form.Control\n                                autoFocus={true}\n                                type=\"text\"\n                                placeholder=\"enter your name\"\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='phoneNumber'>\n                            <Form.Label>\n                                Phone Number\n                            </Form.Label>\n                            <InputGroup>\n                                <InputGroup.Text>+91</InputGroup.Text>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"phone number\"\n                                    pattern=\"[0-9]+\"\n                                    maxLength=\"10\"\n                                    value={phoneNumber}\n                                    onChange={(e) => setPhoneNumber(e.target.value)}\n                                >\n                                </Form.Control>\n                            </InputGroup>\n                        </Form.Group>\n\n                        <Form.Group controlId='pinCode'>\n                            <Form.Label>\n                                Pin Code\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"pin code\"\n                                value={pinCode}\n                                pattern=\"[0-9]+\"\n                                maxLength=\"6\"\n                                onChange={(e) => setPinCode(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='houseNumber'>\n                            <Form.Label>\n                                House No./Address\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"house number\"\n                                value={houseNumber}\n                                onChange={(e) => setHouseNumber(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='landmark'>\n                            <Form.Label>\n                                Landmark\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"landmark\"\n                                value={landmark}\n                                onChange={(e) => setLandmark(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='city'>\n                            <Form.Label>\n                                City\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"city\"\n                                value={city}\n                                onChange={(e) => setCity(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='state'>\n                            <Form.Label>\n                                State\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"state\"\n                                value={state}\n                                onChange={(e) => setState(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Button\n                            style={{ width: \"100%\" }}\n                            className=\"btn-sm\"\n                            type=\"submit\"\n                            variant=\"success\"\n                        >\n                            Save Address\n                        </Button>\n                        <Button\n                            style={{ width: \"100%\" }}\n                            className=\"btn-sm mt-2\"\n                            variant=\"primary\"\n                            onClick={() => toggleCreateAddress()}>\n                            Cancel\n                        </Button>\n                    </Form>\n\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default CreateAddressComponent\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Card, Modal, Button, Spinner } from 'react-bootstrap'\nimport { deleteUserAddress, getAllAddress, checkTokenValidation, logout } from '../actions/userActions'\nimport { DELETE_USER_ADDRESS_RESET, GET_SINGLE_ADDRESS_RESET } from '../constants'\nimport { useHistory } from 'react-router-dom'\nimport CreateAddressComponent from '../components/CreateAddressComponent'\n\n\nfunction AllAddressesOfUserPage() {\n\n    let history = useHistory()\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n\n    const dispatch = useDispatch()\n    const [deleteAddress, setDeleteAddress] = useState(\"\")\n    const [createAddress, setCreateAddress] = useState(false)\n\n    // modal state and functions\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // get address list reducer\n    const getAllAddressesOfUserReducer = useSelector(state => state.getAllAddressesOfUserReducer)\n    const { addresses, loading: loadingAllAddresses } = getAllAddressesOfUserReducer\n\n    // get address list reducer\n    const deleteUserAddressReducer = useSelector(state => state.deleteUserAddressReducer)\n    const { success: addressDeletionSuccess } = deleteUserAddressReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getAllAddress())\n            dispatch({\n                type: GET_SINGLE_ADDRESS_RESET\n            })\n        }\n    }, [dispatch, history, userInfo, addressDeletionSuccess])\n\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    if (addressDeletionSuccess) {\n        alert(\"Address successfully deleted.\")\n        dispatch({\n            type: DELETE_USER_ADDRESS_RESET\n        })\n        dispatch(getAllAddress())\n    }\n\n    // address deletion handler\n    const deleteAddressHandler = (address) => {\n        setDeleteAddress(address)\n        handleShow()\n    }\n\n    // address delete confirmation\n    const confirmDelete = (id) => {\n        dispatch(deleteUserAddress(id))\n        handleClose()\n    }\n\n    // toggle Create Address Button\n    const toggleCreateAddress = () => {\n        setCreateAddress(!createAddress)\n    }\n\n\n    return (\n        <div>\n\n            {/* Modal Start*/}\n            <div>\n                <>\n                    <Modal show={show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>\n                                <i style={{ color: \"#e6e600\" }} className=\"fas fa-exclamation-triangle\"></i>\n                                {\" \"}\n                                Delete Confirmation\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            Are you sure you want to delete this address\n                            {\" \"}<em>\"{deleteAddress.house_no}, {deleteAddress.city}, {deleteAddress.state}\"</em>?\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"danger\" onClick={() => confirmDelete(deleteAddress.id)}>\n                                Confirm Delete\n                            </Button>\n                            <Button variant=\"primary\" onClick={handleClose}>\n                                Cancel\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                </>\n            </div>\n\n            {/* Modal End */}\n\n            {/* loading spinner conditions */}\n\n            {loadingAllAddresses && <span style={{ display: \"flex\" }}>\n                <h5>Getting addresses</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n\n            {/* Create Address */}\n            {createAddress ?\n                <div>\n                    <CreateAddressComponent toggleCreateAddress={toggleCreateAddress} />\n                </div>\n                :\n                <button\n                    className=\"btn btn-sm btn-primary mb-2 button-focus-css\"\n                    onClick={() => toggleCreateAddress()}\n                >\n                    Add new address +\n                </button>\n            }\n\n            {addresses && !createAddress ? addresses.map((address, idx) => (\n                <div key={idx}>\n                    <Card\n                        className=\"p-2 mb-2\"\n\n                        style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                        key={address.id}\n\n                    >\n                        <span><b>Name: </b>{address.name}</span>\n                        <span><b>Phone No: </b>+91 {address.phone_number}</span>\n                        <span><b>Address: </b>{address.house_no},\n                            near {address.landmark}, {address.city}, {address.state},\n                            {address.pin_code}\n\n                            {/* Delete Address Buttton */}\n\n                            <span\n                                onClick={() => deleteAddressHandler(address)}>\n                                <i\n                                    title=\"delete address\"\n                                    className=\"mt-2 fas fa-trash-alt fa-lg delete-button-css\"\n                                ></i>\n                            </span>\n\n                            {/* Edit Address Buttton */}\n\n                            <span\n                                onClick={() => history.push(`/all-addresses/${address.id}/`)}>\n                                <i\n                                    title=\"edit address\"\n                                    className=\"mt-2 mr-2 fas fa-edit fa-lg edit-button-css\"\n                                ></i>\n                            </span>\n\n                        </span>\n\n                    </Card>\n                </div>\n            ))\n                :\n                \"\"\n            }\n\n        </div >\n    )\n}\n\nexport default AllAddressesOfUserPage\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, Button, Card } from 'react-bootstrap'\nimport { checkTokenValidation, getAllAddress, getSingleAddress, logout, updateUserAddress } from '../actions/userActions'\nimport { useHistory } from 'react-router-dom'\nimport { UPDATE_USER_ADDRESS_RESET } from '../constants'\n\n\nconst AddressUpdatePage = ({ match }) => {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState(\"\")\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\n    const [pinCode, setPinCode] = useState(\"\")\n    const [houseNumber, setHouseNumber] = useState(\"\")\n    const [landmark, setLandmark] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n    const [state, setState] = useState(\"\")\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    // get single address reducer    \n    const getSingleAddressReducer = useSelector(state => state.getSingleAddressReducer)\n    const { address, error: errorFetchingAddress } = getSingleAddressReducer\n\n    // get single address reducer    \n    const updateUserAddressReducer = useSelector(state => state.updateUserAddressReducer)\n    const { success: addressUpdateSuccess } = updateUserAddressReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getSingleAddress(match.params.id))\n        }\n    }, [dispatch, history, userInfo, match])\n\n    // token validation check\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    const addressSubmitHandler = (e) => {\n        e.preventDefault()\n        const updatedAddress = {\n            \"name\": name,\n            \"phone_number\": phoneNumber,\n            \"pin_code\": pinCode,\n            \"house_no\": houseNumber,\n            \"landmark\": landmark,\n            \"city\": city,\n            \"state\": state,\n        }\n        dispatch(updateUserAddress(match.params.id, updatedAddress))\n    }\n\n    if(addressUpdateSuccess) {\n        alert(\"Address updated successfully.\")\n        dispatch({\n            type: UPDATE_USER_ADDRESS_RESET\n        })\n        history.push(\"/all-addresses/\")\n        dispatch(getAllAddress())\n    }\n\n    return (\n        <div>\n            <p className=\"text-center text-info\"><em>Update Address</em></p>\n            {errorFetchingAddress && <h3>Invalid Address Request</h3>}\n            <Card\n                className=\"mx-auto mb-4\"\n                style={{ width: \"50%\", border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n            >\n                <Card.Body>\n                    <Form onSubmit={addressSubmitHandler}>\n\n                        <Form.Group controlId='name'>\n                            <Form.Label>\n                                Name\n                            </Form.Label>\n                            <Form.Control\n                                autoFocus={true}\n                                type=\"text\"\n                                placeholder=\"enter your name\"\n                                defaultValue={address ? address.name : \"\"}\n                                onChange={(e) => setName(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='phoneNumber'>\n                            <Form.Label>\n                                Phone Number\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"phone number\"\n                                pattern=\"[0-9]+\"\n                                maxLength=\"10\"\n                                defaultValue={address ? address.phone_number : \"\"}\n                                onChange={(e) => setPhoneNumber(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='pinCode'>\n                            <Form.Label>\n                                Pin Code\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"pin code\"\n                                defaultValue={address ? address.pin_code : \"\"}\n                                pattern=\"[0-9]+\"\n                                maxLength=\"6\"\n                                onChange={(e) => setPinCode(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='houseNumber'>\n                            <Form.Label>\n                                House No./Address\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"house number\"\n                                defaultValue={address ? address.house_no : \"\"}\n                                onChange={(e) => setHouseNumber(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='landmark'>\n                            <Form.Label>\n                                Landmark\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"landmark\"\n                                defaultValue={address ? address.landmark : \"\"}\n                                onChange={(e) => setLandmark(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='city'>\n                            <Form.Label>\n                                City\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"city\"\n                                defaultValue={address ? address.city : \"\"}\n                                onChange={(e) => setCity(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='state'>\n                            <Form.Label>\n                                State\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"state\"\n                                defaultValue={address ? address.state : \"\"}\n                                onChange={(e) => setState(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n\n                        <Button\n                            style={{ width: \"100%\" }}\n                            className=\"btn-sm\"\n                            type=\"submit\"\n                            variant=\"success\"\n                        >\n                            Save Changes\n                        </Button>\n\n                        <Button\n                            style={{ width: \"100%\" }}\n                            className=\"btn-sm mt-2\"\n                            variant=\"primary\"\n                            onClick={() => history.push(\"/all-addresses/\")}\n                        >\n                            Cancel\n                        </Button>\n\n\n                    </Form>\n\n                </Card.Body>\n            </Card>\n        </div >\n    )\n}\n\nexport default AddressUpdatePage\n","export const dateCheck = (param) => {\n    //console.log(\"dateCheck ===>\", param)\n    // Example: 2021-01-12\n    const dateValue = param.slice(8, 10);\n    const monthValue = param.slice(5, 7);\n    const yearValue = param.slice(0, 4);\n  \n    switch (monthValue) {\n      case \"01\":\n        return `${dateValue} January ${yearValue}`;\n      case \"02\":\n        return `${dateValue} Feburary ${yearValue}`;\n      case \"03\":\n        return `${dateValue} March ${yearValue}`;\n      case \"04\":\n        return `${dateValue} April ${yearValue}`;\n      case \"05\":\n        return `${dateValue} May ${yearValue}`;\n      case \"06\":\n        return `${dateValue} June ${yearValue}`;\n      case \"07\":\n        return `${dateValue} July ${yearValue}`;\n      case \"08\":\n        return `${dateValue} August ${yearValue}`;\n      case \"09\":\n        return `${dateValue} September ${yearValue}`;\n      case \"10\":\n        return `${dateValue} October ${yearValue}`;\n      case \"11\":\n        return `${dateValue} November ${yearValue}`;\n      case \"12\":\n        return `${dateValue} December ${yearValue}`;\n      default:\n        return null;\n    }\n  };\n","import React, { useState } from 'react'\n\nconst SearchBarForOrdersPage = ({ handleSearchTerm, placeholderValue }) => {\n\n    const [searchTerm, setSearchTerm] = useState(\"\")\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        handleSearchTerm(searchTerm);\n    };\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <span\n                    style={{ display: \"flex\" }}\n                    className=\"\"\n                >\n                    <input\n                        type=\"text\"\n                        value={searchTerm}\n                        placeholder={placeholderValue}\n                        className=\"form-control\"\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                    />\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-primary ml-2 button-focus-css\"\n                    ><i className=\"fas fa-search\"></i>\n                    </button>\n                </span>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchBarForOrdersPage\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { checkTokenValidation, getAllOrders, logout } from '../actions/userActions'\nimport { useHistory } from 'react-router-dom'\nimport { Table, Spinner } from 'react-bootstrap'\nimport { dateCheck } from '../components/GetDate'\nimport { changeDeliveryStatus } from '../actions/productActions'\nimport { CHANGE_DELIVERY_STATUS_RESET } from '../constants'\nimport SearchBarForOrdersPage from '../components/SearchBarForOrdersPage'\nimport Message from '../components/Message'\n\n\nfunction OrdersListPage() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n    const placeholderValue = \"Search orders by Customer Name, Address or by Ordered Item\"\n\n    const todays_date = dateCheck(new Date().toISOString().slice(0, 10))\n\n    const [currentDateInfo] = useState(todays_date)\n    const [idOfchangeDeliveryStatus, setIdOfchangeDeliveryStatus] = useState(0)\n    const [cloneSearchTerm, setCloneSearchTerm] = useState(\"\")\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // get all orders reducer\n    const getAllOrdersReducer = useSelector(state => state.getAllOrdersReducer)\n    const { orders, loading: loadingOrders } = getAllOrdersReducer\n\n    // change delivery status reducer\n    const changeDeliveryStatusReducer = useSelector(state => state.changeDeliveryStatusReducer)\n    const { success: deliveryStatusChangeSuccess, loading: deliveryStatusChangeSpinner } = changeDeliveryStatusReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getAllOrders())\n        }\n    }, [userInfo, dispatch, history])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    const changeDeliveryStatusHandler = (id, status) => {\n        setIdOfchangeDeliveryStatus(id)\n        const productData = {\n            \"is_delivered\": status,\n            \"delivered_at\": status ? currentDateInfo : \"Not Delivered\"\n        }\n        dispatch(changeDeliveryStatus(id, productData))\n    }\n\n    if (deliveryStatusChangeSuccess) {\n        alert(\"Delivery status changed successfully\")\n        dispatch({\n            type: CHANGE_DELIVERY_STATUS_RESET\n        })\n        dispatch(getAllOrders())\n    }\n\n    const handleSearchTerm = (term) => {\n        setCloneSearchTerm(term)\n    };\n\n\n    return (\n        <div>\n            {loadingOrders && <span style={{ display: \"flex\" }}>\n                <h5>Getting Orders</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n            {userInfo.admin && <SearchBarForOrdersPage handleSearchTerm={handleSearchTerm} placeholderValue={placeholderValue} />}\n                {orders.length > 0 ?\n                <Table className=\"mt-2\" striped bordered>\n                    <thead>\n                        <tr className=\"p-3 bg-info text-white text-center\">\n                            <th>Order Id</th>\n                            <th>Customer Name</th>\n                            <th>Card Used</th>\n                            <th>Delivery Address</th>\n                            <th>Ordered Item</th>\n                            <th>Paid Status</th>\n                            <th>Paid On</th>\n                            <th>Total Amount</th>\n                            <th>Delivered Status</th>\n                            <th>Delivered On</th>\n                            {userInfo.admin &&\n                                <th>Delivery Status</th>\n                            }\n                        </tr>\n                    </thead>\n\n                    {/* filter orders by name, address or ordered item */}\n\n                    {orders.filter((item) => (\n\n                        item.name.toLowerCase().includes(cloneSearchTerm)\n                        ||\n                        item.ordered_item.toLowerCase().includes(cloneSearchTerm)\n                        ||\n                        item.address.toLowerCase().includes(cloneSearchTerm)\n                    )\n\n                    ).map((order, idx) => (\n                        <tbody key={idx}>\n                            <tr className=\"text-center\">\n                                <td>\n                                    {order.id}\n                                </td>\n                                <td>{order.name}</td>\n                                <td>{order.card_number}</td>\n                                <td>{order.address}</td>\n                                <td>{order.ordered_item}</td>\n                                <td>{order.paid_status ?\n                                    <i className=\"fas fa-check-circle text-success\"></i>\n                                    :\n                                    <i className=\"fas fa-times-circle text-danger\"></i>\n                                }</td>\n                                <td>{dateCheck(order.paid_at)}</td>\n                                <td>{order.total_price} INR</td>\n                                <td>{order.is_delivered ?\n                                    <i className=\"fas fa-check-circle text-success\"></i>\n                                    :\n                                    <i className=\"fas fa-times-circle text-danger\"></i>\n                                }</td>\n                                <td>{order.delivered_at}</td>\n                                {userInfo.admin &&\n                                    <td>\n                                        {order.is_delivered ?\n                                            <button\n                                                className=\"btn btn-outline-danger btn-sm\"\n                                                onClick={() => changeDeliveryStatusHandler(order.id, false)}\n                                            >\n                                                {deliveryStatusChangeSpinner\n                                                    &&\n                                                    idOfchangeDeliveryStatus === order.id\n                                                    ?\n                                                    <Spinner animation=\"border\" />\n                                                    :\n                                                    \"Mark as Undelivered\"}\n                                            </button>\n                                            :\n                                            <button\n                                                className=\"btn btn-outline-primary btn-sm\"\n                                                onClick={() => changeDeliveryStatusHandler(order.id, true)}\n                                            >\n                                                {deliveryStatusChangeSpinner\n                                                    &&\n                                                    idOfchangeDeliveryStatus === order.id\n                                                    ?\n                                                    <Spinner animation=\"border\" />\n                                                    :\n                                                    \"Mark as delivered\"}\n                                            </button>\n                                        }\n                                    </td>\n                                }\n                            </tr>\n                        </tbody>\n                    ))}\n                </Table>\n                : <Message variant=\"info\">No orders yet.</Message> }\n        </div>\n    )\n}\n\nexport default OrdersListPage","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, Button } from 'react-bootstrap'\nimport { createProduct } from '../actions/productActions'\nimport { useHistory } from 'react-router'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { CREATE_PRODUCT_RESET } from '../constants'\nimport Message from '../components/Message';\n\n\nconst ProductCreatePage = () => {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [price, setPrice] = useState(\"\")\n    const [stock, setStock] = useState(false)\n    const [image, setImage] = useState(null)\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // create product reducer\n    const createProductReducer = useSelector(state => state.createProductReducer)\n    const { product, success: productCreationSuccess, error: productCreationError } = createProductReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        }\n        dispatch(checkTokenValidation())\n    }, [dispatch, userInfo, history])\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n\n        let form_data = new FormData()\n        form_data.append('name', name)\n        form_data.append('description', description)\n        form_data.append('price', price)\n        form_data.append('stock', stock)\n        form_data.append('image', image)\n\n        dispatch(createProduct(form_data))\n    }\n\n    if (productCreationSuccess) {\n        alert(\"Product successfully created.\")\n        history.push(`/product/${product.id}/`)\n        dispatch({\n            type: CREATE_PRODUCT_RESET\n        })\n    }\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    return (\n        <div>\n            {productCreationError && <Message variant='danger'>{productCreationError.image[0]}</Message>}\n            <span\n                className=\"d-flex justify-content-center text-info\"\n                >\n                <em>New Product</em>\n            </span>\n            <Form onSubmit={onSubmit}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>\n                        <b>\n                            Product Name\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        required\n                        autoFocus={true}\n                        type=\"text\"\n                        value={name}\n                        placeholder=\"product name\"\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='description'>\n                    <Form.Label>\n                        <b>\n                            Product Description\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        value={description}\n                        placeholder=\"product description\"\n                        onChange={(e) => setDescription(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='price'>\n                    <Form.Label>\n                        <b>\n                            Price\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        pattern=\"[0-9]+(\\.[0-9]{1,2})?%?\"\n                        value={price}\n                        placeholder=\"199.99\"\n                        step=\"0.01\"\n                        maxLength=\"8\"\n                        onChange={(e) => setPrice(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <span style={{ display: \"flex\" }}>\n                    <label>In Stock</label>\n                    <input\n                        type=\"checkbox\"\n                        value={stock}\n                        className=\"ml-2 mt-2\"\n                        onChange={() => setStock(!stock)}\n                    />\n                </span>\n\n                <Form.Group controlId='image'>\n                    <Form.Label>\n                        <b>\n                            Product Image\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        required\n                        type=\"file\"\n                        onChange={(e) => setImage(e.target.files[0])}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Button\n                    type=\"submit\"\n                    variant='success'\n                    className=\"btn-sm button-focus-css\"\n                >\n                    Save Product\n                </Button>\n                <Button\n                    type=\"submit\"\n                    variant='primary'\n                    className=\"btn-sm ml-2 button-focus-css\"\n                    onClick={() => history.push(\"/\")}\n                >\n                    Cancel\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default ProductCreatePage\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Spinner } from 'react-bootstrap'\nimport { getProductDetails, updateProduct } from '../actions/productActions'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { UPDATE_PRODUCT_RESET } from '../constants'\nimport Message from '../components/Message'\n\n\nconst ProductUpdatePage = ({ match }) => {\n\n    // product details reducer\n    const productDetailsReducer = useSelector(state => state.productDetailsReducer)\n    const { loading: loadingPageDetails, product } = productDetailsReducer\n\n    // as our errors will be displayed at the top of the webpage\n    const scrollToTop = () => {\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n        });\n    }\n\n\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [price, setPrice] = useState(\"\")\n    const [stock, setStock] = useState(product.stock)\n    const [image, setImage] = useState(\"\")\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const [newImage, setNewImage] = useState(false)\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // product details reducer\n    const updateProductReducer = useSelector(state => state.updateProductReducer)\n    const {\n        success: productUpdationSuccess,\n        loading: loadingProductUpdations,\n        error: productUpdationError\n    } = updateProductReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n    \n    // get product details\n    useEffect(() => {\n        if (!userInfo || !userInfo.admin) {\n            history.push(\"/login\")\n        }\n        dispatch(checkTokenValidation())\n        dispatch(getProductDetails(match.params.id))\n    }, [dispatch, userInfo, history, match])\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const productId = product.id\n        let form_data = new FormData()\n        form_data.append('name', name)\n        form_data.append('description', description)\n        form_data.append('price', price)\n        form_data.append('stock', stock)\n        form_data.append('image', image)\n\n        dispatch(updateProduct(productId, form_data))\n    }\n\n    if (productUpdationSuccess) {\n        alert(\"Product successfully updated.\")\n        dispatch({\n            type: UPDATE_PRODUCT_RESET\n        })\n        history.push(`/product/${product.id}`)\n    }\n\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    return (\n        <div>\n            <span\n                className=\"d-flex justify-content-center text-info\"\n            >\n                <em>Edit Product</em>\n            </span>\n            {productUpdationError ? (\n                <div>\n                    {scrollToTop()}\n                    <Message variant='danger'>{productUpdationError.image[0]}</Message>\n                </div>\n            ) : \"\"}\n            {loadingPageDetails && <span style={{ display: \"flex\" }}>\n                <h5>Getting Product Details</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n            {loadingProductUpdations ? <span style={{ display: \"flex\" }}>\n                <h5>Updating Product</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span> : \"\"}\n            <Form onSubmit={onSubmit}>\n\n                <Form.Group controlId='image'>\n                    <Form.Label>\n                        <b>\n                            Product Image\n                        </b>\n                    </Form.Label>\n                    <p>\n                        <img src={product.image} alt={product.name} height=\"200\" />\n                    </p>\n\n                    {newImage ?\n                        <div>\n                            <Form.Control\n                                type=\"file\"\n                                onChange={(e) => setImage(e.target.files[0])}\n                            >\n                            </Form.Control>\n\n                            <span\n                                onClick={() => {\n                                    setNewImage(!newImage)\n                                    setImage(\"\")\n                                    dispatch({\n                                        type: UPDATE_PRODUCT_RESET\n                                    })\n                                }}\n                                className=\"btn btn-primary btn-sm mt-2\"\n                            >\n                                Cancel\n                            </span>\n                        </div>\n                        :\n                        <p>\n                            <span\n                                onClick={() => setNewImage(!newImage)}\n                                className=\"btn btn-success btn-sm\"\n                            >\n                                choose different image\n                            </span>\n                        </p>\n                    }\n                </Form.Group>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>\n                        <b>\n                            Product Name\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        autoFocus={true}\n                        type=\"text\"\n                        defaultValue={product.name}\n                        placeholder=\"product name\"\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='description'>\n                    <Form.Label>\n                        <b>\n                            Product Description\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        defaultValue={product.description}\n                        placeholder=\"product description\"\n                        onChange={(e) => setDescription(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='price'>\n                    <Form.Label>\n                        <b>\n                            Price\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        pattern=\"[0-9]+(\\.[0-9]{1,2})?%?\"\n                        defaultValue={product.price}\n                        placeholder=\"199.99\"\n                        step=\"0.01\"\n                        maxLength=\"8\"\n                        onChange={(e) => setPrice(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <span style={{ display: \"flex\" }}>\n                    <label>In Stock</label>\n                    <input\n                        type=\"checkbox\"\n                        defaultChecked={product.stock}\n                        className=\"ml-2 mt-2\"\n                        onChange={() => setStock(!stock)}\n                    />\n                </span>\n\n                <Button\n                    type=\"submit\"\n                    variant='success'\n                    className=\"btn-sm button-focus-css mb-4\"\n                >\n                    Save Changes\n                </Button>\n                <Button\n                    onClick={() => history.push(`/product/${product.id}`)}\n                    variant='primary'\n                    className=\"btn-sm ml-2 button-focus-css mb-4\"\n                >\n                    Cancel\n                </Button>\n            </Form>\n        </div>\n    )\n}\n\nexport default ProductUpdatePage\n","import React from 'react'\nimport Message from '../components/Message'\n\nfunction NotFoundPage() {\n    return (\n        <div>\n            <Message variant='danger'>\n                404 Not Found\n            </Message>\n        </div>\n    )\n}\n\nexport default NotFoundPage\n","import axios from 'axios'\nimport {\n    AD_SUBMISSION_REQUEST,\n    AD_SUBMISSION_SUCCESS,\n    AD_SUBMISSION_FAIL,\n    AD_APPROVAL_REQUEST,\n    AD_APPROVAL_SUCCESS,\n    AD_APPROVAL_FAIL,\n    ACTIVE_ADS_REQUEST,\n    ACTIVE_ADS_SUCCESS,\n    ACTIVE_ADS_FAIL,\n    PENDING_ADS_REQUEST,\n    PENDING_ADS_SUCCESS,\n    PENDING_ADS_FAIL\n} from '../constants'\n\nexport const submitAd = (formData) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: AD_SUBMISSION_REQUEST })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.post(\n            '/api/ads/submit/',\n            formData,\n            config\n        )\n\n        dispatch({\n            type: AD_SUBMISSION_SUCCESS,\n            payload: data,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: AD_SUBMISSION_FAIL,\n            payload:\n                error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        })\n    }\n}\n\nexport const approveAd = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: AD_APPROVAL_REQUEST })\n\n        const {\n            userLogin: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        const { data } = await axios.put(\n            `/api/ads/approve/${id}/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: AD_APPROVAL_SUCCESS,\n            payload: data,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: AD_APPROVAL_FAIL,\n            payload:\n                error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        })\n    }\n}\n\nexport const listActiveAds = () => async (dispatch) => {\n    try {\n        dispatch({ type: ACTIVE_ADS_REQUEST })\n\n        const { data } = await axios.get('/api/ads/active/')\n\n        dispatch({\n            type: ACTIVE_ADS_SUCCESS,\n            payload: data,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ACTIVE_ADS_FAIL,\n            payload:\n                error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        })\n    }\n}\n\nexport const listPendingAds = () => async (dispatch, getState) => {\n    try {\n      dispatch({ type: PENDING_ADS_REQUEST })\n  \n      const {\n        userLogin: { userInfo },\n      } = getState()\n  \n      const config = {\n        headers: {\n          Authorization: `Bearer ${userInfo.token}`,\n        },\n      }\n  \n      const { data } = await axios.get(\n        '/api/ads/pending/',\n        config\n      )\n  \n      dispatch({\n        type: PENDING_ADS_SUCCESS,\n        payload: data,\n      })\n  \n    } catch (error) {\n      dispatch({\n        type: PENDING_ADS_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      })\n    }\n}","import React, { useEffect, useState, useCallback } from 'react'  // Added useCallback\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Modal, Button } from 'react-bootstrap'\nimport { listActiveAds } from '../actions/adActions'\nimport { Link } from 'react-router-dom'\n\nfunction FullScreenAd() {\n  const [showAd, setShowAd] = useState(false)\n  const [currentAdIndex, setCurrentAdIndex] = useState(0)\n  \n  const dispatch = useDispatch()\n  \n  const activeAdsList = useSelector(state => state.activeAdsList || {})\n  const { loading, activeAds } = activeAdsList  // Removed unused 'error'\n\n  // Using useCallback to memoize the function\n  const rotateAd = useCallback(() => {\n    if (activeAds && activeAds.length > 0) {\n      setCurrentAdIndex(prevIndex => (prevIndex + 1) % activeAds.length)\n    }\n  }, [activeAds])  // Added dependency\n\n  useEffect(() => {\n    dispatch(listActiveAds())\n    \n    const initialTimer = setTimeout(() => {\n      if (activeAds && activeAds.length > 0) {\n        setShowAd(true)\n      }\n    }, 5000)\n    \n    const interval = setInterval(rotateAd, 10000)\n    \n    return () => {\n      clearTimeout(initialTimer)\n      clearInterval(interval)\n    }\n  }, [dispatch, activeAds, rotateAd])  // Added dependencies\n\n  if (loading || !activeAds || activeAds.length === 0) {\n    return null\n  }\n\n  const currentAd = activeAds[currentAdIndex]\n\n  return (\n    <Modal \n      show={showAd} \n      onHide={() => setShowAd(false)} \n      size=\"lg\" \n      centered\n      backdrop=\"static\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>{currentAd.ad_title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {currentAd.ad_type === 'image' ? (\n          <img \n            src={currentAd.ad_file_url} \n            alt={currentAd.ad_title} \n            style={{ width: '100%', maxHeight: '60vh', objectFit: 'contain' }}\n          />\n        ) : (\n          <video \n            controls \n            style={{ width: '100%', maxHeight: '60vh' }}\n            autoPlay\n          >\n            <source src={currentAd.ad_file_url} type=\"video/mp4\" />\n          </video>\n        )}\n        <p className=\"mt-3\">{currentAd.ad_description}</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button as={Link} to={`/order-now?ad=${currentAd.id}`} variant=\"primary\">\n          Order Now\n        </Button>\n        <Button variant=\"secondary\" onClick={() => setShowAd(false)}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default FullScreenAd","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap'\nimport { FaAd, FaArrowRight, FaCheckCircle } from 'react-icons/fa'\nimport './css/AdvertisePage.css' // Create this CSS file\n\nfunction AdvertisePage() {\n  return (\n    <Container className=\"advertise-page py-5\">\n      <Row className=\"justify-content-center mb-5\">\n        <Col lg={8} className=\"text-center\">\n          <h1 className=\"display-4 mb-4\">\n            <FaAd className=\"text-primary mr-2\" />\n            Advertise With Us\n          </h1>\n          <p className=\"lead text-muted\">\n            Reach thousands of potential customers and grow your business\n          </p>\n        </Col>\n      </Row>\n\n      <Row className=\"justify-content-center\">\n        <Col md={6} lg={5} className=\"mb-4\">\n          <Card className=\"pricing-card h-100 shadow-sm border-0\">\n            <Card.Body className=\"text-center p-4\">\n              <div className=\"pricing-badge bg-light text-primary mb-3\">POPULAR</div>\n              <h3 className=\"mb-3\">Daily Promotion</h3>\n              <h2 className=\"display-4 mb-3\">\n                <span className=\"text-primary\">Tsh 500</span>/day\n              </h2>\n              <ul className=\"list-unstyled mb-4\">\n                <li className=\"mb-2\"><FaCheckCircle className=\"text-success mr-2\" />24-hour visibility</li>\n                <li className=\"mb-2\"><FaCheckCircle className=\"text-success mr-2\" />Featured placement</li>\n                <li className=\"mb-2\"><FaCheckCircle className=\"text-success mr-2\" />Detailed analytics</li>\n              </ul>\n              <Button \n                as={Link} \n                to=\"/ad-submission\" \n                variant=\"primary\" \n                size=\"lg\"\n                className=\"w-100 py-3\"\n              >\n                Get Started <FaArrowRight className=\"ml-2\" />\n              </Button>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col md={6} lg={5} className=\"mb-4\">\n          <Card className=\"pricing-card h-100 shadow-sm border-0\">\n            <Card.Body className=\"text-center p-4\">\n              <h3 className=\"mb-3\">Monthly Package</h3>\n              <h2 className=\"display-4 mb-3\">\n                <span className=\"text-primary\">Tsh 5000</span>/month\n              </h2>\n              <ul className=\"list-unstyled mb-4\">\n                <li className=\"mb-2\"><FaCheckCircle className=\"text-success mr-2\" />30-day visibility</li>\n                <li className=\"mb-2\"><FaCheckCircle className=\"text-success mr-2\" />Premium placement</li>\n                <li className=\"mb-2\"><FaCheckCircle className=\"text-success mr-2\" />Detailed analytics</li>\n                <li className=\"mb-2\"><FaCheckCircle className=\"text-success mr-2\" />24/7 support</li>\n              </ul>\n              <Button \n                as={Link} \n                to=\"/ad-submission\" \n                variant=\"outline-primary\" \n                size=\"lg\"\n                className=\"w-100 py-3\"\n              >\n                Get Started <FaArrowRight className=\"ml-2\" />\n              </Button>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row className=\"justify-content-center mt-5\">\n        <Col lg={8} className=\"text-center\">\n          <div className=\"bg-light p-4 rounded\">\n            <h4 className=\"mb-3\">Have questions?</h4>\n            <p className=\"mb-0\">\n              Contact our advertising team at <a href=\"mailto:ads@brkluxe.com\">ads@brkluxe.com</a> \n              or call <a href=\"tel:+255613509299\">+255 613 509 299</a>\n            </p>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default AdvertisePage","import React, { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, Button, Row, Col, Container, Spinner, Alert } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { submitAd } from '../actions/adActions'\nimport { AD_SUBMISSION_RESET } from '../constants'\n\nfunction AdSubmissionPage() {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [phone, setPhone] = useState('')\n  const [adTitle, setAdTitle] = useState('')\n  const [adDescription, setAdDescription] = useState('')\n  const [adType, setAdType] = useState('image')\n  const [adFile, setAdFile] = useState(null)\n  const [paymentProof, setPaymentProof] = useState(null)\n  const [agreement, setAgreement] = useState(false)\n  const [paymentMethod, setPaymentMethod] = useState('lipa_namba')\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  // Safe destructuring with default values\n  const { \n    loading = false, \n    error = null, \n    success = false \n  } = useSelector(state => state.adSubmissionReducer || {}) // Note the .adSubmissionReducer\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    \n    const formData = new FormData()\n    formData.append('name', name)\n    formData.append('email', email)\n    formData.append('phone_number', phone)\n    formData.append('ad_title', adTitle)\n    formData.append('ad_description', adDescription)\n    formData.append('ad_type', adType)\n    formData.append('ad_file', adFile)\n    formData.append('payment_proof', paymentProof)\n    formData.append('duration_days', 30) // Default to 30 days\n    \n    dispatch(submitAd(formData))\n  }\n\n  if (success) {\n    dispatch({ type: AD_SUBMISSION_RESET })\n    history.push('/')\n    return null\n  }\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={8}>\n          <h2 className=\"my-4\">Submit Your Ad</h2>\n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          \n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId=\"name\">\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter your name\"\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n                required\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"email\">\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type=\"email\"\n                placeholder=\"Enter email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"phone\">\n              <Form.Label>Phone Number</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter phone number\"\n                value={phone}\n                onChange={(e) => setPhone(e.target.value)}\n                required\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"adTitle\">\n              <Form.Label>Ad Title</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter ad title\"\n                value={adTitle}\n                onChange={(e) => setAdTitle(e.target.value)}\n                required\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"adDescription\">\n              <Form.Label>Ad Description</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={3}\n                placeholder=\"Enter ad description\"\n                value={adDescription}\n                onChange={(e) => setAdDescription(e.target.value)}\n                required\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"adType\">\n              <Form.Label>Ad Type</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={adType}\n                onChange={(e) => setAdType(e.target.value)}\n              >\n                <option value=\"image\">Image</option>\n                <option value=\"video\">Video</option>\n              </Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId=\"adFile\">\n              <Form.Label>Upload Ad File</Form.Label>\n              <Form.File\n                onChange={(e) => setAdFile(e.target.files[0])}\n                accept={adType === 'image' ? 'image/*' : 'video/*'}\n                required\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"paymentMethod\">\n              <Form.Label>Payment Method</Form.Label>\n              <Form.Control\n                as=\"select\"\n                value={paymentMethod}\n                onChange={(e) => setPaymentMethod(e.target.value)}\n              >\n                <option value=\"lipa_namba\">Lipa Namba</option>\n                <option value=\"other\">Other</option>\n              </Form.Control>\n              {paymentMethod === 'lipa_namba' && (\n                <small className=\"text-muted\">\n                  Please send payment to: 0712345678 (Example number)\n                </small>\n              )}\n            </Form.Group>\n\n            <Form.Group controlId=\"paymentProof\">\n              <Form.Label>Payment Proof (Screenshot)</Form.Label>\n              <Form.File\n                onChange={(e) => setPaymentProof(e.target.files[0])}\n                accept=\"image/*\"\n                required\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"agreement\">\n              <Form.Check\n                type=\"checkbox\"\n                label=\"I confirm that I have made the payment and the details above are correct.\"\n                checked={agreement}\n                onChange={(e) => setAgreement(e.target.checked)}\n                required\n              />\n            </Form.Group>\n\n            <Button \n              variant=\"primary\" \n              type=\"submit\" \n              disabled={loading || !agreement}\n            >\n              {loading ? (\n                <>\n                  <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  />\n                  {' Submitting...'}\n                </>\n              ) : 'Submit Ad'}\n            </Button>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default AdSubmissionPage","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Table, Button, Row, Col, Container, Spinner, Alert } from 'react-bootstrap'\nimport { listPendingAds, approveAd } from '../actions/adActions'\nimport { AD_APPROVAL_RESET } from '../constants'\n\nfunction AdApprovalPage({ history }) {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const pendingAdsList = useSelector(state => state.pendingAdsList)\n  const { loading, error, pendingAds } = pendingAdsList\n\n  const adApproval = useSelector(state => state.adApproval)\n  const { success: successApprove } = adApproval\n\n  useEffect(() => {\n    // Redirect if not admin\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push('/login')\n    }\n\n    dispatch(listPendingAds())\n\n    if (successApprove) {\n      dispatch({ type: AD_APPROVAL_RESET })\n      dispatch(listPendingAds())\n    }\n  }, [dispatch, history, userInfo, successApprove])\n\n  const approveHandler = (id) => {\n    if (window.confirm('Are you sure you want to approve this ad?')) {\n      dispatch(approveAd(id))\n    }\n  }\n\n  return (\n    <Container>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h2 className=\"my-4\">Pending Ads for Approval</h2>\n        </Col>\n      </Row>\n\n      {loading ? (\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      ) : error ? (\n        <Alert variant=\"danger\">{error}</Alert>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>AD TITLE</th>\n              <th>ADVERTISER</th>\n              <th>EMAIL</th>\n              <th>PHONE</th>\n              <th>SUBMITTED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {pendingAds.map(ad => (\n              <tr key={ad.id}>\n                <td>{ad.id}</td>\n                <td>{ad.ad_title}</td>\n                <td>{ad.name}</td>\n                <td><a href={`mailto:${ad.email}`}>{ad.email}</a></td>\n                <td><a href={`tel:${ad.phone_number}`}>{ad.phone_number}</a></td>\n                <td>{new Date(ad.created_at).toLocaleDateString()}</td>\n                <td>\n                  <Button \n                    variant=\"success\" \n                    className=\"btn-sm\" \n                    onClick={() => approveHandler(ad.id)}\n                  >\n                    Approve\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n    </Container>\n  )\n}\n\nexport default AdApprovalPage","import React from 'react'\nimport { Container, Row, Col, Card, ListGroup, Button } from 'react-bootstrap'\nimport { FaPhone, FaWhatsapp, FaEnvelope, FaClock } from 'react-icons/fa'\nimport './css/HelpPage.css' // Create this CSS file\n\nfunction HelpPage() {\n  const contacts = [\n    { number: '+255613509299', type: 'phone' },\n    { number: '+255699183448', type: 'whatsapp' },\n    { number: '+255767007987', type: 'phone' }\n  ]\n\n  return (\n    <Container className=\"help-page py-5\">\n      <Row className=\"mb-5\">\n        <Col lg={8} className=\"mx-auto text-center\">\n          <h1 className=\"display-4 mb-3\">Help Center</h1>\n          <p className=\"lead text-muted\">\n            We're here to help you with any questions or issues\n          </p>\n        </Col>\n      </Row>\n\n      <Row className=\"mb-5\">\n        <Col lg={6} className=\"mb-4\">\n          <Card className=\"h-100 shadow-sm border-0\">\n            <Card.Body className=\"p-4\">\n              <div className=\"icon-wrapper bg-primary-light mb-4\">\n                <FaPhone className=\"text-primary\" size={24} />\n              </div>\n              <h3 className=\"mb-4\">Contact Support</h3>\n              <ListGroup variant=\"flush\">\n                {contacts.map((contact, index) => (\n                  <ListGroup.Item key={index} className=\"border-0 px-0\">\n                    <div className=\"d-flex align-items-center\">\n                      {contact.type === 'whatsapp' ? (\n                        <FaWhatsapp className=\"text-success mr-3\" size={20} />\n                      ) : (\n                        <FaPhone className=\"text-primary mr-3\" size={20} />\n                      )}\n                      <div>\n                        <h5 className=\"mb-0\">{contact.number}</h5>\n                        <small className=\"text-muted\">\n                          {contact.type === 'whatsapp' ? 'WhatsApp Available' : 'Call Us'}\n                        </small>\n                      </div>\n                      <Button \n                        variant=\"link\" \n                        href={`tel:${contact.number}`}\n                        className=\"ml-auto\"\n                      >\n                        Call Now\n                      </Button>\n                    </div>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col lg={6} className=\"mb-4\">\n          <Card className=\"h-100 shadow-sm border-0\">\n            <Card.Body className=\"p-4\">\n              <div className=\"icon-wrapper bg-primary-light mb-4\">\n                <FaEnvelope className=\"text-primary\" size={24} />\n              </div>\n              <h3 className=\"mb-4\">Technical Support</h3>\n              <div className=\"mb-4\">\n                <h5 className=\"d-flex align-items-center\">\n                  <FaPhone className=\"text-primary mr-3\" size={20} />\n                  <span>+255620148031</span>\n                </h5>\n                <p className=\"text-muted\">\n                  Available for technical issues and platform support\n                </p>\n              </div>\n              <div>\n                <h5 className=\"d-flex align-items-center mb-3\">\n                  <FaEnvelope className=\"text-primary mr-3\" size={20} />\n                  <span>support@brkluxe.com</span>\n                </h5>\n                <Button \n                  variant=\"primary\" \n                  href=\"mailto:support@brkluxe.com\"\n                  className=\"w-100\"\n                >\n                  Email Support\n                </Button>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col lg={8} className=\"mx-auto\">\n          <Card className=\"border-0 shadow-sm\">\n            <Card.Body className=\"p-4\">\n              <div className=\"d-flex align-items-center\">\n                <div className=\"icon-wrapper bg-primary-light mr-4\">\n                  <FaClock className=\"text-primary\" size={24} />\n                </div>\n                <div>\n                  <h3 className=\"mb-2\">Operating Hours</h3>\n                  <p className=\"mb-1\"><strong>Monday - Friday:</strong> 8:00 AM - 8:00 PM</p>\n                  <p className=\"mb-1\"><strong>Saturday:</strong> 9:00 AM - 6:00 PM</p>\n                  <p className=\"mb-0\"><strong>Sunday:</strong> 10:00 AM - 4:00 PM</p>\n                </div>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default HelpPage","import React from 'react'\nimport { Container, Row, Col, Card } from 'react-bootstrap'\nimport { FaShoppingBag, FaThumbsUp, FaHeadset } from 'react-icons/fa'\nimport teamPhoto from '../assets/logo.jpeg' // Add your team photo\nimport './css/AboutPage.css' // Create this CSS file\n\nfunction AboutPage() {\n  return (\n    <Container className=\"about-page py-5\">\n      <Row className=\"mb-5\">\n        <Col lg={8} className=\"mx-auto text-center\">\n          <h1 className=\"display-4 mb-4\">About BRK_LUXE</h1>\n          <p className=\"lead text-muted\">\n            Redefining your shopping experience with quality and convenience\n          </p>\n        </Col>\n      </Row>\n\n      <Row className=\"mb-5 align-items-center\">\n        <Col lg={6} className=\"mb-4 mb-lg-0\">\n          <div className=\"about-image rounded-lg overflow-hidden shadow\">\n            <img \n              src={teamPhoto} \n              alt=\"BRK_LUXE Team\" \n              className=\"img-fluid\"\n            />\n          </div>\n        </Col>\n        <Col lg={6}>\n          <h2 className=\"mb-4\">Our Story</h2>\n          <p className=\"mb-4\">\n            Founded in 2023, BRK_LUXE Free Market began with a simple mission: to make shopping \n            easy, convenient, and enjoyable for everyone in Tanzania. We believe in offering \n            top-quality items at fair prices, with a focus on customer satisfaction and excellent service.\n          </p>\n          <div className=\"d-flex align-items-center mb-3\">\n            <FaShoppingBag className=\"text-primary mr-3\" size={24} />\n            <div>\n              <h5 className=\"mb-0\">Wide Selection</h5>\n              <p className=\"text-muted mb-0\">Thousands of quality products</p>\n            </div>\n          </div>\n          <div className=\"d-flex align-items-center mb-3\">\n            <FaThumbsUp className=\"text-primary mr-3\" size={24} />\n            <div>\n              <h5 className=\"mb-0\">Customer First</h5>\n              <p className=\"text-muted mb-0\">Your satisfaction is our priority</p>\n            </div>\n          </div>\n          <div className=\"d-flex align-items-center\">\n            <FaHeadset className=\"text-primary mr-3\" size={24} />\n            <div>\n              <h5 className=\"mb-0\">24/7 Support</h5>\n              <p className=\"text-muted mb-0\">We're always here to help</p>\n            </div>\n          </div>\n        </Col>\n      </Row>\n\n      <Row className=\"mb-5\">\n        <Col className=\"text-center\">\n          <Card className=\"border-0 shadow-sm py-4\">\n            <Card.Body>\n              <h3 className=\"mb-4\">Meet The Founders</h3>\n              <Row className=\"justify-content-center\">\n                <Col md={4} className=\"mb-4\">\n                  <div className=\"team-member\">\n                    <div className=\"team-img mb-3 rounded-circle overflow-hidden\">\n                      <img \n                        src=\"https://via.placeholder.com/150\" \n                        alt=\"Founder\" \n                        className=\"img-fluid\"\n                      />\n                    </div>\n                    <h5>[Your Name]</h5>\n                    <p className=\"text-muted\">Co-Founder & [Your Profession]</p>\n                  </div>\n                </Col>\n                <Col md={4} className=\"mb-4\">\n                  <div className=\"team-member\">\n                    <div className=\"team-img mb-3 rounded-circle overflow-hidden\">\n                      <img \n                        src=\"https://via.placeholder.com/150\" \n                        alt=\"Co-Founder\" \n                        className=\"img-fluid\"\n                      />\n                    </div>\n                    <h5>[Co-Founder Name]</h5>\n                    <p className=\"text-muted\">Co-Founder & [Profession]</p>\n                  </div>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col className=\"text-center\">\n          <div className=\"social-links\">\n            <h4 className=\"mb-4\">Connect With Us</h4>\n            <a href=\"https://instagram.com/brk_luxe_free_market\" className=\"btn btn-outline-primary mx-2\">\n              <i className=\"fab fa-instagram\"></i> @brk_luxe_free_market\n            </a>\n          </div>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default AboutPage","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, Button, Row, Col, Container, Alert, Spinner } from 'react-bootstrap'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { createOrderRequest } from '../actions/orderActions'\nimport { ORDER_REQUEST_RESET } from '../constants'\n\nfunction OrderNowPage() {\n  const [formData, setFormData] = useState({\n    name: '',\n    region: '',\n    district: '',\n    ward: '',\n    street: '',\n    product_details: ''\n  })\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n  const location = useLocation()\n\n  const orderRequest = useSelector(state => state.orderRequest)\n  const { loading, error, success } = orderRequest\n\n  const { userInfo } = useSelector(state => state.userLogin || {})\n\n  // Handle form input changes\n  const handleChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.id]: e.target.value\n    })\n  }\n\n  // Set product details from URL\n  useEffect(() => {\n    if (location.search) {\n      const params = new URLSearchParams(location.search)\n      const productId = params.get('product')\n      if (productId) {\n        setFormData(prev => ({\n          ...prev,\n          product_details: `Order for product ID: ${productId}`\n        }))\n      }\n    }\n  }, [location])\n\n  // Handle redirects\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login?redirect=/order-now' + location.search)\n      return\n    }\n\n    if (success) {\n      const timer = setTimeout(() => {\n        dispatch({ type: ORDER_REQUEST_RESET })\n        history.push('/')\n      }, 2000) // Redirect after 2 seconds to show success message\n      return () => clearTimeout(timer)\n    }\n  }, [dispatch, history, userInfo, success, location.search])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    \n    if (!userInfo) {\n      history.push('/login?redirect=/order-now' + location.search)\n      return\n    }\n\n    dispatch(createOrderRequest({\n      ...formData,\n      user: userInfo.id\n    }))\n  }\n\n  return (\n    <Container>\n      <Row className=\"justify-content-md-center\">\n        <Col xs={12} md={8} lg={6}>\n          <h2 className=\"my-4 text-center\">Place Your Order</h2>\n          \n          {success && (\n            <Alert variant=\"success\" className=\"text-center\">\n              Order submitted successfully! Redirecting...\n            </Alert>\n          )}\n          \n          {error && <Alert variant=\"danger\">{error}</Alert>}\n          \n          <Form onSubmit={submitHandler}>\n            {['name', 'region', 'district', 'ward', 'street'].map((field) => (\n              <Form.Group key={field} controlId={field}>\n                <Form.Label>\n                  {field.charAt(0).toUpperCase() + field.slice(1).replace('_', ' ')}\n                </Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  value={formData[field]}\n                  onChange={handleChange}\n                  required\n                  placeholder={`Enter your ${field.replace('_', ' ')}`}\n                />\n              </Form.Group>\n            ))}\n\n            <Form.Group controlId=\"product_details\">\n              <Form.Label>Product Details</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows={3}\n                value={formData.product_details}\n                onChange={handleChange}\n                required\n                placeholder=\"Describe what you want to order\"\n              />\n            </Form.Group>\n\n            <div className=\"text-center mt-4\">\n              <Button \n                variant=\"primary\" \n                type=\"submit\"\n                disabled={loading}\n                size=\"lg\"\n              >\n                {loading ? (\n                  <>\n                    <Spinner\n                      as=\"span\"\n                      animation=\"border\"\n                      size=\"sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                      className=\"mr-2\"\n                    />\n                    Processing...\n                  </>\n                ) : 'Submit Order'}\n              </Button>\n            </div>\n          </Form>\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default OrderNowPage","import axios from 'axios'\nimport {\n    ORDER_REQUEST_REQUEST,\n    ORDER_REQUEST_SUCCESS,\n    ORDER_REQUEST_FAIL\n} from '../constants'\n\nexport const createOrderRequest = (orderData) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: ORDER_REQUEST_REQUEST })\n\n        const { userLogin: { userInfo } } = getState()\n\n        if (!userInfo || !userInfo.token) {\n            throw new Error('Authentication required')\n        }\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        }\n\n        // Add timestamp and additional metadata\n        const completeOrderData = {\n            ...orderData,\n            ordered_at: new Date().toISOString(),\n            status: 'pending'\n        }\n\n        const { data } = await axios.post(\n            '/api/orders/request/',\n            completeOrderData,\n            config\n        )\n\n        dispatch({\n            type: ORDER_REQUEST_SUCCESS,\n            payload: data,\n        })\n\n        return data // Return the created order data\n\n    } catch (error) {\n        const errorMessage = error.response?.data?.detail || \n                            error.response?.data?.message || \n                            error.message ||\n                            'Failed to create order'\n        \n        dispatch({\n            type: ORDER_REQUEST_FAIL,\n            payload: errorMessage,\n        })\n\n        throw error // Re-throw for component to handle if needed\n    }\n}","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport ProductListPage from './pages/ProductsListPage'\nimport ProductDetailsPage from './pages/ProductDetailsPage'\nimport CheckoutPage from './pages/CheckoutPage'\nimport NavBar from './components/Navbar'\nimport PaymentStatus from './components/PaymentStatus'\nimport Login from './pages/LoginPage'\nimport Register from './pages/RegisterPage'\nimport CardUpdatePage from './pages/CardUpdatePage'\nimport CardDetailsPage from './pages/CardDetailsPage'\nimport AccountPage from './pages/AccountPage'\nimport AccountUpdatePage from './pages/AccountUpdatePage'\nimport DeleteUserAccountPage from './pages/DeleteUserAccountPage'\nimport AllAddressesOfUserPage from './pages/AllAddressesOfUserPage'\nimport AddressUpdatePage from './pages/AddressUpdatePage'\nimport OrdersListPage from './pages/OrdersListPage'\nimport ProductCreatePage from './pages/ProductCreatePage'\nimport ProductUpdatePage from './pages/ProductUpdatePage'\nimport NotFound from './pages/NotFoundPage'\n\n// Import the new components\nimport FullScreenAd from './components/FullScreenAd'\nimport AdvertisePage from './pages/AdvertisePage'\nimport AdSubmissionPage from './pages/AdSubmissionPage'\nimport AdApprovalPage from './pages/AdApprovalPage'\nimport HelpPage from './pages/HelpPage'\nimport AboutPage from './pages/AboutPage'\nimport OrderNowPage from './pages/OrderNowPage'\n\n\nconst App = () => {\n\n  return (\n    <div>\n      <Router>\n        <NavBar />\n        <FullScreenAd />\n        <div className=\"container mt-4\">\n          <Switch>\n            <Route path=\"/\" component={ProductListPage} exact />\n            <Route path=\"/new-product/\" component={ProductCreatePage} exact />\n            <Route path=\"/product/:id/\" component={ProductDetailsPage} exact />\n            <Route path=\"/product-update/:id/\" component={ProductUpdatePage} exact />\n            <Route path=\"/product/:id/checkout/\" component={CheckoutPage} exact />\n            <Route path=\"/payment-status\" component={PaymentStatus} exact />\n            <Route path=\"/login\" component={Login} exact />\n            <Route path=\"/register\" component={Register} exact />\n            <Route path=\"/account\" component={AccountPage} exact />\n            <Route path=\"/account/update/\" component={AccountUpdatePage} exact />\n            <Route path=\"/account/delete/\" component={DeleteUserAccountPage} exact />\n            <Route path=\"/stripe-card-details\" component={CardDetailsPage} exact />\n            <Route path=\"/stripe-card-update\" component={CardUpdatePage} exact />\n            <Route path=\"/all-addresses/\" component={AllAddressesOfUserPage} exact />\n            <Route path=\"/all-addresses/:id/\" component={AddressUpdatePage} exact />\n            <Route path=\"/all-orders/\" component={OrdersListPage} exact />\n\n            <Route path=\"/advertise\" component={AdvertisePage} exact />\n            <Route path=\"/ad-submission\" component={AdSubmissionPage} exact />\n            <Route path=\"/ad-approval\" component={AdApprovalPage} exact />\n            <Route path=\"/help\" component={HelpPage} exact />\n            <Route path=\"/about\" component={AboutPage} exact />\n            <Route path=\"/order-now\" component={OrderNowPage} exact />\n\n            <Route path=\"\" component={NotFound} exact />\n          </Switch>\n        </div>\n      </Router>\n    </div >\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport App from './App';\nimport \"./App.css\"\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}