{"version":3,"sources":["constants/index.js","reducers/orderReducers.js","reducers/index.js","reducers/productReducers.js","reducers/cardReducers.js","reducers/userReducers.js","reducers/adReducers.js","store.js","actions/productActions.js","components/Message.js","components/Product.js","components/BottomNavBar.js","components/AdSlider.js","pages/ProductsListPage.js","pages/ProductDetailsPage.js","actions/cardActions.js","components/DeleteCardComponent.js","components/CreateCardComponent.js","actions/userActions.js","components/ChargeCardComponent.js","components/UserAddressComponent.js","pages/CheckoutPage.js","assets/logo.jpeg","components/Navbar.js","components/PaymentStatus.js","pages/LoginPage.js","pages/RegisterPage.js","pages/CardUpdatePage.js","pages/CardDetailsPage.js","pages/AccountPage.js","pages/AccountUpdatePage.js","pages/DeleteUserAccountPage.js","components/CreateAddressComponent.js","pages/AllAddressesOfUserPage.js","pages/AddressUpdatePage.js","components/GetDate.js","components/SearchBarForOrdersPage.js","pages/OrdersListPage.js","components/Loader.js","pages/ProductCreatePage.js","pages/ProductUpdatePage.js","pages/NotFoundPage.js","actions/adActions.js","components/FullScreenAd.js","pages/AdvertisePage.js","assets/lipa_namba.jpeg","pages/AdSubmissionPage.js","pages/AdApprovalPage.js","pages/HelpPage.js","pages/AboutPage.js","pages/OrderNowPage.js","actions/orderActions.js","components/SearchBarForProducts.js","pages/SearchPage.js","App.js","index.js"],"names":["PRODUCTS_LIST_REQUEST","PRODUCTS_LIST_SUCCESS","PRODUCTS_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","CREATE_PRODUCT_REQUEST","CREATE_PRODUCT_SUCCESS","CREATE_PRODUCT_FAIL","CREATE_PRODUCT_RESET","UPDATE_PRODUCT_REQUEST","UPDATE_PRODUCT_SUCCESS","UPDATE_PRODUCT_FAIL","UPDATE_PRODUCT_RESET","DELETE_PRODUCT_REQUEST","DELETE_PRODUCT_SUCCESS","DELETE_PRODUCT_FAIL","DELETE_PRODUCT_RESET","CHECK_TOKEN_VALID_REQUEST","CHECK_TOKEN_VALID_SUCCESS","CHECK_TOKEN_VALID_FAIL","CHECK_TOKEN_VALID_RESET","CARD_CREATE_REQUEST","CARD_CREATE_SUCCESS","CARD_CREATE_FAIL","CARD_CREATE_RESET","CHARGE_CARD_REQUEST","CHARGE_CARD_SUCCESS","CHARGE_CARD_FAIL","CHARGE_CARD_RESET","SAVED_CARDS_LIST_REQUEST","SAVED_CARDS_LIST_SUCCESS","SAVED_CARDS_LIST_FAIL","DELETE_SAVED_CARD_REQUEST","DELETE_SAVED_CARD_SUCCESS","DELETE_SAVED_CARD_FAIL","UPDATE_STRIPE_CARD_REQUEST","UPDATE_STRIPE_CARD_SUCCESS","UPDATE_STRIPE_CARD_FAIL","UPDATE_STRIPE_CARD_RESET","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","UPDATE_USER_DETAILS_REQUEST","UPDATE_USER_DETAILS_SUCCESS","UPDATE_USER_DETAILS_FAIL","UPDATE_USER_DETAILS_RESET","DELETE_USER_ACCOUNT_REQUEST","DELETE_USER_ACCOUNT_SUCCESS","DELETE_USER_ACCOUNT_FAIL","DELETE_USER_ACCOUNT_RESET","GET_USER_ALL_ADDRESSES_REQUEST","GET_USER_ALL_ADDRESSES_SUCCESS","GET_USER_ALL_ADDRESSES_FAIL","GET_SINGLE_ADDRESS_REQUEST","GET_SINGLE_ADDRESS_SUCCESS","GET_SINGLE_ADDRESS_FAIL","GET_SINGLE_ADDRESS_RESET","CREATE_USER_ADDRESS_REQUEST","CREATE_USER_ADDRESS_SUCCESS","CREATE_USER_ADDRESS_FAIL","CREATE_USER_ADDRESS_RESET","UPDATE_USER_ADDRESS_REQUEST","UPDATE_USER_ADDRESS_SUCCESS","UPDATE_USER_ADDRESS_FAIL","UPDATE_USER_ADDRESS_RESET","DELETE_USER_ADDRESS_REQUEST","DELETE_USER_ADDRESS_SUCCESS","DELETE_USER_ADDRESS_FAIL","DELETE_USER_ADDRESS_RESET","GET_ALL_ORDERS_REQUEST","GET_ALL_ORDERS_SUCCESS","GET_ALL_ORDERS_FAIL","CHANGE_DELIVERY_STATUS_REQUEST","CHANGE_DELIVERY_STATUS_SUCCESS","CHANGE_DELIVERY_STATUS_FAIL","CHANGE_DELIVERY_STATUS_RESET","AD_SUBMISSION_REQUEST","AD_SUBMISSION_SUCCESS","AD_SUBMISSION_FAIL","AD_SUBMISSION_RESET","AD_APPROVAL_REQUEST","AD_APPROVAL_SUCCESS","AD_APPROVAL_FAIL","PENDING_ADS_REQUEST","PENDING_ADS_SUCCESS","PENDING_ADS_FAIL","ACTIVE_ADS_REQUEST","ACTIVE_ADS_SUCCESS","ACTIVE_ADS_FAIL","ORDER_REQUEST_REQUEST","ORDER_REQUEST_SUCCESS","ORDER_REQUEST_FAIL","ORDER_REQUEST_RESET","initialState","loading","error","success","order","lastSubmitted","allReducers","combineReducers","productsListReducer","state","arguments","length","undefined","products","action","type","payload","productDetailsReducer","product","createProductReducer","updateProductReducer","deleteProductReducer","createCardReducer","cardData","chargeCardReducer","savedCardsListReducer","stripeCards","updateStripeCardtReducer","stripeCard","deleteSavedCardReducer","data","userLoginReducer","userInfo","userRegisterReducer","getSingleAddressReducer","address","getAllAddressesOfUserReducer","addresses","createUserAddressReducer","updateUserAddressReducer","deleteUserAddressReducer","getAllOrdersReducer","orders","changeDeliveryStatusReducer","checkTokenValidationReducer","valid","userDetailsReducer","user","userDetailsUpdateReducer","deleteUserAccountReducer","adSubmission","ad","adApproval","activeAds","pendingAds","orderRequest","Date","toISOString","middleware","thunk","localStorage","getItem","JSON","parse","store","createStore","composeWithDevTools","applyMiddleware","API_URL","process","getProductDetails","id","async","dispatch","axios","get","message","Message","_ref","variant","children","_jsx","Alert","Product","imageUrl","image","startsWith","Card","className","_jsxs","Body","Link","to","style","color","Img","src","width","height","aspectRatio","objectFit","borderRadius","onError","e","target","onerror","Title","as","fontSize","whiteSpace","overflow","textOverflow","name","Text","price","BottomNavBar","location","useLocation","activeTab","setActiveTab","useState","pathname","handleTabClick","tab","_Fragment","position","bottom","left","right","backgroundColor","borderTop","display","justifyContent","alignItems","padding","zIndex","onClick","textDecoration","FaHome","size","margin","FaSearch","FaCompass","FaBullhorn","FaUser","AdSlider","ads","setAds","setLoading","setError","activeIndex","setActiveIndex","videoLoading","setVideoLoading","autoplayBlocked","setAutoplayBlocked","videoMuted","setVideoMuted","carouselRef","useRef","videoRefs","useEffect","initialLoadingStates","initialAutoplayStates","initialMuteStates","forEach","index","ad_type","err","fetchAds","current","slice","video","onended","next","handleVideoEnd","onplay","prev","handleVideoPlay","onpause","handleVideoPause","currentTime","oncanplay","console","ad_file_url","playPromise","play","catch","updateVideoPlayback","selectedIndex","_videoMuted$index","isMuted","muted","pause","Spinner","animation","Carousel","ref","onSelect","indicators","controls","interval","map","_videoMuted$index2","Item","border","alt","ad_title","maxHeight","el","playsInline","preload","handlePlayClick","Button","top","opacity","newMuteState","toggleMute","background","textAlign","boxShadow","cursor","window","open","phone_number","fontWeight","marginBottom","textShadow","ad_description","ProductsListPage","history","useHistory","searchTerm","search","split","toLowerCase","useDispatch","selectedCategory","setSelectedCategory","categories","setCategories","uniqueCategories","Set","category","fetchCategories","useSelector","fetchProducts","log","filteredProducts","filter","matchesSearch","includes","matchesCategory","category_name","overflowX","ButtonGroup","borderColor","Row","Col","xs","sm","md","lg","xl","Math","floor","toLocaleString","ProductDetailsPage","_product$images","_product$images2","_product$supplier_inf","_product$supplier_inf2","match","show","setShow","quantity","setQuantity","currentImageIndex","setCurrentImageIndex","autoScroll","setAutoScroll","productDeletionSuccess","allImages","images","img","setInterval","clearInterval","_carouselRef$current$","imageWidth","offsetWidth","scrollTo","behavior","params","handleClose","alert","push","Modal","onHide","Header","closeButton","Footer","confirmDelete","getState","Error","config","headers","Authorization","token","access","withCredentials","delete","_error$response2","response","detail","Container","onMouseEnter","onMouseLeave","imagePath","prevImage","FaChevronLeft","nextImage","FaChevronRight","_","goToImage","admin","marginTop","handleShow","description","stock","Form","Group","controlId","Label","Control","value","onChange","Array","keys","x","encodeURIComponent","supplier_info","whatsapp_link","createCard","cardNumber","post","email","expMonth","expYear","cvc","saveCard","savedCardsList","DeleteCardComponent","userId","deleteCardNumber","runCardDeleteHandler","toggleRunCardDeleteHandler","c_number","card_number","current_year","getFullYear","CreateCardComponent","addressSelected","setRunCardDeleteHandler","differentCard","setDifferentCard","cardDetails","setCardDetails","cardDetailsId","setCardDetailsId","showStripeCard","setShowStripeCard","setEmail","setCardNumber","setExpMonth","setExpYear","setCvc","setSaveCard","showCardDetails","float","exp_month","exp_year","reload","onSubmit","preventDefault","Number","autoFocus","pattern","placeholder","maxLength","required","defaultValue","from","i","hidden","payWithSavedCard","title","logout","removeItem","checkTokenValidation","details","userDetails","getAllAddress","getSingleAddress","getAllOrders","ChargeCardComponent","selectedAddressId","chargeSuccessfull","chargeError","chargingStatus","card_data","last4","address_detail","house_no","landmark","city","pin_code","chargeCustomer","disabled","role","aria-hidden","UserAddressComponent","handleAddressId","idx","updatehandleAddressId","CheckoutPage","setAddressSelected","setSelectedAddressId","tokenError","cardCreationError","cardCreationLoading","Image","NavBar","isExcludedPage","flexDirection","LinkContainer","Navbar","bg","expand","collapseOnSelect","Brand","logo","marginRight","Toggle","aria-controls","Collapse","Nav","NavDropdown","username","logoutHandler","PaymentStatus","renderData","boughtData","LoginPage","setUsername","password","setPassword","login","setItem","stringify","RegisterPage","confirmPassword","setConfirmPassword","setMessage","register","CardUpdatePage","setName","addressCity","setAddressCity","addressCountry","setAddressCountry","addressState","setAddressState","addressZip","setAddressZip","customerId","setCustomerId","cardId","setCardId","customer_id","card_id","name_on_card","address_city","address_country","address_state","address_zip","each","setCustomerAndCardIds","cus_Id","card_Id","c_num","CardDetailsPage","setUserId","setDeleteCardNumber","AccountPage","userAccDetails","AccountUpdatePage","updatedUsername","updatedEmail","userData","put","userUpdateDetails","DeleteUserAccount","myPassword","setMyPassword","userAccountDelete","CreateAddressComponent","toggleCreateAddress","phoneNumber","setPhoneNumber","pinCode","setPinCode","houseNumber","setHouseNumber","setLandmark","setCity","setState","addressCreationSuccess","errorCreatingAddress","addressData","createUserAddress","InputGroup","AllAddressesOfUserPage","deleteAddress","setDeleteAddress","createAddress","setCreateAddress","loadingAllAddresses","addressDeletionSuccess","deleteAddressHandler","deleteUserAddress","AddressUpdatePage","errorFetchingAddress","addressUpdateSuccess","updatedAddress","updateUserAddress","dateCheck","param","dateValue","monthValue","yearValue","SearchBarForOrdersPage","handleSearchTerm","placeholderValue","setSearchTerm","OrdersListPage","todays_date","currentDateInfo","idOfchangeDeliveryStatus","setIdOfchangeDeliveryStatus","cloneSearchTerm","setCloneSearchTerm","loadingOrders","deliveryStatusChangeSuccess","deliveryStatusChangeSpinner","changeDeliveryStatusHandler","status","changeDeliveryStatus","term","Table","striped","bordered","item","ordered_item","paid_status","paid_at","total_price","is_delivered","delivered_at","Loader","ProductCreatePage","setDescription","setPrice","setStock","setImage","setCategory","setImages","productCreationSuccess","productCreationError","fetch","json","form_data","FormData","append","Object","fromEntries","entries","createProduct","finally","step","files","multiple","cat","ProductUpdatePage","loadingPageDetails","newImages","setNewImages","newImage","setNewImage","productUpdationSuccess","loadingProductUpdations","productUpdationError","formData","updateProduct","_error$response","defaultChecked","NotFoundPage","listPendingAds","FullScreenAd","showAd","setShowAd","currentAdIndex","setCurrentAdIndex","activeAdsList","rotateAd","useCallback","prevIndex","isMounted","initialTimer","setTimeout","clearTimeout","currentAd","centered","backdrop","autoPlay","AdvertisePage","FaAd","FaCheckCircle","FaArrowRight","href","AdSubmissionPage","phone","setPhone","countryCode","setCountryCode","adTitle","setAdTitle","adDescription","setAdDescription","adType","setAdType","adFile","setAdFile","paymentProof","setPaymentProof","agreement","setAgreement","paymentMethod","setPaymentMethod","showModal","setShowModal","modalMessage","setModalMessage","modalVariant","setModalVariant","adLoading","adError","adSuccess","timer","sanitizedPhone","test","fullPhoneNumber","submitAd","rows","File","accept","paymentInstructions","Check","label","checked","AdApprovalPage","userLogin","pendingAdsList","successApprove","isAdmin","approveHandler","confirm","approveAd","hover","responsive","created_at","toLocaleDateString","HelpPage","FaPhone","ListGroup","number","contact","FaWhatsapp","FaEnvelope","FaClock","AboutPage","teamPhoto","FaShoppingBag","FaThumbsUp","FaHeadset","OrderNowPage","setFormData","region","district","ward","street","showSuccess","setShowSuccess","URLSearchParams","productName","productPrice","supplierName","whatsappLink","handleChange","maxWidth","productId","cleanMessage","whatsappMessage","whatsappURL","orderData","whatsapp_message","orderDataWithoutUser","completeOrderData","ordered_at","_error$response2$data","_error$response3","_error$response3$data","errorMessage","SearchBarForProducts","SearchPage","App","Router","Switch","Route","path","component","ProductListPage","exact","Login","Register","DeleteUserAccountPage","NotFound","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.bb8161c0.chunk.js","sourcesContent":["// products list\nexport const PRODUCTS_LIST_REQUEST = \"PRODUCTS_LIST_REQUEST\" \nexport const PRODUCTS_LIST_SUCCESS = \"PRODUCTS_LIST_SUCCESS\"\nexport const PRODUCTS_LIST_FAIL = \"PRODUCTS_LIST_FAIL\"\n\n// product details\nexport const PRODUCT_DETAILS_REQUEST = \"PRODUCT_DETAILS_REQUEST\" \nexport const PRODUCT_DETAILS_SUCCESS = \"PRODUCT_DETAILS_SUCCESS\"\nexport const PRODUCT_DETAILS_FAIL = \"PRODUCT_DETAILS_FAIL\"\n\n// create product\nexport const CREATE_PRODUCT_REQUEST = \"CREATE_PRODUCT_REQUEST\" \nexport const CREATE_PRODUCT_SUCCESS = \"CREATE_PRODUCT_SUCCESS\" \nexport const CREATE_PRODUCT_FAIL = \"CREATE_PRODUCT_FAIL\" \nexport const CREATE_PRODUCT_RESET = \"CREATE_PRODUCT_RESET\" \n\n// update product\nexport const UPDATE_PRODUCT_REQUEST = \"UPDATE_PRODUCT_REQUEST\" \nexport const UPDATE_PRODUCT_SUCCESS = \"UPDATE_PRODUCT_SUCCESS\" \nexport const UPDATE_PRODUCT_FAIL = \"UPDATE_PRODUCT_FAIL\" \nexport const UPDATE_PRODUCT_RESET = \"UPDATE_PRODUCT_RESET\" \n\n// delete product\nexport const DELETE_PRODUCT_REQUEST = \"DELETE_PRODUCT_REQUEST\" \nexport const DELETE_PRODUCT_SUCCESS = \"DELETE_PRODUCT_SUCCESS\" \nexport const DELETE_PRODUCT_FAIL = \"DELETE_PRODUCT_FAIL\" \nexport const DELETE_PRODUCT_RESET = \"DELETE_PRODUCT_RESET\" \n\n// check token validation\nexport const CHECK_TOKEN_VALID_REQUEST = \"CHECK_TOKEN_VALID_REQUEST\"\nexport const CHECK_TOKEN_VALID_SUCCESS = \"CHECK_TOKEN_VALID_SUCCESS\"\nexport const CHECK_TOKEN_VALID_FAIL = \"CHECK_TOKEN_VALID_FAIL\"\nexport const CHECK_TOKEN_VALID_RESET = \"CHECK_TOKEN_VALID_RESET\"\n\n// create card\nexport const CARD_CREATE_REQUEST = \"CARD_CREATE_REQUEST\" \nexport const CARD_CREATE_SUCCESS = \"CARD_CREATE_SUCCESS\"\nexport const CARD_CREATE_FAIL = \"CARD_CREATE_FAIL\"\nexport const CARD_CREATE_RESET = \"CARD_CREATE_RESET\"\n\n// charge card\nexport const CHARGE_CARD_REQUEST = \"CHARGE_CARD_REQUEST\" \nexport const CHARGE_CARD_SUCCESS = \"CHARGE_CARD_SUCCESS\"\nexport const CHARGE_CARD_FAIL = \"CHARGE_CARD_FAIL\"\nexport const CHARGE_CARD_RESET = \"CHARGE_CARD_RESET\"\n\n// saved cards list\nexport const SAVED_CARDS_LIST_REQUEST = \"SAVED_CARDS_LIST_REQUEST\"\nexport const SAVED_CARDS_LIST_SUCCESS = \"SAVED_CARDS_LIST_SUCCESS\"\nexport const SAVED_CARDS_LIST_FAIL = \"SAVED_CARDS_LIST_FAIL\"\n\n// delete saved card\nexport const DELETE_SAVED_CARD_REQUEST = \"DELETE_SAVED_CARD_REQUEST\"\nexport const DELETE_SAVED_CARD_SUCCESS = \"DELETE_SAVED_CARD_SUCCESS\"\nexport const DELETE_SAVED_CARD_FAIL = \"DELETE_SAVED_CARD_FAIL\"\n\n// update saved card\nexport const UPDATE_STRIPE_CARD_REQUEST = \"UPDATE_STRIPE_CARD_REQUEST\"\nexport const UPDATE_STRIPE_CARD_SUCCESS = \"UPDATE_STRIPE_CARD_SUCCESS\"\nexport const UPDATE_STRIPE_CARD_FAIL = \"UPDATE_STRIPE_CARD_FAIL\"\nexport const UPDATE_STRIPE_CARD_RESET = \"UPDATE_STRIPE_CARD_RESET\"\n\n// user login/logout\nexport const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\"\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\"\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\"\nexport const USER_LOGOUT = \"USER_LOGOUT\"\n\n// user registration/signup\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\"\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\"\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\"\n\n// user info/details\nexport const USER_DETAILS_REQUEST = \"USER_DETAILS_REQUEST\"\nexport const USER_DETAILS_SUCCESS = \"USER_DETAILS_SUCCESS\"\nexport const USER_DETAILS_FAIL = \"USER_DETAILS_FAIL\"\n\n// user update details\nexport const UPDATE_USER_DETAILS_REQUEST = \"UPDATE_USER_DETAILS_REQUEST\"\nexport const UPDATE_USER_DETAILS_SUCCESS = \"UPDATE_USER_DETAILS_SUCCESS\"\nexport const UPDATE_USER_DETAILS_FAIL = \"UPDATE_USER_DETAILS_FAIL\"\nexport const UPDATE_USER_DETAILS_RESET = \"UPDATE_USER_DETAILS_RESET\"\n\n// delete user account\nexport const DELETE_USER_ACCOUNT_REQUEST = \"DELETE_USER_ACCOUNT_REQUEST\" \nexport const DELETE_USER_ACCOUNT_SUCCESS = \"DELETE_USER_ACCOUNT_SUCCESS\" \nexport const DELETE_USER_ACCOUNT_FAIL = \"DELETE_USER_ACCOUNT_FAIL\" \nexport const DELETE_USER_ACCOUNT_RESET = \"DELETE_USER_ACCOUNT_RESET\" \n\n// user all address\nexport const GET_USER_ALL_ADDRESSES_REQUEST = \"GET_USER_ALL_ADDRESSES_REQUEST\"\nexport const GET_USER_ALL_ADDRESSES_SUCCESS = \"GET_USER_ALL_ADDRESSES_SUCCESS\"\nexport const GET_USER_ALL_ADDRESSES_FAIL = \"GET_USER_ALL_ADDRESSES_FAIL\"\n\n// user single address details\nexport const GET_SINGLE_ADDRESS_REQUEST = \"GET_SINGLE_ADDRESS_REQUEST\"\nexport const GET_SINGLE_ADDRESS_SUCCESS = \"GET_SINGLE_ADDRESS_SUCCESS\"\nexport const GET_SINGLE_ADDRESS_FAIL = \"GET_SINGLE_ADDRESS_FAIL\"\nexport const GET_SINGLE_ADDRESS_RESET = \"GET_SINGLE_ADDRESS_RESET\"\n\n// create address\nexport const CREATE_USER_ADDRESS_REQUEST = \"CREATE_USER_ADDRESS_REQUEST\"\nexport const CREATE_USER_ADDRESS_SUCCESS = \"CREATE_USER_ADDRESS_SUCCESS\"\nexport const CREATE_USER_ADDRESS_FAIL = \"CREATE_USER_ADDRESS_FAIL\"\nexport const CREATE_USER_ADDRESS_RESET = \"CREATE_USER_ADDRESS_RESET\"\n\n// update address\nexport const UPDATE_USER_ADDRESS_REQUEST = \"UPDATE_USER_ADDRESS_REQUEST\"\nexport const UPDATE_USER_ADDRESS_SUCCESS = \"UPDATE_USER_ADDRESS_SUCCESS\"\nexport const UPDATE_USER_ADDRESS_FAIL = \"UPDATE_USER_ADDRESS_FAIL\"\nexport const UPDATE_USER_ADDRESS_RESET = \"UPDATE_USER_ADDRESS_RESET\"\n\n// delete user address\nexport const DELETE_USER_ADDRESS_REQUEST = \"DELETE_USER_ADDRESS_REQUEST\"\nexport const DELETE_USER_ADDRESS_SUCCESS = \"DELETE_USER_ADDRESS_SUCCESS\"\nexport const DELETE_USER_ADDRESS_FAIL = \"DELETE_USER_ADDRESS_FAIL\"\nexport const DELETE_USER_ADDRESS_RESET = \"DELETE_USER_ADDRESS_RESET\"\n\n// all orders list\nexport const GET_ALL_ORDERS_REQUEST = \"GET_ALL_ORDERS_REQUEST\"\nexport const GET_ALL_ORDERS_SUCCESS = \"GET_ALL_ORDERS_SUCCESS\"\nexport const GET_ALL_ORDERS_FAIL = \"GET_ALL_ORDERS_FAIL\"\n\n// change order delivery status\nexport const CHANGE_DELIVERY_STATUS_REQUEST = \"CHANGE_DELIVERY_STATUS_REQUEST\"\nexport const CHANGE_DELIVERY_STATUS_SUCCESS = \"CHANGE_DELIVERY_STATUS_SUCCESS\"\nexport const CHANGE_DELIVERY_STATUS_FAIL = \"CHANGE_DELIVERY_STATUS_FAIL\"\nexport const CHANGE_DELIVERY_STATUS_RESET = \"CHANGE_DELIVERY_STATUS_RESET\"\n\n// Ads\nexport const AD_SUBMISSION_REQUEST = \"AD_SUBMISSION_REQUEST\"\nexport const AD_SUBMISSION_SUCCESS = \"AD_SUBMISSION_SUCCESS\"\nexport const AD_SUBMISSION_FAIL = \"AD_SUBMISSION_FAIL\"\nexport const AD_SUBMISSION_RESET = \"AD_SUBMISSION_RESET\"\n\nexport const AD_APPROVAL_REQUEST = \"AD_APPROVAL_REQUEST\"\nexport const AD_APPROVAL_SUCCESS = \"AD_APPROVAL_SUCCESS\"\nexport const AD_APPROVAL_FAIL = \"AD_APPROVAL_FAIL\"\nexport const AD_APPROVAL_RESET = \"AD_APPROVAL_RESET\"\n\n// Pending Ads List\nexport const PENDING_ADS_REQUEST = \"PENDING_ADS_REQUEST\"\nexport const PENDING_ADS_SUCCESS = \"PENDING_ADS_SUCCESS\"\nexport const PENDING_ADS_FAIL = \"PENDING_ADS_FAIL\"\n\n// Active Ads\nexport const ACTIVE_ADS_REQUEST = \"ACTIVE_ADS_REQUEST\"\nexport const ACTIVE_ADS_SUCCESS = \"ACTIVE_ADS_SUCCESS\"\nexport const ACTIVE_ADS_FAIL = \"ACTIVE_ADS_FAIL\"\n\n// Orders\nexport const ORDER_REQUEST_REQUEST = \"ORDER_REQUEST_REQUEST\"\nexport const ORDER_REQUEST_SUCCESS = \"ORDER_REQUEST_SUCCESS\"\nexport const ORDER_REQUEST_FAIL = \"ORDER_REQUEST_FAIL\"\nexport const ORDER_REQUEST_RESET = \"ORDER_REQUEST_RESET\"","import {\n    ORDER_REQUEST_REQUEST,\n    ORDER_REQUEST_SUCCESS,\n    ORDER_REQUEST_FAIL,\n    ORDER_REQUEST_RESET\n} from '../constants'\n\nconst initialState = {\n    loading: false,\n    error: null,\n    success: false,\n    order: null,\n    lastSubmitted: null\n}\n\nexport const orderRequestReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ORDER_REQUEST_REQUEST:\n            return { \n                ...state,\n                loading: true,\n                error: null,\n                success: false\n            }\n            \n        case ORDER_REQUEST_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                order: action.payload,\n                lastSubmitted: new Date().toISOString(),\n                error: null\n            }\n            \n        case ORDER_REQUEST_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload,\n                success: false\n            }\n            \n        case ORDER_REQUEST_RESET:\n            return initialState\n            \n        default:\n            return state\n    }\n}","import { combineReducers } from \"redux\";\nimport {\n    productsListReducer,\n    productDetailsReducer,\n    createProductReducer,\n    updateProductReducer,\n    deleteProductReducer,\n    changeDeliveryStatusReducer,\n} from \"./productReducers\";\n\nimport {\n    createCardReducer,\n    chargeCardReducer,\n    savedCardsListReducer,\n    deleteSavedCardReducer,\n    updateStripeCardtReducer\n} from \"./cardReducers\";\n\nimport {\n    userLoginReducer,\n    userRegisterReducer,\n    userDetailsReducer,\n    userDetailsUpdateReducer,\n    deleteUserAccountReducer,\n    checkTokenValidationReducer,\n    getSingleAddressReducer,\n    getAllAddressesOfUserReducer,\n    createUserAddressReducer,\n    updateUserAddressReducer,\n    deleteUserAddressReducer,\n    getAllOrdersReducer,\n} from \"./userReducers\";\n\n// Import the new ad reducers\nimport {\n    adSubmissionReducer,\n    adApprovalReducer,\n    activeAdsListReducer,\n    pendingAdsListReducer\n} from \"./adReducers\";\n\nimport { orderRequestReducer } from './orderReducers'\n\nconst allReducers = combineReducers({\n    productsListReducer,\n    productDetailsReducer,\n    createProductReducer,\n    updateProductReducer,\n    deleteProductReducer,\n    createCardReducer,\n    chargeCardReducer,\n    savedCardsListReducer,\n    updateStripeCardtReducer,\n    deleteSavedCardReducer,\n    userLoginReducer,\n    userRegisterReducer,    \n    getSingleAddressReducer,\n    getAllAddressesOfUserReducer,\n    createUserAddressReducer,\n    updateUserAddressReducer,\n    deleteUserAddressReducer,\n    getAllOrdersReducer,\n    changeDeliveryStatusReducer,\n    checkTokenValidationReducer,\n    userDetailsReducer,\n    userDetailsUpdateReducer,\n    deleteUserAccountReducer,\n    \n    adSubmission: adSubmissionReducer,\n    adApproval: adApprovalReducer,\n    activeAds: activeAdsListReducer,\n    pendingAds: pendingAdsListReducer,\n\n    orderRequest: orderRequestReducer,\n})\n\nexport default allReducers;","import {\n    PRODUCTS_LIST_REQUEST,\n    PRODUCTS_LIST_SUCCESS,\n    PRODUCTS_LIST_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    CREATE_PRODUCT_REQUEST,\n    CREATE_PRODUCT_SUCCESS,\n    CREATE_PRODUCT_FAIL,\n    CREATE_PRODUCT_RESET,\n\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_RESET, \n\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    DELETE_PRODUCT_RESET,\n\n    CHANGE_DELIVERY_STATUS_REQUEST,\n    CHANGE_DELIVERY_STATUS_SUCCESS,\n    CHANGE_DELIVERY_STATUS_FAIL,\n    CHANGE_DELIVERY_STATUS_RESET,\n\n\n} from '../constants/index'\n\n\n// products list\nexport const productsListReducer = (state = { products: [] }, action) => {\n    switch (action.type) {\n        case PRODUCTS_LIST_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                products: [],   // always pass the object during the request\n                error: \"\"\n            }\n        case PRODUCTS_LIST_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                products: action.payload,\n                error: \"\"\n            }\n        case PRODUCTS_LIST_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n\n// product details\nexport const productDetailsReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case PRODUCT_DETAILS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                product: {},        // always pass the object during the request\n                error: \"\"\n            }\n        case PRODUCT_DETAILS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                product: action.payload,\n                error: \"\"\n            }\n        case PRODUCT_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// create product reducer\nexport const createProductReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case CREATE_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                product: {},\n                success: false,\n                error: \"\"\n            }\n        case CREATE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                product: action.payload,\n                error: \"\"\n            }\n        case CREATE_PRODUCT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                product: {},\n                error: action.payload\n            }\n        case CREATE_PRODUCT_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                product: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// update product reducer\nexport const updateProductReducer = (state = { product: {} }, action) => {\n    switch (action.type) {\n        case UPDATE_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                product: {},\n                success: false,\n                error: \"\"\n            }\n        case UPDATE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                product: action.payload,\n                error: \"\"\n            }\n        case UPDATE_PRODUCT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                product: {},\n                error: action.payload\n            }\n        case UPDATE_PRODUCT_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                product: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n\n// delete product reducer\nexport const deleteProductReducer = (state = {}, action) => {\n    switch (action.type) {\n        case DELETE_PRODUCT_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case DELETE_PRODUCT_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case DELETE_PRODUCT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case DELETE_PRODUCT_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// change order delivery status reducer\nexport const changeDeliveryStatusReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CHANGE_DELIVERY_STATUS_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case CHANGE_DELIVERY_STATUS_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case CHANGE_DELIVERY_STATUS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case CHANGE_DELIVERY_STATUS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}","import {\n    CARD_CREATE_REQUEST,\n    CARD_CREATE_SUCCESS,\n    CARD_CREATE_FAIL,\n    CARD_CREATE_RESET,\n\n    CHARGE_CARD_REQUEST,\n    CHARGE_CARD_SUCCESS,\n    CHARGE_CARD_FAIL,\n    CHARGE_CARD_RESET,\n\n    SAVED_CARDS_LIST_REQUEST,\n    SAVED_CARDS_LIST_SUCCESS,\n    SAVED_CARDS_LIST_FAIL,\n\n    UPDATE_STRIPE_CARD_REQUEST,\n    UPDATE_STRIPE_CARD_SUCCESS,\n    UPDATE_STRIPE_CARD_FAIL,\n    UPDATE_STRIPE_CARD_RESET,\n\n    DELETE_SAVED_CARD_REQUEST,\n    DELETE_SAVED_CARD_SUCCESS,\n    DELETE_SAVED_CARD_FAIL,\n\n} from '../constants/index'\n\n\n// create card reducer\nexport const createCardReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CARD_CREATE_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                cardData: {},\n                success: false,\n                error: \"\"\n            }\n        case CARD_CREATE_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                cardData: action.payload,\n                error: \"\"\n            }\n        case CARD_CREATE_FAIL:\n            return {\n                ...state,\n                loading: false,\n                cardData: {},\n                success: false,\n                error: action.payload\n            }\n        case CARD_CREATE_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                cardData: {},\n                error: \"\",\n            }\n        default:\n            return state\n    }\n}\n\n// charge card reducer\nexport const chargeCardReducer = (state = {}, action) => {\n    switch (action.type) {\n        case CHARGE_CARD_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case CHARGE_CARD_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case CHARGE_CARD_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case CHARGE_CARD_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// saved cards list reducer\nexport const savedCardsListReducer = (state = {stripeCards: []}, action) => {\n    switch (action.type) {\n        case SAVED_CARDS_LIST_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case SAVED_CARDS_LIST_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                stripeCards: action.payload,\n                error: \"\"\n            }\n        case SAVED_CARDS_LIST_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// update stripe card reducer\nexport const updateStripeCardtReducer = (state = {}, action) => {\n    switch (action.type) {\n        case UPDATE_STRIPE_CARD_REQUEST:\n            return {\n                loading: true,\n                success: false,\n                stripeCard: {},\n                error: \"\",\n            }\n        case UPDATE_STRIPE_CARD_SUCCESS:\n            return {\n                loading: false,\n                success: true,\n                stripeCard: action.payload,\n                error: \"\",\n            }\n        case UPDATE_STRIPE_CARD_FAIL:\n            return {\n                loading: false,\n                success: false,\n                stripeCard: {},\n                error: action.payload\n            }\n        case UPDATE_STRIPE_CARD_RESET:\n            return {\n                loading: false,\n                success: false,\n                stripeCard: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n\n// delete saved card reducer\nexport const deleteSavedCardReducer = (state = {data: {}}, action) => {\n    switch (action.type) {\n        case DELETE_SAVED_CARD_REQUEST:\n            return {\n                ...state,\n                loading: true,\n                error: \"\"\n            }\n        case DELETE_SAVED_CARD_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                success: true,\n                data: action.payload,\n                error: \"\"\n            }\n        case DELETE_SAVED_CARD_FAIL:\n            return {\n                ...state,\n                loading: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n\n    UPDATE_USER_DETAILS_REQUEST,\n    UPDATE_USER_DETAILS_SUCCESS,\n    UPDATE_USER_DETAILS_FAIL,\n    UPDATE_USER_DETAILS_RESET,\n\n    DELETE_USER_ACCOUNT_REQUEST,\n    DELETE_USER_ACCOUNT_SUCCESS,\n    DELETE_USER_ACCOUNT_FAIL,\n    DELETE_USER_ACCOUNT_RESET,\n\n    GET_USER_ALL_ADDRESSES_REQUEST,\n    GET_USER_ALL_ADDRESSES_SUCCESS,\n    GET_USER_ALL_ADDRESSES_FAIL,\n\n    GET_SINGLE_ADDRESS_REQUEST,\n    GET_SINGLE_ADDRESS_SUCCESS,\n    GET_SINGLE_ADDRESS_FAIL,\n    GET_SINGLE_ADDRESS_RESET,\n\n    CREATE_USER_ADDRESS_REQUEST,\n    CREATE_USER_ADDRESS_SUCCESS,\n    CREATE_USER_ADDRESS_FAIL,\n    CREATE_USER_ADDRESS_RESET,\n\n    UPDATE_USER_ADDRESS_REQUEST,\n    UPDATE_USER_ADDRESS_SUCCESS,\n    UPDATE_USER_ADDRESS_FAIL,\n    UPDATE_USER_ADDRESS_RESET,\n\n    DELETE_USER_ADDRESS_REQUEST,\n    DELETE_USER_ADDRESS_SUCCESS,\n    DELETE_USER_ADDRESS_FAIL,\n    DELETE_USER_ADDRESS_RESET,\n\n    CHECK_TOKEN_VALID_REQUEST,\n    CHECK_TOKEN_VALID_SUCCESS,\n    CHECK_TOKEN_VALID_FAIL,\n    CHECK_TOKEN_VALID_RESET,\n\n    GET_ALL_ORDERS_REQUEST,\n    GET_ALL_ORDERS_SUCCESS,\n    GET_ALL_ORDERS_FAIL,\n\n} from '../constants/index'\n\n\n// Login\nexport const userLoginReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_LOGIN_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case USER_LOGIN_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                userInfo: action.payload\n            }\n        case USER_LOGIN_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n// Register\nexport const userRegisterReducer = (state = {}, action) => {\n    switch (action.type) {\n        case USER_REGISTER_REQUEST:\n            return {\n                ...state,\n                loading: true\n            }\n        case USER_REGISTER_SUCCESS:\n            return {\n                ...state,\n                loading: false,\n                userInfo: action.payload\n            }\n        case USER_REGISTER_FAIL:\n            return {\n                loading: false,\n                error: action.payload\n            }\n        case USER_LOGOUT:\n            return {}\n\n        default:\n            return state\n    }\n}\n\n\n// user details reducer\nexport const userDetailsReducer = (state = {}, action) => {\n    switch(action.type) {\n        case USER_DETAILS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                user: {},\n                error: \"\"\n            }\n        case USER_DETAILS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                user: action.payload,\n                error: \"\"\n            }\n        case USER_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                user: {},\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// user details update reducer\nexport const userDetailsUpdateReducer = (state = {}, action) => {\n    switch(action.type) {\n        case UPDATE_USER_DETAILS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                user: {},\n                success: false,\n                error: \"\"\n            }\n        case UPDATE_USER_DETAILS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                user: action.payload,\n                error: \"\"\n            }\n        case UPDATE_USER_DETAILS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                user: {},\n                error: action.payload\n            }\n        case UPDATE_USER_DETAILS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                user: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// delete user account reducer\nexport const deleteUserAccountReducer = (state = {}, action) => {\n    switch(action.type) {\n        case DELETE_USER_ACCOUNT_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case DELETE_USER_ACCOUNT_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case DELETE_USER_ACCOUNT_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case DELETE_USER_ACCOUNT_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// check token validation reducer\nexport const checkTokenValidationReducer = (state = {}, action) => {\n    switch(action.type) {\n        case CHECK_TOKEN_VALID_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                valid: false,\n                error: \"\"\n            }\n        case CHECK_TOKEN_VALID_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                valid: true,\n                error: \"\"\n            }\n        case CHECK_TOKEN_VALID_FAIL:\n            return {\n                ...state,\n                loading: false,\n                valid: false,\n                error: action.payload\n            }\n        case CHECK_TOKEN_VALID_RESET:\n            return {\n                ...state,\n                loading: false,\n                valid: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n\n\n// get all addresses of user reducer\nexport const getAllAddressesOfUserReducer = (state = {}, action) => {\n    switch(action.type) {\n        case GET_USER_ALL_ADDRESSES_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                addresses: [],\n                success: false,\n                error: \"\"\n            }\n        case GET_USER_ALL_ADDRESSES_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                addresses: action.payload,\n                success: true,\n                error: \"\"\n            }\n        case GET_USER_ALL_ADDRESSES_FAIL:\n            return {\n                ...state,\n                loading: false,\n                addresses: [],\n                success: false,\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n\n// get single address reducer\nexport const getSingleAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case GET_SINGLE_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                address: {},\n                success: false,\n                error: \"\"\n            }\n        case GET_SINGLE_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                address: action.payload,\n                success: true,\n                error: \"\"\n            }\n        case GET_SINGLE_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                address: {},\n                success: false,\n                error: action.payload\n            }\n        case GET_SINGLE_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                address: {},\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// create user address\nexport const createUserAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case CREATE_USER_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                address: {},\n                success: false,\n                error: \"\"\n            }\n        case CREATE_USER_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                address: action.payload,\n                success: true,\n                error: \"\"\n            }\n        case CREATE_USER_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                address: {},\n                error: action.payload\n            }\n        case CREATE_USER_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                address: {},\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// update user address\nexport const updateUserAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case UPDATE_USER_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case UPDATE_USER_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case UPDATE_USER_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case UPDATE_USER_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// delete user address reducer\nexport const deleteUserAddressReducer = (state = {}, action) => {\n    switch(action.type) {\n        case DELETE_USER_ADDRESS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                success: false,\n                error: \"\"\n            }\n        case DELETE_USER_ADDRESS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                success: true,\n                error: \"\"\n            }\n        case DELETE_USER_ADDRESS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: action.payload\n            }\n        case DELETE_USER_ADDRESS_RESET:\n            return {\n                ...state,\n                loading: false,\n                success: false,\n                error: \"\"\n            }\n        default:\n            return state\n    }\n}\n\n// get all orders reducer\nexport const getAllOrdersReducer = (state = {orders: []}, action) => {\n    switch(action.type) {\n        case GET_ALL_ORDERS_REQUEST:\n            return {\n                ...state, \n                loading: true,\n                orders: [],\n                error: \"\"\n            }\n        case GET_ALL_ORDERS_SUCCESS:\n            return {\n                ...state, \n                loading: false,\n                orders: action.payload,\n                error: \"\"\n            }\n        case GET_ALL_ORDERS_FAIL:\n            return {\n                ...state,\n                loading: false,\n                orders: [],\n                error: action.payload\n            }\n        default:\n            return state\n    }\n}\n","import {\n    AD_SUBMISSION_REQUEST,\n    AD_SUBMISSION_SUCCESS,\n    AD_SUBMISSION_FAIL,\n    AD_SUBMISSION_RESET,\n    AD_APPROVAL_REQUEST,\n    AD_APPROVAL_SUCCESS,\n    AD_APPROVAL_FAIL,\n    ACTIVE_ADS_REQUEST,\n    ACTIVE_ADS_SUCCESS,\n    ACTIVE_ADS_FAIL,\n    PENDING_ADS_REQUEST,\n    PENDING_ADS_SUCCESS,\n    PENDING_ADS_FAIL\n} from '../constants'\n\nexport const adSubmissionReducer = (state = {\n    loading: false,\n    error: null,\n    success: false,\n    ad: null\n}, action) => {\n    switch (action.type) {\n        case AD_SUBMISSION_REQUEST:\n            return { \n                ...state, \n                loading: true, \n                error: null, \n                success: false \n            }\n        case AD_SUBMISSION_SUCCESS:\n            return { \n                ...state, \n                loading: false, \n                success: true, \n                error: null, \n                ad: action.payload \n            }\n        case AD_SUBMISSION_FAIL:\n            return { \n                ...state, \n                loading: false, \n                success: false, \n                error: action.payload \n            }\n        case AD_SUBMISSION_RESET:\n            return { \n                loading: false, \n                error: null, \n                success: false, \n                ad: null \n            }\n        default:\n            return state\n    }\n}\n\nexport const adApprovalReducer = (state = {}, action) => {\n    switch (action.type) {\n        case AD_APPROVAL_REQUEST:\n            return { loading: true }\n        case AD_APPROVAL_SUCCESS:\n            return { loading: false, success: true }\n        case AD_APPROVAL_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const activeAdsListReducer = (state = { activeAds: [] }, action) => {\n    switch (action.type) {\n        case ACTIVE_ADS_REQUEST:\n            return { loading: true, activeAds: [] }\n        case ACTIVE_ADS_SUCCESS:\n            return { loading: false, activeAds: action.payload }\n        case ACTIVE_ADS_FAIL:\n            return { loading: false, error: action.payload }\n        default:\n            return state\n    }\n}\n\nexport const pendingAdsListReducer = (state = { pendingAds: [] }, action) => {\n    switch (action.type) {\n      case PENDING_ADS_REQUEST:\n        return { loading: true, pendingAds: [] }\n      case PENDING_ADS_SUCCESS:\n        return { loading: false, pendingAds: action.payload }\n      case PENDING_ADS_FAIL:\n        return { loading: false, error: action.payload }\n      default:\n        return state\n    }\n}","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport allReducers from './reducers/index'\n\nconst middleware = [thunk]\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? \n  JSON.parse(localStorage.getItem('userInfo')) : null\n\nconst initialState = {\n  userLoginReducer: { userInfo: userInfoFromStorage },\n  adSubmission: {\n    loading: false,\n    error: null,\n    success: false,\n    ad: null\n  }\n}\n\nconst store = createStore(\n  allReducers,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store","import {\n    PRODUCTS_LIST_REQUEST,\n    PRODUCTS_LIST_SUCCESS,\n    PRODUCTS_LIST_FAIL,\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n    CREATE_PRODUCT_REQUEST,\n    CREATE_PRODUCT_SUCCESS,\n    CREATE_PRODUCT_FAIL,\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n    CHANGE_DELIVERY_STATUS_REQUEST,\n    CHANGE_DELIVERY_STATUS_SUCCESS,\n    CHANGE_DELIVERY_STATUS_FAIL,\n} from '../constants/index';\n\nimport axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_BASE_URL;\n\n// products list\nexport const getProductsList = () => async (dispatch) => {\n    try {\n        dispatch({\n            type: PRODUCTS_LIST_REQUEST\n        })\n\n        // call api\n        const { data } = await axios.get(`${API_URL}/api/products/`)\n\n        dispatch({\n            type: PRODUCTS_LIST_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCTS_LIST_FAIL,\n            payload: error.message\n        })\n    }\n}\n\n\n// product details\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n        dispatch({\n            type: PRODUCT_DETAILS_REQUEST\n        })\n\n        // call api\n        const { data } = await axios.get(`${API_URL}/api/product/${id}/`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data\n        })\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.message\n        })\n    }\n}\n\n\n// create product\nexport const createProduct = (product) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: CREATE_PRODUCT_REQUEST })\n\n        const { userLoginReducer } = getState();\n        const { userInfo } = userLoginReducer;\n\n        if (!userInfo) {\n            throw new Error('Please login to create a product');\n        }\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                Authorization: `Bearer ${userInfo.token || userInfo.access}`,\n            },\n            withCredentials: true,\n        }\n\n        const { data } = await axios.post(\n            `${API_URL}/api/product-create/`,\n            product,\n            config\n        )\n\n        dispatch({\n            type: CREATE_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        console.error(\"Error creating product:\", error.response ? error.response.data : error.message)\n        dispatch({\n            type: CREATE_PRODUCT_FAIL,\n            payload: error.response && error.response.data\n                ? error.response.data\n                : { detail: error.message },\n        })\n    }\n}\n\n\n// Update Product Action\nexport const updateProduct = (id, product) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: UPDATE_PRODUCT_REQUEST });\n\n        const { userLoginReducer } = getState();\n        const { userInfo } = userLoginReducer;\n\n        if (!userInfo) {\n            throw new Error('Please login to update a product');\n        }\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                Authorization: `Bearer ${userInfo.token || userInfo.access}`,\n            },\n            withCredentials: true,\n        };\n\n        const { data } = await axios.put(\n            `${API_URL}/api/product-update/${id}/`,\n            product,\n            config\n        );\n\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data,\n        });\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response?.data || { detail: error.message },\n        });\n    }\n};\n\n// Delete Product Action\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: DELETE_PRODUCT_REQUEST });\n\n        const { userLoginReducer } = getState();\n        const { userInfo } = userLoginReducer;\n\n        if (!userInfo) {\n            throw new Error('Please login to delete a product');\n        }\n\n        const config = {\n            headers: {\n                Authorization: `Bearer ${userInfo.token || userInfo.access}`,\n            },\n            withCredentials: true,\n        };\n\n        await axios.delete(\n            `${API_URL}/api/product-delete/${id}/`,\n            config\n        );\n\n        dispatch({ type: DELETE_PRODUCT_SUCCESS });\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response?.data || { detail: error.message },\n        });\n    }\n};\n\n\n// change ordered product delivery status\nexport const changeDeliveryStatus = (id, product) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: CHANGE_DELIVERY_STATUS_REQUEST\n        })\n\n        // login reducer\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.put(\n            `${API_URL}/account/change-order-status/${id}/`,\n            product,\n            config\n        )\n\n        dispatch({\n            type: CHANGE_DELIVERY_STATUS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CHANGE_DELIVERY_STATUS_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nfunction Message({ variant, children }) {\n    return (\n        <Alert variant={variant}>\n            {children}\n        </Alert>\n    )\n}\n\nexport default Message\n","import { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport React from 'react'\n\nfunction Product({ product }) {\n    // Construct the full image URL using the environment variable\n    const imageUrl = product.image.startsWith('http') \n        ? product.image \n        : `${process.env.REACT_APP_API_BASE_URL}${product.image}`;\n\n    return (\n        <div>\n            <Card className=\"mb-4 rounded\">\n                <Card.Body>\n                    <Link to={`/product/${product.id}`} style={{ color: 'black' }}>\n                        <Card.Img \n                            variant=\"top\" \n                            src={imageUrl} \n                            style={{ \n                                width: '100%', \n                                height: 'auto', \n                                aspectRatio: '1 / 1', // Maintain a square aspect ratio\n                                objectFit: 'cover', // Ensure the image covers the card without distortion\n                                borderRadius: '10px' \n                            }}\n                            onError={(e) => {\n                                e.target.onerror = null; // Prevent infinite loop\n                                e.target.src = ''; // Remove placeholder logic\n                            }}\n                        />\n                    </Link>\n                    <Link to={`/product/${product.id}`} style={{ color: 'black' }}>\n                        <Card.Title as=\"div\" style={{ fontSize: 'clamp(0.9rem, 2.5vw, 1.2rem)', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}>\n                            <strong>{product.name}</strong>\n                        </Card.Title>\n                    </Link>\n                    <Card.Text as=\"h3\" style={{ fontSize: 'clamp(1rem, 3vw, 1.5rem)', whiteSpace: 'nowrap', overflow: 'hidden', textOverflow: 'ellipsis' }}>\n                        Tsh {product.price}\n                    </Card.Text>\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default Product","import React, { useState } from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport { FaHome, FaSearch, FaCompass, FaBullhorn, FaUser } from 'react-icons/fa';\n\nfunction BottomNavBar() {\n    const location = useLocation(); // Get the current route\n    const [activeTab, setActiveTab] = useState(location.pathname); // Track the active tab\n\n    const handleTabClick = (tab) => {\n        setActiveTab(tab);\n    };\n\n    return (\n        <>\n            <div style={{ height: '4rem' }}></div> {/* Spacer to account for the navbar height */}\n            <div\n                style={{\n                    position: 'fixed',\n                    bottom: 0,\n                    left: 0,\n                    right: 0,\n                    backgroundColor: '#fff',\n                    borderTop: '1px solid #ddd',\n                    display: 'flex',\n                    justifyContent: 'space-around',\n                    alignItems: 'center',\n                    padding: '0.5rem 0',\n                    zIndex: 1000,\n                    height: '4rem', // Fixed height for the navbar\n                }}\n            >\n                <div className=\"text-center\">\n                    <Link\n                        to=\"/\"\n                        onClick={() => handleTabClick('/')}\n                        style={{\n                            color: activeTab === '/' ? 'blue' : 'black',\n                            textDecoration: 'none',\n                        }}\n                    >\n                        <FaHome size={24} />\n                        <p style={{ fontSize: '0.75rem', margin: 0 }}>Home</p>\n                    </Link>\n                </div>\n                <div className=\"text-center\">\n                    <Link\n                        to=\"/search\"\n                        onClick={() => handleTabClick('/search')}\n                        style={{\n                            color: activeTab === '/search' ? 'blue' : 'black',\n                            textDecoration: 'none',\n                        }}\n                    >\n                        <FaSearch size={24} />\n                        <p style={{ fontSize: '0.75rem', margin: 0 }}>Search</p>\n                    </Link>\n                </div>\n                <div className=\"text-center\">\n                    <Link\n                        to=\"/\"\n                        onClick={() => handleTabClick('/explore')}\n                        style={{\n                            color: activeTab === '/explore' ? 'blue' : 'black',\n                            textDecoration: 'none',\n                        }}\n                    >\n                        <FaCompass size={24} />\n                        <p style={{ fontSize: '0.75rem', margin: 0 }}>Explore</p>\n                    </Link>\n                </div>\n                <div className=\"text-center\">\n                    <Link\n                        to=\"/advertise\"\n                        onClick={() => handleTabClick('/advertise')}\n                        style={{\n                            color: activeTab === '/advertise' ? 'blue' : 'black',\n                            textDecoration: 'none',\n                        }}\n                    >\n                        <FaBullhorn size={24} />\n                        <p style={{ fontSize: '0.75rem', margin: 0 }}>Advertise</p>\n                    </Link>\n                </div>\n                <div className=\"text-center\">\n                    <Link\n                        to=\"/account\"\n                        onClick={() => handleTabClick('/account')}\n                        style={{\n                            color: activeTab === '/account' ? 'blue' : 'black',\n                            textDecoration: 'none',\n                        }}\n                    >\n                        <FaUser size={24} />\n                        <p style={{ fontSize: '0.75rem', margin: 0 }}>Profile</p>\n                    </Link>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport default BottomNavBar;\n","import React, { useEffect, useState, useRef } from 'react';\nimport { Card, Carousel, Spinner, Button } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nconst AdSlider = () => {\n  const [ads, setAds] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [videoLoading, setVideoLoading] = useState({});\n  const [autoplayBlocked, setAutoplayBlocked] = useState({});\n  const [videoMuted, setVideoMuted] = useState({}); // ✅ NEW: Track mute state\n  const carouselRef = useRef(null);\n  const videoRefs = useRef([]);\n\n  useEffect(() => {\n    const fetchAds = async () => {\n      try {\n        const { data } = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/ads/active/`);\n        setAds(data);\n\n        const initialLoadingStates = {};\n        const initialAutoplayStates = {};\n        const initialMuteStates = {};\n\n        data.forEach((ad, index) => {\n          if (ad.ad_type === 'video') {\n            initialLoadingStates[index] = true;\n            initialAutoplayStates[index] = false;\n            initialMuteStates[index] = true; // Start muted\n          }\n        });\n\n        setVideoLoading(initialLoadingStates);\n        setAutoplayBlocked(initialAutoplayStates);\n        setVideoMuted(initialMuteStates); // ✅ Set initial mute state\n        setLoading(false);\n      } catch (err) {\n        setError(err.message);\n        setLoading(false);\n      }\n    };\n    fetchAds();\n  }, []);\n\n  const handleVideoEnd = (index) => {\n    if (index < ads.length - 1) {\n      carouselRef.current.next();\n    }\n  };\n\n  const handleVideoPlay = (index) => {\n    setAutoplayBlocked(prev => ({ ...prev, [index]: false }));\n  };\n\n  const handleVideoPause = (index, e) => {\n    if (e.target.currentTime === 0) {\n      setAutoplayBlocked(prev => ({ ...prev, [index]: true }));\n    }\n  };\n\n  useEffect(() => {\n    if (ads.length > 0) {\n      videoRefs.current = videoRefs.current.slice(0, ads.length);\n\n      ads.forEach((ad, index) => {\n        if (ad.ad_type === 'video' && videoRefs.current[index]) {\n          const video = videoRefs.current[index];\n\n          video.onended = () => handleVideoEnd(index);\n          video.onplay = () => handleVideoPlay(index);\n          video.onpause = (e) => handleVideoPause(index, e);\n          video.oncanplay = () => {\n            setVideoLoading(prev => ({ ...prev, [index]: false }));\n          };\n          video.onerror = () => {\n            console.error(`Failed to load video at index ${index}: ${ad.ad_file_url}`);\n            setVideoLoading(prev => ({ ...prev, [index]: false }));\n          };\n\n          const playPromise = video.play();\n          if (playPromise !== undefined) {\n            playPromise.catch(() => {\n              setAutoplayBlocked(prev => ({ ...prev, [index]: true }));\n              setVideoLoading(prev => ({ ...prev, [index]: false }));\n            });\n          }\n        }\n      });\n\n      updateVideoPlayback(0);\n    }\n  }, [ads]);\n\n  const handlePlayClick = (index) => {\n    const video = videoRefs.current[index];\n    if (video) {\n      video.muted = false;\n      video.play();\n      setVideoMuted(prev => ({ ...prev, [index]: false }));\n    }\n  };\n\n  const toggleMute = (index) => {\n    const video = videoRefs.current[index];\n    if (video) {\n      const newMuteState = !videoMuted[index];\n      video.muted = newMuteState;\n      setVideoMuted(prev => ({ ...prev, [index]: newMuteState }));\n    }\n  };\n\n  const updateVideoPlayback = (selectedIndex) => {\n    videoRefs.current.forEach((video, index) => {\n      if (video) {\n        const isMuted = videoMuted[index] ?? true;\n        if (index === selectedIndex) {\n          video.muted = isMuted;\n          const playPromise = video.play();\n          if (playPromise !== undefined) {\n            playPromise.catch(() => {\n              setAutoplayBlocked(prev => ({ ...prev, [index]: true }));\n            });\n          }\n        } else {\n          video.pause();\n          video.muted = true;\n        }\n      }\n    });\n  };\n\n  if (loading) return <div className=\"text-center py-4\"><Spinner animation=\"border\" /></div>;\n  if (error) return <div className=\"text-center py-4 text-danger\">Error loading ads: {error}</div>;\n  if (ads.length === 0) return null;\n\n  return (\n    <Carousel\n      ref={carouselRef}\n      activeIndex={activeIndex}\n      onSelect={(selectedIndex) => {\n        setActiveIndex(selectedIndex);\n        updateVideoPlayback(selectedIndex);\n      }}\n      indicators={false}\n      controls={ads.length > 1}\n      interval={10000}\n      className=\"mb-4\"\n      style={{\n        width: '100%',\n        height: 'auto',\n        margin: '0 auto',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        overflow: 'hidden'\n      }}\n    >\n      {ads.map((ad, index) => (\n        <Carousel.Item key={index}>\n          <Card style={{\n            position: 'relative',\n            border: 'none',\n            borderRadius: '10px',\n            overflow: 'hidden',\n            display: 'inline-block',\n            width: '100%'\n          }}>\n            <Card.Body className=\"p-0\">\n              {ad.ad_type === 'image' ? (\n                <img\n                  src={`${process.env.REACT_APP_API_BASE_URL}${ad.ad_file_url}`}\n                  alt={ad.ad_title}\n                  className=\"img-fluid\"\n                  style={{\n                    width: '100%',\n                    height: 'auto',\n                    maxHeight: '50vh',\n                    objectFit: 'contain',\n                    display: 'block'\n                  }}\n                />\n              ) : (\n                <div style={{ position: 'relative' }}>\n                  <video\n                    ref={el => videoRefs.current[index] = el}\n                    src={`${process.env.REACT_APP_API_BASE_URL}${ad.ad_file_url}`}\n                    playsInline\n                    preload=\"auto\"\n                    className=\"img-fluid\"\n                    style={{\n                      width: '100%',\n                      height: 'auto',\n                      maxHeight: '50vh',\n                      objectFit: 'contain',\n                      display: 'block',\n                    }}\n                    onClick={() => handlePlayClick(index)}\n                    muted={videoMuted[index] ?? true}\n                  />\n                  \n                  {/* ✅ Mute/Unmute Button */}\n                  <Button\n                    variant=\"light\"\n                    size=\"sm\"\n                    style={{\n                      position: 'absolute',\n                      top: 10,\n                      right: 10,\n                      zIndex: 10,\n                      opacity: 0.9\n                    }}\n                    onClick={() => toggleMute(index)}\n                  >\n                    {videoMuted[index] ? 'Unmute' : 'Mute'}\n                  </Button>\n                </div>\n              )}\n\n              {/* WhatsApp Shadow Section */}\n              <div\n                style={{\n                  position: 'absolute',\n                  bottom: 0,\n                  left: 0,\n                  width: '100%',\n                  background: 'rgba(0, 0, 0, 0.5)',\n                  color: 'white',\n                  padding: '0.5rem',\n                  textAlign: 'center',\n                  boxShadow: '0 -2px 10px rgba(0, 0, 0, 0.3)',\n                  zIndex: 2,\n                  cursor: 'pointer'\n                }}\n                onClick={() =>\n                  window.open(\n                    `https://wa.me/${ad.phone_number}?text=I%20saw%20an%20ad%20on%20Luxe%20Free%20Market%20system%20and%20I%20am%20interested%20in%20your%20product%20(${ad.ad_title})`,\n                    '_blank'\n                  )\n                }\n              >\n                <h3 style={{ fontWeight: 'bold', marginBottom: '0.25rem', textShadow: '0 2px 5px rgba(0, 0, 0, 0.7)' }}>\n                  {ad.ad_title}\n                </h3>\n                <p style={{ fontSize: '1rem', textShadow: '0 2px 5px rgba(0, 0, 0, 0.7)' }}>\n                  {ad.ad_description}\n                </p>\n              </div>\n            </Card.Body>\n          </Card>\n        </Carousel.Item>\n      ))}\n    </Carousel>\n  );\n};\n\nexport default AdSlider;\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getProductsList } from '../actions/productActions';\nimport Message from '../components/Message';\nimport { Spinner, Row, Col, Card, Button, ButtonGroup } from 'react-bootstrap';\nimport Product from '../components/Product';\nimport { useHistory } from 'react-router-dom';\nimport { CREATE_PRODUCT_RESET } from '../constants';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\nimport BottomNavBar from '../components/BottomNavBar';\nimport AdSlider from '../components/AdSlider';\n\nfunction ProductsListPage() {\n    let history = useHistory();\n    let searchTerm = history.location.search ? history.location.search.split(\"=\")[1].toLowerCase() : \"\";\n    const dispatch = useDispatch();\n    const [selectedCategory, setSelectedCategory] = useState('All');\n    const [categories, setCategories] = useState(['All']);\n    \n    // Fetch categories from API\n    useEffect(() => {\n        const fetchCategories = async () => {\n            try {\n                const { data } = await axios.get(`${process.env.REACT_APP_API_BASE_URL}/api/categories/`);\n                const uniqueCategories = ['All', ...new Set(data.map(category => category.name))];\n                setCategories(uniqueCategories);\n            } catch (error) {\n                console.error(\"Error fetching categories:\", error);\n            }\n        };\n        fetchCategories();\n    }, []);\n\n    // products list reducer\n    const productsListReducer = useSelector(state => state.productsListReducer);\n    const { loading, error, products } = productsListReducer;\n\n    // Fetch products based on selected category\n    useEffect(() => {\n        const fetchProducts = async () => {\n            try {\n                const query = selectedCategory !== 'All' ? `?category=${selectedCategory}` : '';\n                await dispatch(getProductsList(query));\n            } catch (error) {\n                console.error(\"Error fetching products:\", error);\n            }\n        };\n        fetchProducts();\n        dispatch({ type: CREATE_PRODUCT_RESET });\n    }, [dispatch, selectedCategory]);\n\n    // Log image paths of products\n    useEffect(() => {\n        if (products && products.length > 0) {\n            products.forEach(product => {\n                console.log(`Product Image Path: ${product.image}`);\n            });\n        }\n    }, [products]);\n\n    const showNothingMessage = () => {\n        return !loading && <Message variant='info'>Nothing to show</Message>;\n    };\n\n    // Filter products by category and search term\n    const filteredProducts = products.filter(product => {\n        const matchesSearch = product.name.toLowerCase().includes(searchTerm);\n        const matchesCategory = selectedCategory === 'All' || \n                              product.category_name === selectedCategory;\n        return matchesSearch && matchesCategory;\n    });\n\n    return (\n        <div>\n            {/* Prominent Advertise Section */}\n            <AdSlider />\n\n            {/* Category Filter Buttons */}\n            <div className=\"mb-4 text-center\">\n                <div style={{ overflowX: 'auto', whiteSpace: 'nowrap' }}>\n                    <ButtonGroup className=\"flex-nowrap\">\n                        {categories.map(category => (\n                            <Button\n                                key={category}\n                                variant={selectedCategory === category ? 'primary' : 'outline-primary'}\n                                onClick={() => setSelectedCategory(category)}\n                                className=\"mx-1 mb-2 rounded-pill\"\n                                style={{\n                                    backgroundColor: selectedCategory === category ? 'black' : 'transparent', // Black for selected\n                                    color: selectedCategory === category ? 'white' : 'black', // White text for selected\n                                    borderColor: 'black' // Black border for all buttons\n                                }}\n                            >\n                                {category}\n                            </Button>\n                        ))}\n                    </ButtonGroup>\n                </div>\n            </div>\n\n            {/* Product Listing */}\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading ? (\n                <div className=\"text-center py-5\">\n                    <Spinner animation=\"border\" />\n                    <p className=\"mt-2\">Loading products...</p>\n                </div>\n            ) : (\n                <Row>\n                    {filteredProducts.length > 0 ? (\n                        filteredProducts.map(product => (\n                            <Col key={product.id} xs={6} sm={6} md={4} lg={3} xl={3}>\n                                {/* Ensured xs={6} for two columns on extra small screens */}\n                                <div className=\"product-card mx-2\">\n                                    <Product product={{ ...product, price: Math.floor(product.price).toLocaleString() }} />\n                                </div>\n                            </Col>\n                        ))\n                    ) : (\n                        showNothingMessage()\n                    )}\n                </Row>\n            )}\n\n            {/* Bottom Navigation Bar */}\n            <BottomNavBar />\n        </div>\n    );\n}\n\nexport default ProductsListPage;","import React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteProduct, getProductDetails } from '../actions/productActions';\nimport Message from '../components/Message';\nimport { Spinner, Row, Col, Container, Card, Button, Modal, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { CREATE_PRODUCT_RESET, DELETE_PRODUCT_RESET, UPDATE_PRODUCT_RESET, CARD_CREATE_RESET } from '../constants';\nimport BottomNavBar from '../components/BottomNavBar';\nimport { FaChevronLeft, FaChevronRight } from 'react-icons/fa';\nimport './css/ProductDetailsPage.css'; // Create this CSS file for custom styles\n\nfunction ProductDetailsPage({ history, match }) {\n    const [show, setShow] = useState(false);\n    const [quantity, setQuantity] = useState(1);\n    const [currentImageIndex, setCurrentImageIndex] = useState(0);\n    const [autoScroll, setAutoScroll] = useState(true);\n    const dispatch = useDispatch();\n    const carouselRef = useRef(null);\n\n    const productDetailsReducer = useSelector(state => state.productDetailsReducer);\n    const { loading, error, product } = productDetailsReducer;\n\n    const userLoginReducer = useSelector(state => state.userLoginReducer);\n    const { userInfo } = userLoginReducer;\n\n    const deleteProductReducer = useSelector(state => state.deleteProductReducer);\n    const { success: productDeletionSuccess } = deleteProductReducer;\n\n    // Combine main image with additional images\n    const allImages = product?.image \n        ? [product.image, ...(product.images?.map(img => img.image) || [])]\n        : product.images?.map(img => img.image) || [];\n\n    // Construct image URL using environment variable\n    const getImageUrl = (imagePath) => {\n        if (!imagePath) return '';\n        if (imagePath.startsWith('http')) return imagePath;\n        return `${process.env.REACT_APP_API_BASE_URL}${imagePath}`;\n    };\n\n    // Auto-scroll effect\n    useEffect(() => {\n        if (!autoScroll || allImages.length <= 1) return;\n\n        const interval = setInterval(() => {\n            setCurrentImageIndex(prev => (prev + 1) % allImages.length);\n        }, 3000); // Change image every 3 seconds\n\n        return () => clearInterval(interval);\n    }, [autoScroll, allImages.length]);\n\n    // Scroll to current image\n    useEffect(() => {\n        if (carouselRef.current) {\n            const imageWidth = carouselRef.current.children[0]?.offsetWidth || 0;\n            carouselRef.current.scrollTo({\n                left: currentImageIndex * imageWidth,\n                behavior: 'smooth'\n            });\n        }\n    }, [currentImageIndex]);\n\n    useEffect(() => {\n        dispatch(getProductDetails(match.params.id));\n        dispatch({ type: UPDATE_PRODUCT_RESET });\n        dispatch({ type: CREATE_PRODUCT_RESET });\n        dispatch({ type: CARD_CREATE_RESET });\n    }, [dispatch, match]);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const confirmDelete = () => {\n        dispatch(deleteProduct(match.params.id));\n        handleClose();\n    };\n\n    const nextImage = () => {\n        setCurrentImageIndex(prev => (prev + 1) % allImages.length);\n        setAutoScroll(false);\n    };\n\n    const prevImage = () => {\n        setCurrentImageIndex(prev => (prev - 1 + allImages.length) % allImages.length);\n        setAutoScroll(false);\n    };\n\n    const goToImage = (index) => {\n        setCurrentImageIndex(index);\n        setAutoScroll(false);\n    };\n\n    if (productDeletionSuccess) {\n        alert(\"Product successfully deleted.\");\n        history.push(\"/\");\n        dispatch({ type: DELETE_PRODUCT_RESET });\n    }\n\n    return (\n        <div>\n            <Modal show={show} onHide={handleClose}>\n                <Modal.Header closeButton>\n                    <Modal.Title>\n                        <i style={{ color: \"#e6e600\" }} className=\"fas fa-exclamation-triangle\"></i>\n                        {\" \"}\n                        Delete Confirmation\n                    </Modal.Title>\n                </Modal.Header>\n                <Modal.Body>Are you sure you want to delete this product <em>\"{product?.name}\"</em>?</Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"danger\" onClick={confirmDelete}>\n                        Confirm Delete\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleClose}>\n                        Cancel\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n\n            {loading && (\n                <span style={{ display: \"flex\" }}>\n                    <h5>Getting Product Details</h5>\n                    <span className=\"ml-2\">\n                        <Spinner animation=\"border\" />\n                    </span>\n                </span>\n            )}\n            \n            {error ? (\n                <Message variant='danger'>{error}</Message>\n            ) : (\n                <div>\n                    <Container>\n                        <Row>\n                            <Col md={6}>\n                                {/* Image Carousel */}\n                                <div className=\"image-carousel-container\">\n                                    <div \n                                        className=\"image-carousel\" \n                                        ref={carouselRef}\n                                        onMouseEnter={() => setAutoScroll(false)}\n                                        onMouseLeave={() => setAutoScroll(true)}\n                                    >\n                                        {allImages.map((img, index) => (\n                                            <div \n                                                key={index} \n                                                className={`carousel-image ${index === currentImageIndex ? 'active' : ''}`}\n                                            >\n                                                <img\n                                                    src={getImageUrl(img)}\n                                                    alt={`${product?.name} ${index + 1}`}\n                                                    onError={(e) => {\n                                                        e.target.onerror = null;\n                                                        e.target.src = '';\n                                                    }}\n                                                />\n                                            </div>\n                                        ))}\n                                    </div>\n                                    \n                                    {/* Navigation Arrows */}\n                                    {allImages.length > 1 && (\n                                        <>\n                                            <button \n                                                className=\"carousel-button prev\" \n                                                onClick={prevImage}\n                                            >\n                                                <FaChevronLeft />\n                                            </button>\n                                            <button \n                                                className=\"carousel-button next\" \n                                                onClick={nextImage}\n                                            >\n                                                <FaChevronRight />\n                                            </button>\n                                        </>\n                                    )}\n                                    \n                                    {/* Indicators */}\n                                    {allImages.length > 1 && (\n                                        <div className=\"carousel-indicators\">\n                                            {allImages.map((_, index) => (\n                                                <button\n                                                    key={index}\n                                                    className={`indicator ${index === currentImageIndex ? 'active' : ''}`}\n                                                    onClick={() => goToImage(index)}\n                                                />\n                                            ))}\n                                        </div>\n                                    )}\n                                </div>\n\n                                {userInfo && userInfo.admin && (\n                                    <span style={{ display: \"flex\", marginTop: '15px' }}>\n                                        <Button\n                                            className=\"btn btn-danger btn-sm button-focus-css\"\n                                            style={{ width: \"100%\" }}\n                                            onClick={handleShow}\n                                        >\n                                            Delete Product\n                                        </Button>\n\n                                        <Button\n                                            className=\"ml-2 btn btn-primary btn-sm button-focus-css\"\n                                            onClick={() => history.push(`/product-update/${product?.id}/`)}\n                                            style={{ width: \"100%\" }}\n                                        >\n                                            Edit Product\n                                        </Button>\n                                    </span>\n                                )}\n                            </Col>\n\n                            <Col sm>\n                                <b>{product?.name}</b>\n                                <span className=\"badge badge-secondary ml-2\">\n                                    {product?.category_name}\n                                </span>\n                                <hr />\n                                <span className=\"justify-description-css\">\n                                    <p>{product?.description}</p>\n                                </span>\n                                <span style={{\n                                    display: \"flex\",\n                                    justifyContent: \"center\",\n                                    border: \"1px solid\",\n                                    borderColor: \"#C6ACE7\",\n                                    padding: \"2px\"\n                                }}>\n                                    Price:<span className=\"text-success ml-2\">Tsh {Math.floor(product?.price || 0).toLocaleString()}</span>\n                                </span>\n                            </Col>\n                            <Col sm>\n                                <b>Buy</b>\n                                <hr />\n                                {product?.stock ? (\n                                    <>\n                                        <Form.Group controlId=\"quantity\">\n                                            <Form.Label>Quantity</Form.Label>\n                                            <Form.Control\n                                                as=\"select\"\n                                                value={quantity}\n                                                onChange={(e) => setQuantity(e.target.value)}\n                                            >\n                                                {[...Array(10).keys()].map(x => (\n                                                    <option key={x + 1} value={x + 1}>\n                                                        {x + 1}\n                                                    </option>\n                                                ))}\n                                            </Form.Control>\n                                        </Form.Group>\n                                        <Link \n                                            to={`/order-now?product=${product?.id}&qty=${quantity}&name=${encodeURIComponent(product?.name)}&price=${product?.price}&supplier=${encodeURIComponent(product?.supplier_info?.name || '')}&whatsapp=${encodeURIComponent(product?.supplier_info?.whatsapp_link || '')}`} \n                                            className=\"btn btn-success btn-block\"\n                                        >\n                                            Order Now\n                                        </Link>\n                                    </>\n                                ) : (\n                                    <Message variant='danger'>Out Of Stock!</Message>\n                                )}\n                            </Col>\n                        </Row>\n                    </Container>\n                </div>\n            )}\n            <BottomNavBar />\n        </div>\n    );\n}\n\nexport default ProductDetailsPage;","import {\n    CARD_CREATE_REQUEST,\n    CARD_CREATE_SUCCESS,\n    CARD_CREATE_FAIL,\n\n    CHARGE_CARD_REQUEST,\n    CHARGE_CARD_SUCCESS,\n    CHARGE_CARD_FAIL,\n\n    SAVED_CARDS_LIST_REQUEST,\n    SAVED_CARDS_LIST_SUCCESS,\n    SAVED_CARDS_LIST_FAIL,\n\n    DELETE_SAVED_CARD_REQUEST,\n    DELETE_SAVED_CARD_SUCCESS,\n    DELETE_SAVED_CARD_FAIL,\n\n    UPDATE_STRIPE_CARD_REQUEST,\n    UPDATE_STRIPE_CARD_SUCCESS,\n    UPDATE_STRIPE_CARD_FAIL,\n\n} from '../constants/index'\n\nimport axios from 'axios'\n\n// create card\nexport const createCard = (cardData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: CARD_CREATE_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`,\n                \"Card-Number\": cardData.cardNumber,\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            \"/payments/create-card/\",\n            {\n                'email': cardData.email,\n                'number': cardData.cardNumber,\n                'exp_month': cardData.expMonth,\n                'exp_year': cardData.expYear,\n                'cvc': cardData.cvc,\n                'save_card': cardData.saveCard\n            },\n            config\n        )\n\n        dispatch({\n            type: CARD_CREATE_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CARD_CREATE_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n// charge customer\nexport const chargeCustomer = (cardData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: CHARGE_CARD_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            \"/payments/charge-customer/\",\n            cardData,\n            config\n        )\n\n        dispatch({\n            type: CHARGE_CARD_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CHARGE_CARD_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n// saved cards list\nexport const savedCardsList = () => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: SAVED_CARDS_LIST_REQUEST,\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.get('/account/stripe-cards/', config)\n\n        dispatch({\n            type: SAVED_CARDS_LIST_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: SAVED_CARDS_LIST_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n// update stripe card\nexport const updateStripeCard = (cardData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: UPDATE_STRIPE_CARD_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo },\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            \"/payments/update-card/\",\n            cardData,\n            config\n        )\n\n        dispatch({\n            type: UPDATE_STRIPE_CARD_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_STRIPE_CARD_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n\n\n// delete saved card\nexport const deleteSavedCard = (card_number) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: DELETE_SAVED_CARD_REQUEST,\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // api call\n        const { data } = await axios.post(\n            '/payments/delete-card/',\n            { \"card_number\": card_number },\n            config\n        )\n\n        dispatch({\n            type: DELETE_SAVED_CARD_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_SAVED_CARD_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}","import React from 'react'\nimport { Button } from 'react-bootstrap'\nimport { deleteSavedCard } from '../actions/cardActions'\nimport { useDispatch } from 'react-redux'\nimport { Modal } from 'react-bootstrap'\n\n\nfunction DeleteCardComponent({ userId, deleteCardNumber, runCardDeleteHandler, toggleRunCardDeleteHandler }) {\n\n    const dispatch = useDispatch()\n\n    // card delete confirmation\n    const confirmDelete = (c_number) => {\n        dispatch(deleteSavedCard(c_number))\n        toggleRunCardDeleteHandler()\n    }\n\n    return (\n        <div>\n            {/* Modal Start*/}\n            <div>\n                <Modal show={runCardDeleteHandler} onHide={toggleRunCardDeleteHandler}>\n                    <Modal.Header closeButton>\n                        <Modal.Title>\n                            <i style={{ color: \"#e6e600\" }} className=\"fas fa-exclamation-triangle\"></i>\n                            {\" \"}\n                            Delete Confirmation\n                        </Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>\n                        <p>\n                            <b>\n                                Warning!\n                            </b>\n                            {\" \"}deleting your card will delete your stripe account and all its data.\n                        </p>\n                        Are you sure you want to delete the card \"{deleteCardNumber}\"?\n                    </Modal.Body>\n\n                    <Modal.Footer>\n                        <Button variant=\"danger\" onClick={() => confirmDelete(deleteCardNumber)}>\n                            Confirm Delete\n                        </Button>\n                        <Button variant=\"primary\" onClick={toggleRunCardDeleteHandler}>\n                            Cancel\n                        </Button>\n                    </Modal.Footer>\n                </Modal>\n            </div>\n\n            {/* Modal End */}\n        </div>\n    )\n}\n\nexport default DeleteCardComponent\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\";\nimport { Form, Button, Row, Col, Card } from 'react-bootstrap'\nimport { createCard } from '../actions/cardActions'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Spinner } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport Message from './Message';\nimport DeleteCardComponent from './DeleteCardComponent';\n\n// to manage our exp month and exp year\nlet todays_date = new Date()\nlet current_year = todays_date.getFullYear()\n\n\nconst CreateCardComponent = ({ stripeCards, addressSelected }) => {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const [userId] = useState(0)\n    const [runCardDeleteHandler, setRunCardDeleteHandler] = useState(false)\n    const [differentCard, setDifferentCard] = useState(false)\n    const [cardDetails, setCardDetails] = useState(false)\n    const [cardDetailsId, setCardDetailsId] = useState(0)\n    const [showStripeCard, setShowStripeCard] = useState(false)\n    const [deleteCardNumber] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [cardNumber, setCardNumber] = useState(\"\")\n    const [expMonth, setExpMonth] = useState(\"\")\n    const [expYear, setExpYear] = useState(\"\")\n    const [cvc, setCvc] = useState(\"\")\n    const [saveCard, setSaveCard] = useState(false)\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // card delete reducer\n    const deleteSavedCardReducer = useSelector(state => state.deleteSavedCardReducer)\n    const { loading, success, error } = deleteSavedCardReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        }\n    }, [history, userInfo, success])\n\n    // stripe card form submission handler\n    const handleCardSubmittion = (e) => {\n        e.preventDefault()\n        if (addressSelected) {\n            const data = {\n                \"email\": email === \"\" ? userInfo.email : email,\n                \"cardNumber\": cardNumber,\n                \"expMonth\": expMonth ? Number(expMonth) : \"\",\n                \"expYear\": expYear ? Number(expYear) : \"\",\n                \"cvc\": cvc ? Number(cvc) : \"\",\n                \"saveCard\": saveCard\n            }\n            dispatch(createCard(data))\n        } else {\n            alert(\"Please select or add your Address to continue\")\n        }\n    }\n\n    // pay with already existing (saved) stripe card handler\n    const payWithSavedCard = (cardData) => {\n        if (addressSelected) {\n            const data = {\n                \"email\": cardData.email,\n                \"cardNumber\": cardData.card_number,\n                \"expMonth\": Number(cardData.exp_month),\n                \"expYear\": Number(cardData.exp_year),\n                \"cvc\": Number(cardData.cvc),\n                \"saveCard\": false\n            }\n            dispatch(createCard(data))\n        } else {\n            alert(\"Please select or add your Address to continue\")\n        }\n    }\n\n    // show card details\n    const showCardDetails = (cardData) => {\n        if (cardDetails) {\n            if (cardData.id === cardDetailsId) {\n                return (\n                    <div>\n                        <button\n                            onClick={() => setCardDetails(false)}\n                            className=\"btn btn-outline-danger btn-sm button-focus-css\"\n                            style={{ float: \"right\", position: \"relative\", \"top\": \"-40px\" }}>\n                            close\n                        </button>\n                        <p><b>Exp Month:</b> {cardData.exp_month}</p>\n                        <p><b>Exp Year:</b> {cardData.exp_year}</p>                       \n                    </div>\n                )\n            }\n        }\n    }\n\n    const toggleRunCardDeleteHandler = () => {\n        setRunCardDeleteHandler(!runCardDeleteHandler)\n    }\n\n    // reload the webpage after new card deletion\n    if (success) {\n        alert(\"Card successfully deleted.\")\n        window.location.reload()\n\n    }\n\n    return (\n        <div>\n\n            {/* Working on Modal Start*/}\n            <div>\n                <>\n                    <DeleteCardComponent\n                        userId={userId}\n                        deleteCardNumber={deleteCardNumber}\n                        runCardDeleteHandler={runCardDeleteHandler}\n                        toggleRunCardDeleteHandler={toggleRunCardDeleteHandler}\n                    />\n                </>\n            </div>\n\n            {/* Working on Modal End */}\n\n            {loading\n                &&\n                <span style={{ display: \"flex\" }}>\n                    <h5>Deleting card</h5>\n                    <span className=\"ml-2\">\n                        <Spinner animation=\"border\" />\n                    </span>\n                </span>}\n            {error && <Message variant='danger'>{error}</Message>}\n            <div className=\"card px-4 py-4\">\n                <button className={showStripeCard\n                    ? \"btn btn-sm btn-danger mb-3 button-focus-css\"\n                    : \"btn btn-sm btn-primary mb-3 button-focus-css\"}\n                    onClick={() =>\n                        setShowStripeCard(!showStripeCard)\n                    }>\n                    {showStripeCard\n                        ? \"close\"\n                        : \"Enter stripe card\"}\n                </button>\n\n                {showStripeCard ?\n                    <Form onSubmit={handleCardSubmittion}>\n\n                        {differentCard ?\n                            <Form.Group>\n                                <Form.Label><b>Card Holder Email Address</b></Form.Label>\n                                <Form.Control\n                                    autoFocus={true}\n                                    type=\"email\"\n                                    pattern=\".+@gmail\\.com\"\n                                    value={email}\n                                    onChange={(e) => setEmail(e.target.value)}\n                                    placeholder=\"Email address linked with the Card\" />\n                            </Form.Group>\n                            :\n                            <span><b>Default Customer Email: </b>{userInfo.email}</span>\n                        }\n                        <p>\n                            <Link to=\"#\" onClick={() => {\n                                setDifferentCard(!differentCard)\n                                setEmail(\"\")\n                            }}>\n                                {differentCard ? \"Use Your default Email\" : \"Use a different Card\"}\n                            </Link>\n                        </p>\n\n                        <Form.Group className=\"mb-3\">\n                            <Form.Label><b>Card Number</b></Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                pattern=\"[0-9]+\"\n                                value={cardNumber}\n                                onChange={(e) => setCardNumber(e.target.value)}\n                                placeholder=\"Enter Your Card Number\" maxLength=\"16\"\n                                required\n                            />\n                        </Form.Group>\n\n                        <Row>\n\n                            <Col>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label><b>Exp Month</b></Form.Label>\n                                    <select\n                                        className=\"form-control\"\n                                        defaultValue={expMonth}\n                                        onChange={e => setExpMonth(e.target.value)}\n                                        required\n                                    >\n                                        <option>-- --</option>\n                                        {Array.from({ length: 12 }, (x, i) => <option\n                                            key={i}\n                                        >\n                                            {i + 1}\n                                        </option>\n                                        )}\n                                    </select>\n                                </Form.Group>\n                            </Col>\n\n                            <Col>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label><b>Exp Year</b></Form.Label>\n                                    <select className=\"form-control\"\n                                        defaultValue={expYear}\n                                        onChange={e => setExpYear(e.target.value)}\n                                        required\n                                    >\n                                        <option>-- --</option>\n                                        {Array.from({ length: 21 }, (x, i) => <option\n                                            key={i}\n                                        >{current_year + i}</option>)}\n                                    </select>\n                                </Form.Group>\n                            </Col>\n\n                            <Col>\n                                <Form.Group className=\"mb-3\">\n                                    <Form.Label><b>CVC Number</b></Form.Label>\n                                    <Form.Control\n                                        type=\"numbers\"\n                                        onChange={(e) => setCvc(e.target.value)}\n                                        placeholder=\"123\" \n                                        maxLength=\"3\"\n                                        pattern=\"[0-9]+\"\n                                        required\n                                    />\n                                </Form.Group>\n                            </Col>\n\n                        </Row>\n\n                        <Form.Text className=\"text-muted pb-2\">\n                            <span style={{ display: \"flex\" }}>\n                                <input\n                                    hidden={differentCard}\n                                    type=\"checkbox\"\n                                    className=\"mt-1\"\n                                    value={differentCard ? false : saveCard}\n                                    onChange={() => setSaveCard(!saveCard)}\n                                />\n                                <span hidden={differentCard} className=\"ml-1\">Save my card for future payments</span>\n                            </span>\n                        </Form.Text>\n\n                        <Button className=\"btn-sm button-focus-css\" variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form>\n                    : \"\"}\n\n            </div>\n\n            <div className=\"my-4 card px-4 py-4\">\n                <h5>Saved card</h5>\n                {stripeCards.length > 0 ?\n                    stripeCards.map(cardData => (\n                        <div key={cardData.id}>\n                            <Card\n                                style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                                className=\"p-2\">\n                                <p><b>Card Number:</b> XXXX XXXX XXXX {cardData.card_number.slice(12,18)}</p>\n                                <div>\n                                    {showCardDetails(cardData)}\n                                    <button onClick={() => {\n                                        setCardDetails(true)\n                                        setCardDetailsId(cardData.id)\n                                    }} className=\"btn btn-sm btn-outline-primary button-focus-css\"\n                                    >\n                                        Show Card Details\n                                    </button>\n                                    <button onClick={() => payWithSavedCard(cardData)}\n                                        className=\"ml-2 btn btn-sm btn-outline-primary button-focus-css\">\n                                        Pay with this Card\n                                    </button>\n                                </div>\n                            </Card>\n\n                            {/* Edit Card Buttton */}\n\n                            <span\n                                onClick={() => history.push(\"/stripe-card-details/\")}>\n                                <i\n                                    title=\"edit card\"\n                                    className=\"fas fa-edit fa-lg edit-button-css mr-2\"\n                                ></i>\n                            </span>\n                        </div>\n                    )) : \"No saved card.\"}\n            </div>\n        </div>\n    )\n}\n\nexport default CreateCardComponent\n","import {\n    USER_LOGIN_REQUEST,\n    USER_LOGIN_SUCCESS,\n    USER_LOGIN_FAIL,\n    USER_LOGOUT,\n    CARD_CREATE_RESET,\n    USER_REGISTER_REQUEST,\n    USER_REGISTER_SUCCESS,\n    USER_REGISTER_FAIL,\n    USER_DETAILS_REQUEST,\n    USER_DETAILS_SUCCESS,\n    USER_DETAILS_FAIL,\n    UPDATE_USER_DETAILS_REQUEST,\n    UPDATE_USER_DETAILS_SUCCESS,\n    UPDATE_USER_DETAILS_FAIL,\n    DELETE_USER_ACCOUNT_REQUEST,\n    DELETE_USER_ACCOUNT_SUCCESS,\n    DELETE_USER_ACCOUNT_FAIL,\n    GET_USER_ALL_ADDRESSES_REQUEST,\n    GET_USER_ALL_ADDRESSES_SUCCESS,\n    GET_USER_ALL_ADDRESSES_FAIL,\n    GET_SINGLE_ADDRESS_REQUEST,\n    GET_SINGLE_ADDRESS_SUCCESS,\n    GET_SINGLE_ADDRESS_FAIL,\n    CREATE_USER_ADDRESS_REQUEST,\n    CREATE_USER_ADDRESS_SUCCESS,\n    CREATE_USER_ADDRESS_FAIL,\n    UPDATE_USER_ADDRESS_REQUEST,\n    UPDATE_USER_ADDRESS_SUCCESS,\n    UPDATE_USER_ADDRESS_FAIL,\n    DELETE_USER_ADDRESS_REQUEST,\n    DELETE_USER_ADDRESS_SUCCESS,\n    DELETE_USER_ADDRESS_FAIL,\n    CHECK_TOKEN_VALID_REQUEST,\n    CHECK_TOKEN_VALID_SUCCESS,\n    CHECK_TOKEN_VALID_FAIL,\n    GET_ALL_ORDERS_REQUEST,\n    GET_ALL_ORDERS_SUCCESS,\n    GET_ALL_ORDERS_FAIL,\n} from '../constants/index';\n\nimport axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_BASE_URL;\n\n// Login\nexport const login = (username, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(\n            `${API_URL}/account/login/`,\n            { 'username': username, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data)) // will create a new key-value pair in localStorage\n        // also see store.js file\n\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n// Logout\nexport const logout = () => (dispatch) => {\n    localStorage.removeItem('userInfo')\n    dispatch({\n        type: USER_LOGOUT\n    })\n    dispatch({\n        type: CARD_CREATE_RESET\n    })\n}\n\n// register\nexport const register = (username, email, password) => async (dispatch) => {\n    try {\n        dispatch({ type: USER_REGISTER_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`${API_URL}/account/register/`,\n            { 'username': username, 'email': email, 'password': password },\n            config\n        )\n\n        dispatch({\n            type: USER_REGISTER_SUCCESS,\n            payload: data\n        })\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    }\n    catch (error) {\n        dispatch({\n            type: USER_REGISTER_FAIL,\n            payload: error.response && error.response.data.detail ? error.response.data.detail : error.message\n        })\n    }\n}\n\n// check token validation\nexport const checkTokenValidation = () => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: CHECK_TOKEN_VALID_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(`${API_URL}/payments/check-token/`, config)\n\n        dispatch({\n            type: CHECK_TOKEN_VALID_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CHECK_TOKEN_VALID_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n\n// user details\nexport const userDetails = (id) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(`${API_URL}/account/user/${id}`, config)\n\n        dispatch({\n            type: USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n// user update details\nexport const userUpdateDetails = (userData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: UPDATE_USER_DETAILS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.put(\n            `${API_URL}/account/user_update/${userInfo.id}/`,\n            {\n                \"username\": userData.username,\n                \"email\": userData.email,\n                \"password\": userData.password\n            },\n            config\n        )\n\n        dispatch({\n            type: UPDATE_USER_DETAILS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_USER_DETAILS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// user account delete\nexport const userAccountDelete = (userData) => async (dispatch, getState) => {\n\n    try {\n\n        dispatch({\n            type: DELETE_USER_ACCOUNT_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.post(\n            `${API_URL}/account/user_delete/${userData.id}/`,\n            {\n                \"password\": userData.password\n            },\n            config\n        )\n\n        dispatch({\n            type: DELETE_USER_ACCOUNT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_USER_ACCOUNT_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// get user address\nexport const getAllAddress = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: GET_USER_ALL_ADDRESSES_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(\n            `${API_URL}/account/all-address-details/`,\n            config\n        )\n\n        dispatch({\n            type: GET_USER_ALL_ADDRESSES_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GET_USER_ALL_ADDRESSES_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// get user single address\nexport const getSingleAddress = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: GET_SINGLE_ADDRESS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(\n            `${API_URL}/account/address-details/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: GET_SINGLE_ADDRESS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GET_SINGLE_ADDRESS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// create user address\nexport const createUserAddress = (addressData) => async (dispatch, getState) => {\n\n    try {\n        dispatch({\n            type: CREATE_USER_ADDRESS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.post(\n            `${API_URL}/account/create-address/`,\n            addressData,\n            config\n        )\n\n        dispatch({\n            type: CREATE_USER_ADDRESS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: CREATE_USER_ADDRESS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// update user address\nexport const updateUserAddress = (id, addressData) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: UPDATE_USER_ADDRESS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.put(\n            `${API_URL}/account/update-address/${id}/`,\n            addressData,\n            config\n        )\n\n        dispatch({\n            type: UPDATE_USER_ADDRESS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_USER_ADDRESS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n\n// delete user address\nexport const deleteUserAddress = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: DELETE_USER_ADDRESS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.delete(\n            `${API_URL}/account/delete-address/${id}/`,\n            config\n        )\n\n        dispatch({\n            type: DELETE_USER_ADDRESS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_USER_ADDRESS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}\n\n// get all orders\nexport const getAllOrders = () => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: GET_ALL_ORDERS_REQUEST\n        })\n\n        const {\n            userLoginReducer: { userInfo }\n        } = getState()\n\n        const config = {\n            headers: {\n                \"Content-Type\": \"application/json\",\n                Authorization: `Bearer ${userInfo.token}`\n            }\n        }\n\n        // call api\n        const { data } = await axios.get(\n            `${API_URL}/account/all-orders-list/`,\n            config\n        )\n\n        dispatch({\n            type: GET_ALL_ORDERS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GET_ALL_ORDERS_FAIL,\n            payload: error.response && error.response.data.details ? error.response.data.details : error.message\n        })\n    }\n}","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Spinner, Form, Button, Card } from 'react-bootstrap'\nimport { chargeCustomer } from '../actions/cardActions'\nimport { Link, useHistory } from \"react-router-dom\";\nimport { getSingleAddress } from '../actions/userActions'\nimport Message from './Message'\n\n\nconst ChargeCardComponent = ({ product, match, selectedAddressId, addressSelected }) => {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    // create card reducer\n    const createCardReducer = useSelector(state => state.createCardReducer)\n    const { cardData } = createCardReducer\n\n    // charge card reducer\n    const chargeCardReducer = useSelector(state => state.chargeCardReducer)\n    const { success: chargeSuccessfull, error: chargeError, loading: chargingStatus } = chargeCardReducer\n\n    // get single address reducer    \n    const getSingleAddressReducer = useSelector(state => state.getSingleAddressReducer)\n    const { address } = getSingleAddressReducer\n\n    useEffect(() => {\n        dispatch(getSingleAddress(selectedAddressId))\n    }, [dispatch, match, selectedAddressId])\n\n    // charge card handler\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const address_detail = `${address.house_no}, near ${address.landmark}, ${address.city}, \n        ${address.state}, ${address.pin_code}`\n        const data = {\n            \"email\": cardData.email,\n            \"source\": cardData.id,\n            \"amount\": product.price,\n            \"name\": address.name,\n            \"card_number\": cardData.card_data.last4,\n            \"address\": address_detail,\n            \"ordered_item\": product.name,\n            \"paid_status\": true,\n            \"total_price\": product.price,\n            \"is_delivered\": false,\n            \"delivered_at\": \"Not Delivered\",\n        }\n        dispatch(chargeCustomer(data))\n    }\n\n    if (chargeSuccessfull) {\n        history.push({\n            pathname: '/payment-status/',\n            state: { detail: product }\n        })\n        window.location.reload()\n    }\n\n    return (\n        <div>\n            {chargeError ? <Message variant=\"danger\">{chargeError}</Message> : \"\"}\n            <span className=\"text-info\">\n                <h5>Confirm payment</h5>\n            </span>\n            <div className=\"mb-2\">\n                Using Card: XXXX XXXX XXXX {cardData.card_data.last4}\n            </div>\n            <Form onSubmit={onSubmit}>\n\n                {chargingStatus ?\n                    <Button variant=\"primary\" disabled style={{ width: \"100%\" }}>\n                        <Spinner\n                            as=\"span\"\n                            animation=\"grow\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                        />\n                        {\" \"}Processing Payment...\n                    </Button>\n                    :\n                    <Button variant=\"primary\" type=\"submit\" style={{ width: \"100%\" }}>\n                        Pay ₹{product.price}\n                    </Button>\n                }\n            </Form>\n\n            <Card\n                className=\"p-2 mt-2 mb-2\"\n                style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n            >\n                {address ?\n                    <div>\n                        <span className=\"text-info\">\n                            <b><em>Will be delievered at this address</em></b>\n                        </span>\n                        <p></p>\n                        <p><b>Name: </b>{address ? address.name : \"\"}</p>\n                        <p><b>Phone Number: </b>{address ? address.phone_number : \"\"}</p>\n                        <p><b>House Number: </b>{address ? address.house_no : \"\"}</p>\n                        <p><b>Landmark: </b>{address ? address.landmark : \"\"}</p>\n                        <p><b>City: </b>{address ? address.city : \"\"}</p>\n                        <p><b>State: </b>{address ? address.state : \"\"}</p>\n                        <p><b>Pin Code/Zip Code: </b>{address ? address.pin_code : \"\"}</p>\n                    </div>\n                    :\n                    \"\"\n                }\n            </Card>\n            <Link to=\"#\" onClick={() => window.location.reload()}>Select a different card to pay</Link>\n\n        </div >\n    )\n}\n\nexport default ChargeCardComponent\n","import React, { useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Card } from 'react-bootstrap'\nimport { getAllAddress } from '../actions/userActions'\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction UserAddressComponent({ handleAddressId }) {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const updatehandleAddressId = (id) => {\n        handleAddressId(id)\n    }\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // get address list reducer\n    const getAllAddressesOfUserReducer = useSelector(state => state.getAllAddressesOfUserReducer)\n    const { addresses } = getAllAddressesOfUserReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(getAllAddress())\n        }\n    }, [dispatch, history, userInfo])\n\n\n    return (\n        <div>\n            {addresses ? addresses.map((address, idx) => (\n                <div key={idx}>\n                    <Card\n                        className=\"p-2 mb-2\"\n                        style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                        key={address.id}\n\n                    >\n                        <input\n                            type=\"radio\"\n                            name=\"addressId\"\n                            value={0}\n                            onClick={() => updatehandleAddressId(address.id)}\n                        />                        \n                        <span><b>Name: </b>{address.name}</span>\n                        <span><b>Address: </b>\n                        {address.house_no}, {address.landmark}, {address.city}, \n                        {address.state}, {address.pin_code}</span>\n                    </Card>\n                </div>\n            ))\n                :\n                \"empty\"\n            }\n\n        </div >\n    )\n}\n\nexport default UserAddressComponent\n","import React, { useEffect, useState } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { Row, Col, Container, Image, Card } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductDetails } from '../actions/productActions'\nimport CreateCardComponent from '../components/CreateCardComponent'\nimport ChargeCardComponent from '../components/ChargeCardComponent'\nimport Message from '../components/Message'\nimport { Spinner } from 'react-bootstrap'\nimport { savedCardsList } from '../actions/cardActions'\nimport UserAddressComponent from '../components/UserAddressComponent'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { CHARGE_CARD_RESET } from '../constants/index'\nimport BottomNavBar from '../components/BottomNavBar'\n\nconst CheckoutPage = ({ match }) => {\n\n    let history = useHistory()\n\n    const dispatch = useDispatch()\n    const [addressSelected, setAddressSelected] = useState(false)\n    const [selectedAddressId, setSelectedAddressId] = useState(0)\n\n    // set address id handler\n    const handleAddressId = (id) => {\n        if (id) {\n            setAddressSelected(true)\n        }\n        setSelectedAddressId(id)\n    }\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    // product details reducer\n    const productDetailsReducer = useSelector(state => state.productDetailsReducer)\n    const { loading, error, product } = productDetailsReducer\n\n    // create card reducer\n    const createCardReducer = useSelector(state => state.createCardReducer)\n    const { error: cardCreationError, success, loading: cardCreationLoading } = createCardReducer\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // saved cards list reducer\n    const savedCardsListReducer = useSelector(state => state.savedCardsListReducer)\n    const { stripeCards } = savedCardsListReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getProductDetails(match.params.id))\n            dispatch(savedCardsList())\n            dispatch({\n                type: CHARGE_CARD_RESET\n            })\n        }\n    }, [dispatch, match, history, success, userInfo])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    return (\n        <div>\n            {cardCreationError ? <Message variant='danger'>{cardCreationError}</Message> : \"\"}\n            {loading\n                &&\n                <span style={{ display: \"flex\" }}>\n                    <h5>Getting Checkout Info</h5>\n                    <span className=\"ml-2\">\n                        <Spinner animation=\"border\" />\n                    </span>\n                </span>}\n            {!loading && cardCreationLoading ?\n                <span style={{ display: \"flex\" }}>\n                    <h5>Checking your card</h5>\n                    <span className=\"ml-2\">\n                        <Spinner animation=\"border\" />\n                    </span>\n                </span> : \"\"}\n            {error ? <Message variant='danger'>{error}</Message> :\n                <Container>\n                    <Row>\n                        <Col xs={6}>\n                            <h3>Checkout Summary</h3>\n                            <Card className=\"mb-4\">\n                                <Card.Body>\n                                    <Container>\n                                        <Row>\n                                            <Col>\n                                                <Image src={product.image} alt=\"image\" height=\"180\" />\n                                            </Col>\n                                            <Col>\n                                                <h5 className=\"card-title text-capitalize\">\n                                                    {product.name}\n                                                </h5>\n                                                <span className=\"card-text text-success\">₹ {product.price}</span>\n                                            </Col>\n                                        </Row>\n                                    </Container>\n                                </Card.Body>\n                            </Card>\n\n                            <span style={{ display: \"flex\" }}>\n                                <h3>Billing Address</h3>\n                                <Link\n                                    className=\"ml-2 mt-2\"\n                                    to=\"/all-addresses/\"\n                                >\n                                    Edit/Add Address\n                                </Link>\n                            </span>\n                            <UserAddressComponent handleAddressId={handleAddressId} />\n                        </Col>\n                        <Col xs={6}>\n                            <h3>\n                                Payments Section\n                            </h3>\n                            {success ?\n                                <ChargeCardComponent\n                                    selectedAddressId={selectedAddressId}\n                                    addressSelected={addressSelected}\n                                    product={product}\n                                />\n                                :\n                                <CreateCardComponent\n                                    addressSelected={addressSelected}\n                                    stripeCards={stripeCards} />}\n                        </Col>\n                    </Row>\n                </Container>\n            }\n            <BottomNavBar />\n        </div>\n    )\n}\n\nexport default CheckoutPage","export default __webpack_public_path__ + \"static/media/logo.b76b78ec.jpeg\";","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { logout } from '../actions/userActions'\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport logo from '../assets/logo.jpeg';\n\nfunction NavBar() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // logout\n    const logoutHandler = () => {\n        dispatch(logout()) // action\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    const location = useLocation();\n    const isExcludedPage = location.pathname === '/login' || location.pathname === '/register';\n\n    return (\n        <>\n            {!userInfo && !isExcludedPage && (\n                <div\n                    style={{\n                        position: 'fixed',\n                        top: 0,\n                        left: 0,\n                        width: '100%',\n                        height: '100%',\n                        backgroundColor: 'rgba(0, 0, 0, 0.8)',\n                        color: 'white',\n                        display: 'flex',\n                        flexDirection: 'column',\n                        justifyContent: 'center',\n                        alignItems: 'center',\n                        zIndex: 1050,\n                    }}\n                >\n                    <h2>You must log in to use the system</h2>\n                    <LinkContainer to=\"/login\">\n                        <button\n                            style={{\n                                marginTop: '20px',\n                                padding: '10px 20px',\n                                fontSize: '16px',\n                                backgroundColor: '#007bff',\n                                color: 'white',\n                                border: 'none',\n                                borderRadius: '5px',\n                                cursor: 'pointer',\n                            }}\n                        >\n                            Go to Login\n                        </button>\n                    </LinkContainer>\n                </div>\n            )}\n            <header>\n                <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\" collapseOnSelect>\n                    <Container>\n                        <LinkContainer to=\"/\">\n                            <Navbar.Brand>\n                                <img\n                                    src={logo}\n                                    alt=\"Logo\"\n                                    style={{ width: '40px', height: '40px', marginRight: '10px' }}\n                                />\n                            </Navbar.Brand>\n                        </LinkContainer>\n                        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                            <Nav className=\"mr-auto\">\n\n                                <LinkContainer to=\"/help\">\n                                <Nav.Link>Help</Nav.Link>\n                                </LinkContainer>\n                                <LinkContainer to=\"/about\">\n                                <Nav.Link>About Us</Nav.Link>\n                                </LinkContainer>\n\n                                {/* New Product (Admins Only) */}\n\n                                {userInfo && userInfo.admin ?\n                                    <LinkContainer to=\"/new-product/\">\n                                        <Nav.Link >Add Product</Nav.Link>\n                                    </LinkContainer>\n                                    : \"\"\n                                }\n\n                                {/* Admin-only links (if user is admin) */}\n                                {/* {userInfo && userInfo.isAdmin && (\n                                    <LinkContainer to=\"/ad-approval\">\n                                        <Nav.Link>Approve Ads</Nav.Link>\n                                    </LinkContainer>\n                                )} */}\n\n                            </Nav>\n\n                            {/* login-logout condition here */}\n\n                            {userInfo ?\n                                <div>\n                                    <NavDropdown className=\"navbar-nav text-capitalize\" title={userInfo.username} id='username'>\n                                        <LinkContainer to=\"/account\">\n                                            <NavDropdown.Item>Account Settings</NavDropdown.Item>\n                                        </LinkContainer>\n                                        <LinkContainer to=\"/all-addresses/\">\n                                            <NavDropdown.Item>Address Settings</NavDropdown.Item>\n                                        </LinkContainer>\n                                        <LinkContainer to=\"/stripe-card-details/\">\n                                            <NavDropdown.Item>Card Settings</NavDropdown.Item>\n                                        </LinkContainer>\n                                        <LinkContainer to=\"/all-orders/\">\n                                            <NavDropdown.Item>All Orders</NavDropdown.Item>\n                                        </LinkContainer>\n                                        <NavDropdown.Item onClick={logoutHandler}>\n                                            Logout\n                                        </NavDropdown.Item>\n                                    </NavDropdown>\n                                </div>\n                                :\n\n                                <LinkContainer to=\"/login\">\n                                    <Nav.Link><i className=\"fas fa-user\"></i> Login</Nav.Link>\n                                </LinkContainer>\n                            }\n                        </Navbar.Collapse>\n                    </Container>\n                </Navbar>\n            </header>\n        </>\n    )\n}\n\nexport default NavBar\n","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from 'react-router-dom'\nimport Message from \"./Message\"\n\nconst PaymentStatus = () => {\n    const location = useLocation()\n\n    const renderData = () => {\n\n        try {\n            const boughtData = location.state.detail\n\n            return (\n                <div>\n                    <h3 className=\"text-success\">Payment was Successfull</h3>\n                    <Card className=\"p-3\">\n                        Successfully bought\n                        <br />\n                        <span className=\"mb-2\" style={{ display: \"flex\" }}>\n                            {boughtData.name},\n                            ₹{boughtData.price} <i className=\"text-primary ml-1 mt-1 fas fa-check-circle\"></i>\n                        </span>\n                        <Link to=\"/all-orders/\">Go to orders page</Link>\n                    </Card>\n                </div>\n            )\n        } catch (error) {\n            return <Message variant='info'>Payment status not available.</Message>\n        }\n    }\n\n    return renderData()\n}\n\nexport default PaymentStatus\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { login } from '../actions/userActions'\nimport Message from '../components/Message';\nimport logo from '../assets/logo.jpeg'; // Adjusted the path\n\nfunction LoginPage({ history }) {\n    const [username, setUsername] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n\n    const dispatch = useDispatch()\n\n    // reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { error, userInfo } = userLoginReducer\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/') // homepage\n        }\n    }, [history, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        dispatch(login(username, password))\n    }\n\n    return (\n        <div>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    <div className=\"text-center\">\n                        <img src={logo} alt=\"Logo\" style={{ width: '150px', marginBottom: '20px' }} />\n                    </div>\n                    <h1>Sign In</h1>\n                    {error && <Message variant='danger'>{error}</Message>}\n                    <Form onSubmit={submitHandler}>\n                        <Form.Group controlId='username'>\n                            <Form.Label>\n                                Username\n                    </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"enter username\"\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='password'>\n                            <Form.Label>\n                                Password\n                    </Form.Label>\n                            <Form.Control\n                                type=\"password\"\n                                placeholder=\"enter your password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Button type=\"submit\" variant='primary'>Sign In</Button>\n                    </Form>\n\n                    <Row className=\"py-3\">\n                        <Col>\n                            Do not have an account?\n                    <Link\n                                to={`/register`}\n                            > Register</Link>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </div>\n\n    )\n}\n\nexport default LoginPage","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { register } from '../actions/userActions'\nimport Message from '../components/Message'\nimport logo from '../assets/logo.jpeg'; // Adjusted the path\n\nfunction RegisterPage({ history, variant }) {\n    const [username, setUsername] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n\n    const dispatch = useDispatch()\n\n    // reducer\n    const userRegisterReducer = useSelector(state => state.userRegisterReducer)\n    const { error, userInfo } = userRegisterReducer\n\n    useEffect(() => {\n        if (userInfo) {\n            history.push('/') // homepage\n        }\n    }, [history, userInfo])\n\n    const submitHandler = (e) => {\n        e.preventDefault()\n        if (password !== confirmPassword) {\n            setMessage('Passwords do not match!')\n        } else {\n            dispatch(register(username, email, password))\n        }\n    }\n\n    return (\n        <div>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    <div className=\"text-center\">\n                        <img src={logo} alt=\"Logo\" style={{ width: '150px', marginBottom: '20px' }} />\n                    </div>\n                    <h1>Sign Up</h1>\n                    {message && <Message variant='danger'>{message}</Message>}\n                    {error && <Message variant='danger'>{error}</Message>}\n                    <Form onSubmit={submitHandler}>\n\n                        <Form.Group controlId='name'>\n                            <Form.Label>\n                                Username\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"text\"\n                                placeholder=\"enter your username\"\n                                value={username}\n                                onChange={(e) => setUsername(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='email'>\n                            <Form.Label>\n                                Email Address\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"email\"\n                                placeholder=\"enter your email\"\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='password'>\n                            <Form.Label>\n                                Password\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"password\"\n                                placeholder=\"enter your password\"\n                                value={password}\n                                onChange={(e) => setPassword(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='passwordConfirm'>\n                            <Form.Label>\n                                Confirm Password\n                            </Form.Label>\n                            <Form.Control\n                                required\n                                type=\"password\"\n                                placeholder=\"confirm your password\"\n                                value={confirmPassword}\n                                onChange={(e) => setConfirmPassword(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Button type=\"submit\" variant='primary'>Sign Up</Button>\n                    </Form>\n\n                    <Row className=\"py-3\">\n                        <Col>\n                            Already have an account?\n                    <Link\n                                to={`/login`}\n                            > Login</Link>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        </div>\n\n    )\n}\n\nexport default RegisterPage","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { savedCardsList, updateStripeCard } from '../actions/cardActions'\nimport { Row, Col, Form, Button, Card } from 'react-bootstrap'\nimport { Spinner } from 'react-bootstrap'\nimport { UPDATE_STRIPE_CARD_RESET } from '../constants'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { useHistory } from 'react-router-dom'   \nimport BottomNavBar from '../components/BottomNavBar'; // Import the component\n\nconst CardUpdatePage = () => {\n\n    let history = useHistory()\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n\n    const dispatch = useDispatch()\n    const [cardNumber, setCardNumber] = useState(\"\")\n    const [name, setName] = useState(\"\")\n    const [expMonth, setExpMonth] = useState(\"\")\n    const [expYear, setExpYear] = useState(\"\")\n    const [addressCity, setAddressCity] = useState(\"\")\n    const [addressCountry, setAddressCountry] = useState(\"\")\n    const [addressState, setAddressState] = useState(\"\")\n    const [addressZip, setAddressZip] = useState(\"\")\n    const [customerId, setCustomerId] = useState(\"\")\n    const [cardId, setCardId] = useState(\"\")\n\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // saved cards list reducer\n    const savedCardsListReducer = useSelector(state => state.savedCardsListReducer)\n    const { stripeCards, loading } = savedCardsListReducer\n\n    // update card reducer\n    const updateStripeCardtReducer = useSelector(state => state.updateStripeCardtReducer)\n    const { success } = updateStripeCardtReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(savedCardsList())\n        }\n    }, [dispatch, history, userInfo, success])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        if (customerId && cardId) {\n            const all_card_data = {\n                card_number: cardNumber,\n                customer_id: customerId,\n                card_id: cardId,\n                exp_month: expMonth,\n                exp_year: expYear,\n                name_on_card: name,\n                address_city: addressCity,\n                address_country: addressCountry,\n                address_state: addressState,\n                address_zip: addressZip\n            }\n            // action\n            dispatch(updateStripeCard(all_card_data))\n        }\n    }\n\n    const setCustomerAndCardIds = (cus_Id, card_Id, c_num) => {\n        setCustomerId(cus_Id)\n        setCardId(card_Id)\n        setCardNumber(c_num)\n    }\n\n    if (success) {\n        alert(\"Card Successfully Updated\")\n        history.push(\"/stripe-card-details\")\n        dispatch({\n            type: UPDATE_STRIPE_CARD_RESET\n        })\n    }\n\n    return (\n        <div>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    <span\n                        className=\"d-flex justify-content-center\"\n                        style={{ display: \"flex\", marginBottom: \"15px\", color: \"#008080\" }}>\n                        <em>Update Card Details</em>\n                    </span>\n                    {loading && <Spinner animation=\"border\" />}\n                    {stripeCards.map((each, idx) => (\n                        <div key={idx}>\n                            <Card\n                                className=\"p-4 mb-4\"\n                                style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                            >\n                                <Form onSubmit={onSubmit}>\n\n                                    <Form.Group controlId='name'>\n                                        <Form.Label>\n                                            Name on Card\n                                        </Form.Label>\n                                        <Form.Control\n                                            autoFocus={true}\n                                            type=\"text\"\n                                            defaultValue={each.name_on_card}\n                                            placeholder=\"full name\"\n                                            onChange={(e) => setName(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='month'>\n                                        <Form.Label>\n                                            Exp Month\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            pattern=\"[0-9]+\"\n                                            maxLength=\"2\"\n                                            defaultValue={each.exp_month}\n                                            placeholder=\"exp month\"\n                                            onChange={(e) => setExpMonth(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='year'>\n                                        <Form.Label>\n                                            Exp Year\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            pattern=\"[0-9]+\"\n                                            defaultValue={each.exp_year}\n                                            placeholder=\"exp year\"\n                                            maxLength=\"4\"\n                                            onChange={(e) => setExpYear(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='city'>\n                                        <Form.Label>\n                                            Address City\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            defaultValue={each.address_city}\n                                            placeholder=\"address city\"\n                                            onChange={(e) => setAddressCity(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='country'>\n                                        <Form.Label>\n                                            Address Country\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            defaultValue={each.address_country}\n                                            placeholder=\"address country\"\n                                            onChange={(e) => setAddressCountry(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='state'>\n                                        <Form.Label>\n                                            Address State\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            defaultValue={each.address_state}\n                                            placeholder=\"address state\"\n                                            onChange={(e) => setAddressState(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Form.Group controlId='zip'>\n                                        <Form.Label>\n                                            Address Zip\n                                        </Form.Label>\n                                        <Form.Control\n                                            type=\"text\"\n                                            defaultValue={each.address_zip}\n                                            placeholder=\"address zip\"\n                                            pattern=\"[0-9]+\"\n                                            maxLength=\"6\"\n                                            onChange={(e) => setAddressZip(e.target.value)}\n                                        >\n                                        </Form.Control>\n                                    </Form.Group>\n\n                                    <Button\n                                        type=\"submit\"\n                                        variant='success'\n                                        onClick={() => setCustomerAndCardIds(each.customer_id, each.card_id, each.card_number)}\n                                        style={{ width: \"100%\" }}\n                                        className=\"btn-sm button-focus-css\">\n                                        Save Changes\n                                    </Button>\n                                    <Button\n                                        type=\"submit\"\n                                        variant='primary'\n                                        onClick={() => history.push(\"/stripe-card-details/\")}\n                                        style={{ width: \"100%\" }}\n                                        className=\"btn-sm mt-2 button-focus-css\">\n                                        Cancel\n                                    </Button>\n                                </Form>\n                            </Card>\n                        </div>\n                    ))}\n                </Col>\n            </Row>\n            <BottomNavBar /> {/* Add the BottomNavBar */}\n        </div>\n    )\n}\n\nexport default CardUpdatePage\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { savedCardsList } from '../actions/cardActions'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { Spinner } from 'react-bootstrap'\nimport Message from \"../components/Message\"\nimport DeleteCardComponent from '../components/DeleteCardComponent'\nimport { useHistory } from 'react-router-dom'\nimport BottomNavBar from '../components/BottomNavBar'\n\n\nconst CardDetailsPage = () => {\n\n    let history = useHistory()\n\n    const dispatch = useDispatch()\n    const [userId, setUserId] = useState(0)\n    const [runCardDeleteHandler, setRunCardDeleteHandler] = useState(false)\n    const [deleteCardNumber, setDeleteCardNumber] = useState(\"\")\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    // saved cards list reducer\n    const savedCardsListReducer = useSelector(state => state.savedCardsListReducer)\n    const { stripeCards, loading } = savedCardsListReducer\n\n    // saved cards list reducer\n    const deleteSavedCardReducer = useSelector(state => state.deleteSavedCardReducer)\n    const { success } = deleteSavedCardReducer\n\n\n    // toggle run card delete handler\n    const toggleRunCardDeleteHandler = () => {\n        setRunCardDeleteHandler(!runCardDeleteHandler)\n    }\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(savedCardsList())\n        }\n    }, [dispatch, history, userInfo])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    // card deletion message\n    if (success) {\n        alert(\"Card successfully deleted.\")\n        window.location.reload()\n\n    }\n\n    return (\n        <div>\n            {loading && <span style={{ display: \"flex\" }}>\n                <h5>Getting Card Information</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n\n            {/* Modal Start*/}\n            <div>\n                <>\n                    <DeleteCardComponent\n                        userId={userId}\n                        deleteCardNumber={deleteCardNumber}\n                        runCardDeleteHandler={runCardDeleteHandler}\n                        toggleRunCardDeleteHandler={toggleRunCardDeleteHandler}\n                    />\n                </>\n            </div>\n\n            {stripeCards.length > 0 ? stripeCards.map((each, idx) => (\n                <div key={idx}>\n                    <Container>\n                        <Row className=\"mr-6 mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Name on Card:</Col>\n                            <Col className=\"p-3\">\n                                {each.name_on_card ? <span>\n                                    {each.name_on_card}\n                                </span>\n                                    : \"Not Set\"}\n                            </Col>\n\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Exp Month:</Col>\n                            <Col className=\"p-3\">{each.exp_month ? each.exp_month : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Exp Year:</Col>\n                            <Col className=\"p-3\">{each.exp_year ? each.exp_year : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mr-6 mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address City:</Col>\n                            <Col className=\"p-3\">{each.address_city ? each.address_city : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address Country:</Col>\n                            <Col className=\"p-3\">{each.address_country ? each.address_country : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address State:</Col>\n                            <Col className=\"p-3\">{each.address_state ? each.address_state : \"Not Set\"}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Address Zip:</Col>\n                            <Col className=\"p-3\">{each.address_zip ? each.address_zip : \"Not Set\"}</Col>\n                        </Row>\n                    </Container>\n                    <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <Link to=\"/stripe-card-update/\">Update Card details</Link>\n                        <span className=\"ml-1 text-primary\">| </span>\n                        <span className=\"ml-1\"></span>\n\n                        <Link to=\"#\"\n                            onClick={() => {\n                                setDeleteCardNumber(each.card_number)\n                                setUserId(each.user)\n                                setRunCardDeleteHandler(!runCardDeleteHandler)\n                            }}\n                        >Delete Card</Link>\n                    </span>\n                </div>\n            )) :\n                <div>\n                    <Message variant='info'>Card details not available.</Message>\n                </div>\n            }\n            <BottomNavBar />\n        </div>\n    )\n}\n\nexport default CardDetailsPage\n","import React, { useEffect } from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { userDetails, logout, checkTokenValidation } from '../actions/userActions'\n//import { UPDATE_USER_ACCOUNT_RESET } from '../constants'\nimport Message from '../components/Message'\nimport { Spinner } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport BottomNavBar from '../components/BottomNavBar' // Import the BottomNavBar component\n\nfunction AccountPage() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // user details reducer\n    const userDetailsReducer = useSelector(state => state.userDetailsReducer)\n    const { user: userAccDetails, loading } = userDetailsReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            try {\n                dispatch(checkTokenValidation())\n                dispatch(userDetails(userInfo.id))\n            } catch (error) {\n                history.push(\"/\")\n            }\n        }\n    }, [history, userInfo, dispatch])\n\n    // logout\n    const logoutHandler = () => {\n        dispatch(logout()) // action\n    }\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    const renderData = () => {\n        try {\n\n            return (\n                <div>\n                    {loading && <span style={{ display: \"flex\" }}><h5>Getting User Information</h5><span className=\"ml-2\"><Spinner animation=\"border\" /></span></span>}\n                    <Container>\n                        <Row className=\"mr-6 mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Name:</Col>\n                            <Col className=\"p-3\">{userAccDetails.username}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Email:</Col>\n                            <Col className=\"p-3\">{userAccDetails.email}</Col>\n                        </Row>\n                        <Row className=\"mb-2 border border-dark\">\n                            <Col xs={2} className=\"p-3 bg-info text-white\">Admin Privileges:</Col>\n                            <Col className=\"p-3\">{userAccDetails.admin ? \"Yes\" : \"No\"}</Col>\n                        </Row>\n                    </Container>\n                    <span style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n                        <Link to={`/account/update`}>Update Account details</Link>\n                        <span className=\"ml-1 text-primary\">| </span>\n                        <span className=\"ml-1\"></span>\n\n                        <Link to={`/account/delete/`}>Delete Account</Link>\n                    </span>\n                </div>\n            )\n        } catch (error) {\n            return <Message variant='danger'>Something went wrong, go back to <Link\n                onClick={logoutHandler} to={`/login`}\n            > Login</Link> page.</Message>\n        }\n    }\n\n\n    return (\n        <>\n            {renderData()}\n            <BottomNavBar /> {/* Add the BottomNavBar component */}\n        </>\n    )\n\n}\n\nexport default AccountPage\n","import React, { useState, useEffect } from 'react'\nimport { Row, Col, Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { userDetails, userUpdateDetails, checkTokenValidation, logout } from '../actions/userActions'\nimport Message from '../components/Message'\nimport { Spinner } from 'react-bootstrap'\nimport {useHistory} from 'react-router-dom'\nimport { UPDATE_USER_DETAILS_RESET } from '../constants'\nimport BottomNavBar from '../components/BottomNavBar'\n\nfunction AccountUpdatePage() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n  \n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    const [username, setUsername] = useState(\"\")\n    const [email, setEmail] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // user details reducer\n    const userDetailsReducer = useSelector(state => state.userDetailsReducer)\n    const { user: userAccDetails, loading } = userDetailsReducer\n\n    // user update details reducer\n    const userDetailsUpdateReducer = useSelector(state => state.userDetailsUpdateReducer)\n    const { success } = userDetailsUpdateReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        }\n        dispatch(checkTokenValidation())\n        dispatch(userDetails(userInfo.id))\n    }, [dispatch, history, userInfo])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n      }\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const updatedUsername = username === \"\" ? userAccDetails.username : username\n        const updatedEmail = email === \"\" ? userAccDetails.email : email\n\n        if (password !== confirmPassword) {\n            alert(\"Passwords do not match\")\n        } else {\n            const userData = {\n                'username': updatedUsername,\n                'email': updatedEmail,\n                'password': password,\n            }\n            dispatch(userUpdateDetails(userData))\n        }\n    }\n\n    // logout\n    const logoutHandler = () => {\n        history.push(\"/login\")\n        dispatch(logout()) // action        \n    }\n\n    if(success) {\n        alert(\"Account successfully updated.\")\n        dispatch({\n            type: UPDATE_USER_DETAILS_RESET\n        })\n        history.push(\"/account/\")\n        dispatch(userDetails(userInfo.id))\n    }\n\n    const renderData = () => {\n        try {\n            return (\n                <div>\n                    <Row className='justify-content-md-center'>\n                        <Col xs={12} md={6}>\n                            <span\n                                className=\"d-flex justify-content-center\"\n                                style={{ display: \"flex\", marginBottom: \"15px\", color: \"#008080\" }}>\n                                <em>Update User Details</em>\n                            </span>\n                            {loading && <Spinner animation=\"border\" />}\n                            <Form onSubmit={onSubmit}>\n\n                                <Form.Group controlId='username'>\n                                    <Form.Label>\n                                        Username\n                                    </Form.Label>\n                                    <Form.Control\n                                        autoFocus={true}\n                                        type=\"text\"\n                                        defaultValue={userAccDetails.username}\n                                        placeholder=\"username\"\n                                        onChange={(e) => setUsername(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='email'>\n                                    <Form.Label>\n                                        Email Address\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"email\"\n                                        placeholder=\"enter email\"\n                                        defaultValue={userAccDetails.email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='password'>\n                                    <Form.Label>\n                                        Reset-Password\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"password\"\n                                        placeholder=\"enter new password\"\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Form.Group controlId='confirmPassword'>\n                                    <Form.Label>\n                                        Confirm Password\n                                    </Form.Label>\n                                    <Form.Control\n                                        type=\"password\"\n                                        placeholder=\"confirm new password\"\n                                        onChange={(e) => setConfirmPassword(e.target.value)}\n                                    >\n                                    </Form.Control>\n                                </Form.Group>\n\n                                <Button type=\"submit\" variant='success' className=\"btn-sm\">Save Changes</Button>\n                                <Link to={`/account`}>\n                                    <button className=\"btn btn-primary btn-sm ml-2\" type=\"button\">\n                                        Cancel\n                                    </button>\n                                </Link>\n                            </Form>\n                        </Col>\n                    </Row>\n                    <BottomNavBar />\n                </div>\n            )\n        } catch (error) {\n            return (\n                <Message variant=\"danger\">\n                    An error occurred. Please <Link onClick={logoutHandler} to={`/login`}>Login</Link> again.\n                </Message>\n            );\n        }\n    }\n\n    return renderData()\n}\n\nexport default AccountUpdatePage\n","import React, { useState } from 'react'\nimport { Row, Col, Button, Form } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { logout, userAccountDelete, checkTokenValidation } from '../actions/userActions'\nimport Message from '../components/Message'\nimport { Spinner } from 'react-bootstrap'\nimport { useHistory } from \"react-router-dom\";\nimport { DELETE_USER_ACCOUNT_RESET } from '../constants'\nimport BottomNavBar from '../components/BottomNavBar'; // Import the component\n\nfunction DeleteUserAccount() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n    const [myPassword, setMyPassword] = useState(\"\")\n\n    \n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // delete user account reducer\n    const deleteUserAccountReducer = useSelector(state => state.deleteUserAccountReducer)\n    const { success, loading, error } = deleteUserAccountReducer\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const userData = {\n            \"id\": userInfo.id,\n            \"password\": myPassword\n        }\n        dispatch(checkTokenValidation())        \n        dispatch(userAccountDelete(userData))        \n    }\n    \n    if(success) {\n        alert(\"Account successfully deleted.\")\n        dispatch({\n            type: DELETE_USER_ACCOUNT_RESET\n        })\n        dispatch(logout()) // action\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    return (\n        <div>\n            <Row className='justify-content-md-center'>\n                <Col xs={12} md={6}>\n                    <h3>Confirm your password to delete your account.</h3>\n                    {loading && <span style = {{ display: \"flex\" }}><h5>Please wait</h5><span className = \"ml-2\"><Spinner animation=\"border\" /></span></span>}                    \n                    {error && <Message variant='danger'>Incorrect Password!</Message>}        \n                    <div className=\"mt-4\">\n                        <Form onSubmit={onSubmit}>\n                            <Form.Group controlId='password'>\n                                <Form.Label>\n                                    Password\n                            </Form.Label>\n                                <Form.Control\n                                    required\n                                    type=\"password\"\n                                    placeholder=\"enter your password\"\n                                    value={myPassword}\n                                    onChange={(e) => setMyPassword(e.target.value)}\n                                >\n                                </Form.Control>\n                            </Form.Group>\n\n                            <Button type=\"submit\" variant=\"danger\">Confirm Delete</Button>\n                        </Form>\n                    </div>\n                </Col>\n            </Row>\n            <BottomNavBar /> {/* Add the BottomNavBar */}\n        </div>\n    )\n}\n\nexport default DeleteUserAccount\n","import React, { useState } from 'react'\nimport { Form, Button, Card, InputGroup } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { createUserAddress, getAllAddress } from '../actions/userActions'\nimport { CREATE_USER_ADDRESS_RESET } from '../constants'\nimport Message from './Message'\n\n\nconst CreateAddressComponent = ({ toggleCreateAddress }) => {\n\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState(\"\")\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\n    const [pinCode, setPinCode] = useState(\"\")\n    const [houseNumber, setHouseNumber] = useState(\"\")\n    const [landmark, setLandmark] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n    const [state, setState] = useState(\"\")\n\n    // Create User Address Reducer\n    const createUserAddressReducer = useSelector(state => state.createUserAddressReducer)\n    const { success: addressCreationSuccess, error: errorCreatingAddress } = createUserAddressReducer\n\n    const addressSubmitHandler = (e) => {\n        e.preventDefault()\n        const addressData = {\n            \"name\": name,\n            \"phone_number\": phoneNumber,\n            \"pin_code\": pinCode,\n            \"house_no\": houseNumber,\n            \"landmark\": landmark,\n            \"city\": city,\n            \"state\": state,\n        }\n        dispatch(createUserAddress(addressData))\n    }\n\n    if (addressCreationSuccess) {\n        alert(\"Address successfully created.\")\n        toggleCreateAddress()\n        dispatch({\n            type: CREATE_USER_ADDRESS_RESET\n        })\n        dispatch(getAllAddress())\n    }\n\n    return (\n        <div>\n            <p className=\"text-center text-info\"><em>New Address</em></p>\n            {errorCreatingAddress\n                ? <Message variant='danger'>\n                    {errorCreatingAddress}\n                </Message>\n                :\n                \"\"}\n            <Card\n                className=\"mx-auto mb-4\"\n                style={{ width: \"50%\", border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n            >\n                <Card.Body>\n                    <Form onSubmit={addressSubmitHandler}>\n\n                        <Form.Group controlId='name'>\n                            <Form.Label>\n                                Name\n                            </Form.Label>\n                            <Form.Control\n                                autoFocus={true}\n                                type=\"text\"\n                                placeholder=\"enter your name\"\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='phoneNumber'>\n                            <Form.Label>\n                                Phone Number\n                            </Form.Label>\n                            <InputGroup>\n                                <InputGroup.Text>+91</InputGroup.Text>\n                                <Form.Control\n                                    type=\"text\"\n                                    placeholder=\"phone number\"\n                                    pattern=\"[0-9]+\"\n                                    maxLength=\"10\"\n                                    value={phoneNumber}\n                                    onChange={(e) => setPhoneNumber(e.target.value)}\n                                >\n                                </Form.Control>\n                            </InputGroup>\n                        </Form.Group>\n\n                        <Form.Group controlId='pinCode'>\n                            <Form.Label>\n                                Pin Code\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"pin code\"\n                                value={pinCode}\n                                pattern=\"[0-9]+\"\n                                maxLength=\"6\"\n                                onChange={(e) => setPinCode(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='houseNumber'>\n                            <Form.Label>\n                                House No./Address\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"house number\"\n                                value={houseNumber}\n                                onChange={(e) => setHouseNumber(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='landmark'>\n                            <Form.Label>\n                                Landmark\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"landmark\"\n                                value={landmark}\n                                onChange={(e) => setLandmark(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='city'>\n                            <Form.Label>\n                                City\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"city\"\n                                value={city}\n                                onChange={(e) => setCity(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='state'>\n                            <Form.Label>\n                                State\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"state\"\n                                value={state}\n                                onChange={(e) => setState(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Button\n                            style={{ width: \"100%\" }}\n                            className=\"btn-sm\"\n                            type=\"submit\"\n                            variant=\"success\"\n                        >\n                            Save Address\n                        </Button>\n                        <Button\n                            style={{ width: \"100%\" }}\n                            className=\"btn-sm mt-2\"\n                            variant=\"primary\"\n                            onClick={() => toggleCreateAddress()}>\n                            Cancel\n                        </Button>\n                    </Form>\n\n                </Card.Body>\n            </Card>\n        </div>\n    )\n}\n\nexport default CreateAddressComponent\n","import React, { useEffect, useState } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Card, Modal, Button, Spinner } from 'react-bootstrap'\nimport { deleteUserAddress, getAllAddress, checkTokenValidation, logout } from '../actions/userActions'\nimport { DELETE_USER_ADDRESS_RESET, GET_SINGLE_ADDRESS_RESET } from '../constants'\nimport { useHistory } from 'react-router-dom'\nimport CreateAddressComponent from '../components/CreateAddressComponent'\nimport BottomNavBar from '../components/BottomNavBar'\n\n\nfunction AllAddressesOfUserPage() {\n\n    let history = useHistory()\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n\n    const dispatch = useDispatch()\n    const [deleteAddress, setDeleteAddress] = useState(\"\")\n    const [createAddress, setCreateAddress] = useState(false)\n\n    // modal state and functions\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // get address list reducer\n    const getAllAddressesOfUserReducer = useSelector(state => state.getAllAddressesOfUserReducer)\n    const { addresses, loading: loadingAllAddresses } = getAllAddressesOfUserReducer\n\n    // get address list reducer\n    const deleteUserAddressReducer = useSelector(state => state.deleteUserAddressReducer)\n    const { success: addressDeletionSuccess } = deleteUserAddressReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getAllAddress())\n            dispatch({\n                type: GET_SINGLE_ADDRESS_RESET\n            })\n        }\n    }, [dispatch, history, userInfo, addressDeletionSuccess])\n\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    if (addressDeletionSuccess) {\n        alert(\"Address successfully deleted.\")\n        dispatch({\n            type: DELETE_USER_ADDRESS_RESET\n        })\n        dispatch(getAllAddress())\n    }\n\n    // address deletion handler\n    const deleteAddressHandler = (address) => {\n        setDeleteAddress(address)\n        handleShow()\n    }\n\n    // address delete confirmation\n    const confirmDelete = (id) => {\n        dispatch(deleteUserAddress(id))\n        handleClose()\n    }\n\n    // toggle Create Address Button\n    const toggleCreateAddress = () => {\n        setCreateAddress(!createAddress)\n    }\n\n\n    return (\n        <div>\n\n            {/* Modal Start*/}\n            <div>\n                <>\n                    <Modal show={show} onHide={handleClose}>\n                        <Modal.Header closeButton>\n                            <Modal.Title>\n                                <i style={{ color: \"#e6e600\" }} className=\"fas fa-exclamation-triangle\"></i>\n                                {\" \"}\n                                Delete Confirmation\n                            </Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>\n                            Are you sure you want to delete this address\n                            {\" \"}<em>\"{deleteAddress.house_no}, {deleteAddress.city}, {deleteAddress.state}\"</em>?\n                        </Modal.Body>\n                        <Modal.Footer>\n                            <Button variant=\"danger\" onClick={() => confirmDelete(deleteAddress.id)}>\n                                Confirm Delete\n                            </Button>\n                            <Button variant=\"primary\" onClick={handleClose}>\n                                Cancel\n                            </Button>\n                        </Modal.Footer>\n                    </Modal>\n                </>\n            </div>\n\n            {/* Modal End */}\n\n            {/* loading spinner conditions */}\n\n            {loadingAllAddresses && <span style={{ display: \"flex\" }}>\n                <h5>Getting addresses</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n\n            {/* Create Address */}\n            {createAddress ?\n                <div>\n                    <CreateAddressComponent toggleCreateAddress={toggleCreateAddress} />\n                </div>\n                :\n                <button\n                    className=\"btn btn-sm btn-primary mb-2 button-focus-css\"\n                    onClick={() => toggleCreateAddress()}\n                >\n                    Add new address +\n                </button>\n            }\n\n            {addresses && !createAddress ? addresses.map((address, idx) => (\n                <div key={idx}>\n                    <Card\n                        className=\"p-2 mb-2\"\n\n                        style={{ border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n                        key={address.id}\n\n                    >\n                        <span><b>Name: </b>{address.name}</span>\n                        <span><b>Phone No: </b>+91 {address.phone_number}</span>\n                        <span><b>Address: </b>{address.house_no},\n                            near {address.landmark}, {address.city}, {address.state},\n                            {address.pin_code}\n\n                            {/* Delete Address Buttton */}\n\n                            <span\n                                onClick={() => deleteAddressHandler(address)}>\n                                <i\n                                    title=\"delete address\"\n                                    className=\"mt-2 fas fa-trash-alt fa-lg delete-button-css\"\n                                ></i>\n                            </span>\n\n                            {/* Edit Address Buttton */}\n\n                            <span\n                                onClick={() => history.push(`/all-addresses/${address.id}/`)}>\n                                <i\n                                    title=\"edit address\"\n                                    className=\"mt-2 mr-2 fas fa-edit fa-lg edit-button-css\"\n                                ></i>\n                            </span>\n\n                        </span>\n\n                    </Card>\n                </div>\n            ))\n                :\n                \"\"\n            }\n\n            <BottomNavBar />\n        </div >\n    )\n}\n\nexport default AllAddressesOfUserPage\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, Button, Card } from 'react-bootstrap'\nimport { checkTokenValidation, getAllAddress, getSingleAddress, logout, updateUserAddress } from '../actions/userActions'\nimport { useHistory } from 'react-router-dom'\nimport { UPDATE_USER_ADDRESS_RESET } from '../constants'\n\nconst AddressUpdatePage = ({ match }) => {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState(\"\")\n    const [phoneNumber, setPhoneNumber] = useState(\"\")\n    const [pinCode, setPinCode] = useState(\"\")\n    const [houseNumber, setHouseNumber] = useState(\"\")\n    const [landmark, setLandmark] = useState(\"\")\n    const [city, setCity] = useState(\"\")\n    const [state, setState] = useState(\"\")\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    // get single address reducer    \n    const getSingleAddressReducer = useSelector(state => state.getSingleAddressReducer)\n    const { address, error: errorFetchingAddress } = getSingleAddressReducer\n\n    // get single address reducer    \n    const updateUserAddressReducer = useSelector(state => state.updateUserAddressReducer)\n    const { success: addressUpdateSuccess } = updateUserAddressReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getSingleAddress(match.params.id))\n        }\n    }, [dispatch, history, userInfo, match])\n\n    // token validation check\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    const addressSubmitHandler = (e) => {\n        e.preventDefault()\n        const updatedAddress = {\n            \"name\": name,\n            \"phone_number\": phoneNumber,\n            \"pin_code\": pinCode,\n            \"house_no\": houseNumber,\n            \"landmark\": landmark,\n            \"city\": city,\n            \"state\": state,\n        }\n        dispatch(updateUserAddress(match.params.id, updatedAddress))\n    }\n\n    if(addressUpdateSuccess) {\n        alert(\"Address updated successfully.\")\n        dispatch({\n            type: UPDATE_USER_ADDRESS_RESET\n        })\n        history.push(\"/all-addresses/\")\n        dispatch(getAllAddress())\n    }\n\n    return (\n        <div>\n            <p className=\"text-center text-info\"><em>Update Address</em></p>\n            {errorFetchingAddress && <h3>Invalid Address Request</h3>}\n            <Card\n                className=\"mx-auto mb-4\"\n                style={{ width: \"50%\", border: \"1px solid\", borderColor: \"#C6ACE7\" }}\n            >\n                <Card.Body>\n                    <Form onSubmit={addressSubmitHandler}>\n\n                        <Form.Group controlId='name'>\n                            <Form.Label>\n                                Name\n                            </Form.Label>\n                            <Form.Control\n                                autoFocus={true}\n                                type=\"text\"\n                                placeholder=\"enter your name\"\n                                defaultValue={address ? address.name : \"\"}\n                                onChange={(e) => setName(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='phoneNumber'>\n                            <Form.Label>\n                                Phone Number\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"phone number\"\n                                pattern=\"[0-9]+\"\n                                maxLength=\"10\"\n                                defaultValue={address ? address.phone_number : \"\"}\n                                onChange={(e) => setPhoneNumber(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='pinCode'>\n                            <Form.Label>\n                                Pin Code\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"pin code\"\n                                defaultValue={address ? address.pin_code : \"\"}\n                                pattern=\"[0-9]+\"\n                                maxLength=\"6\"\n                                onChange={(e) => setPinCode(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='houseNumber'>\n                            <Form.Label>\n                                House No./Address\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"house number\"\n                                defaultValue={address ? address.house_no : \"\"}\n                                onChange={(e) => setHouseNumber(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='landmark'>\n                            <Form.Label>\n                                Landmark\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"landmark\"\n                                defaultValue={address ? address.landmark : \"\"}\n                                onChange={(e) => setLandmark(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='city'>\n                            <Form.Label>\n                                City\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"city\"\n                                defaultValue={address ? address.city : \"\"}\n                                onChange={(e) => setCity(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n                        <Form.Group controlId='state'>\n                            <Form.Label>\n                                State\n                            </Form.Label>\n                            <Form.Control\n                                type=\"text\"\n                                placeholder=\"state\"\n                                defaultValue={address ? address.state : \"\"}\n                                onChange={(e) => setState(e.target.value)}\n                            >\n                            </Form.Control>\n                        </Form.Group>\n\n\n                        <Button\n                            style={{ width: \"100%\" }}\n                            className=\"btn-sm\"\n                            type=\"submit\"\n                            variant=\"success\"\n                        >\n                            Save Changes\n                        </Button>\n\n                        <Button\n                            style={{ width: \"100%\" }}\n                            className=\"btn-sm mt-2\"\n                            variant=\"primary\"\n                            onClick={() => history.push(\"/all-addresses/\")}\n                        >\n                            Cancel\n                        </Button>\n\n\n                    </Form>\n\n                </Card.Body>\n            </Card>\n        </div >\n    )\n}\n\nexport default AddressUpdatePage\n","export const dateCheck = (param) => {\n    //console.log(\"dateCheck ===>\", param)\n    // Example: 2021-01-12\n    const dateValue = param.slice(8, 10);\n    const monthValue = param.slice(5, 7);\n    const yearValue = param.slice(0, 4);\n  \n    switch (monthValue) {\n      case \"01\":\n        return `${dateValue} January ${yearValue}`;\n      case \"02\":\n        return `${dateValue} Feburary ${yearValue}`;\n      case \"03\":\n        return `${dateValue} March ${yearValue}`;\n      case \"04\":\n        return `${dateValue} April ${yearValue}`;\n      case \"05\":\n        return `${dateValue} May ${yearValue}`;\n      case \"06\":\n        return `${dateValue} June ${yearValue}`;\n      case \"07\":\n        return `${dateValue} July ${yearValue}`;\n      case \"08\":\n        return `${dateValue} August ${yearValue}`;\n      case \"09\":\n        return `${dateValue} September ${yearValue}`;\n      case \"10\":\n        return `${dateValue} October ${yearValue}`;\n      case \"11\":\n        return `${dateValue} November ${yearValue}`;\n      case \"12\":\n        return `${dateValue} December ${yearValue}`;\n      default:\n        return null;\n    }\n  };\n","import React, { useState } from 'react'\n\nconst SearchBarForOrdersPage = ({ handleSearchTerm, placeholderValue }) => {\n\n    const [searchTerm, setSearchTerm] = useState(\"\")\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        handleSearchTerm(searchTerm);\n    };\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <span\n                    style={{ display: \"flex\" }}\n                    className=\"\"\n                >\n                    <input\n                        type=\"text\"\n                        value={searchTerm}\n                        placeholder={placeholderValue}\n                        className=\"form-control\"\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                    />\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-primary ml-2 button-focus-css\"\n                    ><i className=\"fas fa-search\"></i>\n                    </button>\n                </span>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchBarForOrdersPage\n","import React, { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { checkTokenValidation, getAllOrders, logout } from '../actions/userActions'\nimport { useHistory } from 'react-router-dom'\nimport { Table, Spinner } from 'react-bootstrap'\nimport { dateCheck } from '../components/GetDate'\nimport { changeDeliveryStatus } from '../actions/productActions'\nimport { CHANGE_DELIVERY_STATUS_RESET } from '../constants'\nimport SearchBarForOrdersPage from '../components/SearchBarForOrdersPage'\nimport Message from '../components/Message'\nimport BottomNavBar from '../components/BottomNavBar'\n\nfunction OrdersListPage() {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n    const placeholderValue = \"Search orders by Customer Name, Address or by Ordered Item\"\n\n    const todays_date = dateCheck(new Date().toISOString().slice(0, 10))\n\n    const [currentDateInfo] = useState(todays_date)\n    const [idOfchangeDeliveryStatus, setIdOfchangeDeliveryStatus] = useState(0)\n    const [cloneSearchTerm, setCloneSearchTerm] = useState(\"\")\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // get all orders reducer\n    const getAllOrdersReducer = useSelector(state => state.getAllOrdersReducer)\n    const { orders, loading: loadingOrders } = getAllOrdersReducer\n\n    // change delivery status reducer\n    const changeDeliveryStatusReducer = useSelector(state => state.changeDeliveryStatusReducer)\n    const { success: deliveryStatusChangeSuccess, loading: deliveryStatusChangeSpinner } = changeDeliveryStatusReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        } else {\n            dispatch(checkTokenValidation())\n            dispatch(getAllOrders())\n        }\n    }, [userInfo, dispatch, history])\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    const changeDeliveryStatusHandler = (id, status) => {\n        setIdOfchangeDeliveryStatus(id)\n        const productData = {\n            \"is_delivered\": status,\n            \"delivered_at\": status ? currentDateInfo : \"Not Delivered\"\n        }\n        dispatch(changeDeliveryStatus(id, productData))\n    }\n\n    if (deliveryStatusChangeSuccess) {\n        alert(\"Delivery status changed successfully\")\n        dispatch({\n            type: CHANGE_DELIVERY_STATUS_RESET\n        })\n        dispatch(getAllOrders())\n    }\n\n    const handleSearchTerm = (term) => {\n        setCloneSearchTerm(term)\n    };\n\n\n    return (\n        <div>\n            {loadingOrders && <span style={{ display: \"flex\" }}>\n                <h5>Getting Orders</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n            {userInfo.admin && <SearchBarForOrdersPage handleSearchTerm={handleSearchTerm} placeholderValue={placeholderValue} />}\n                {orders.length > 0 ?\n                <Table className=\"mt-2\" striped bordered>\n                    <thead>\n                        <tr className=\"p-3 bg-info text-white text-center\">\n                            <th>Order Id</th>\n                            <th>Customer Name</th>\n                            <th>Card Used</th>\n                            <th>Delivery Address</th>\n                            <th>Ordered Item</th>\n                            <th>Paid Status</th>\n                            <th>Paid On</th>\n                            <th>Total Amount</th>\n                            <th>Delivered Status</th>\n                            <th>Delivered On</th>\n                            {userInfo.admin &&\n                                <th>Delivery Status</th>\n                            }\n                        </tr>\n                    </thead>\n\n                    {/* filter orders by name, address or ordered item */}\n\n                    {orders.filter((item) => (\n\n                        item.name.toLowerCase().includes(cloneSearchTerm)\n                        ||\n                        item.ordered_item.toLowerCase().includes(cloneSearchTerm)\n                        ||\n                        item.address.toLowerCase().includes(cloneSearchTerm)\n                    )\n\n                    ).map((order, idx) => (\n                        <tbody key={idx}>\n                            <tr className=\"text-center\">\n                                <td>\n                                    {order.id}\n                                </td>\n                                <td>{order.name}</td>\n                                <td>{order.card_number}</td>\n                                <td>{order.address}</td>\n                                <td>{order.ordered_item}</td>\n                                <td>{order.paid_status ?\n                                    <i className=\"fas fa-check-circle text-success\"></i>\n                                    :\n                                    <i className=\"fas fa-times-circle text-danger\"></i>\n                                }</td>\n                                <td>{dateCheck(order.paid_at)}</td>\n                                <td>{order.total_price} INR</td>\n                                <td>{order.is_delivered ?\n                                    <i className=\"fas fa-check-circle text-success\"></i>\n                                    :\n                                    <i className=\"fas fa-times-circle text-danger\"></i>\n                                }</td>\n                                <td>{order.delivered_at}</td>\n                                {userInfo.admin &&\n                                    <td>\n                                        {order.is_delivered ?\n                                            <button\n                                                className=\"btn btn-outline-danger btn-sm\"\n                                                onClick={() => changeDeliveryStatusHandler(order.id, false)}\n                                            >\n                                                {deliveryStatusChangeSpinner\n                                                    &&\n                                                    idOfchangeDeliveryStatus === order.id\n                                                    ?\n                                                    <Spinner animation=\"border\" />\n                                                    :\n                                                    \"Mark as Undelivered\"}\n                                            </button>\n                                            :\n                                            <button\n                                                className=\"btn btn-outline-primary btn-sm\"\n                                                onClick={() => changeDeliveryStatusHandler(order.id, true)}\n                                            >\n                                                {deliveryStatusChangeSpinner\n                                                    &&\n                                                    idOfchangeDeliveryStatus === order.id\n                                                    ?\n                                                    <Spinner animation=\"border\" />\n                                                    :\n                                                    \"Mark as delivered\"}\n                                            </button>\n                                        }\n                                    </td>\n                                }\n                            </tr>\n                        </tbody>\n                    ))}\n                </Table>\n                : <Message variant=\"info\">No orders yet.</Message> }\n            <BottomNavBar />\n        </div>\n    )\n}\n\nexport default OrdersListPage","import React from 'react';\nimport { Spinner } from 'react-bootstrap';\n\nconst Loader = () => {\n    return (\n        <div className=\"d-flex justify-content-center align-items-center\" style={{ height: '100vh' }}>\n            <Spinner animation=\"border\" role=\"status\">\n                <span className=\"sr-only\">Loading...</span>\n            </Spinner>\n        </div>\n    );\n};\n\nexport default Loader;\n","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, Button } from 'react-bootstrap'\nimport { createProduct } from '../actions/productActions'\nimport { useHistory } from 'react-router'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { CREATE_PRODUCT_RESET } from '../constants'\nimport Message from '../components/Message';\nimport Loader from '../components/Loader'; // Import a loader component\nimport BottomNavBar from '../components/BottomNavBar'; // Import the component\n\nconst ProductCreatePage = () => {\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [price, setPrice] = useState(\"\")\n    const [stock, setStock] = useState(false)\n    const [image, setImage] = useState(null)\n    const [category, setCategory] = useState(\"\")\n    const [categories, setCategories] = useState([])\n    const [loading, setLoading] = useState(false); // State to manage loader visibility\n    const [images, setImages] = useState([]);\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // create product reducer\n    const createProductReducer = useSelector(state => state.createProductReducer)\n    const { product, success: productCreationSuccess, error: productCreationError } = createProductReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n\n    useEffect(() => {\n        if (!userInfo) {\n            history.push(\"/login\")\n        }\n        dispatch(checkTokenValidation())\n\n        // Fetch categories from the backend\n        const fetchCategories = async () => {\n            try {\n                const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/categories/`)\n                const data = await response.json()\n                setCategories(data)\n            } catch (error) {\n                console.error(\"Failed to fetch categories:\", error)\n            }\n        }\n        fetchCategories()\n    }, [dispatch, userInfo, history])\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n\n        let form_data = new FormData();\n        form_data.append('name', name);\n        form_data.append('description', description);\n        form_data.append('price', price);\n        form_data.append('stock', stock);\n        form_data.append('image', image);\n        form_data.append('category', category);\n\n        // Handle single image (backward compatibility)\n        if (image) {\n            form_data.append('image', image);\n        }\n\n        // Handle multiple images\n        images.forEach((img) => {\n            form_data.append('images', img);\n        });\n\n        console.log(\"Submitting form data:\", Object.fromEntries(form_data.entries())); // Log form data for debugging\n\n        dispatch(createProduct(form_data)).finally(() => setLoading(false));\n    };\n\n    if (productCreationSuccess) {\n        alert(\"Product successfully created.\");\n        history.push(`/product/${product.id}/`);\n        dispatch({\n            type: CREATE_PRODUCT_RESET\n        });\n    }\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\");\n        dispatch(logout());\n        history.push(\"/login\");\n        window.location.reload();\n    }\n\n    return (\n        <div>\n            {loading && <Loader />} {/* Display loader when loading is true */}\n            {productCreationError && (\n                <Message variant='danger'>\n                    {typeof productCreationError === 'string'\n                        ? productCreationError\n                        : productCreationError.image\n                        ? productCreationError.image[0]\n                        : \"An error occurred\"}\n                </Message>\n            )}\n            <span\n                className=\"d-flex justify-content-center text-info\"\n                >\n                <em>New Product</em>\n            </span>\n            <Form onSubmit={onSubmit}>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>\n                        <b>\n                            Product Name\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        required\n                        autoFocus={true}\n                        type=\"text\"\n                        value={name}\n                        placeholder=\"product name\"\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='description'>\n                    <Form.Label>\n                        <b>\n                            Product Description\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        value={description}\n                        placeholder=\"product description\"\n                        onChange={(e) => setDescription(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='price'>\n                    <Form.Label>\n                        <b>\n                            Price\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        required\n                        type=\"text\"\n                        pattern=\"[0-9]+(\\.[0-9]{1,2})?%?\"\n                        value={price}\n                        placeholder=\"199.99\"\n                        step=\"0.01\"\n                        maxLength=\"8\"\n                        onChange={(e) => setPrice(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <span style={{ display: \"flex\" }}>\n                    <label>In Stock</label>\n                    <input\n                        type=\"checkbox\"\n                        value={stock}\n                        className=\"ml-2 mt-2\"\n                        onChange={() => setStock(!stock)}\n                    />\n                </span>\n\n                <Form.Group controlId='image'>\n                    <Form.Label>\n                        <b>\n                            Product Image\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        required\n                        type=\"file\"\n                        onChange={(e) => setImage(e.target.files[0])}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='images'>\n                    <Form.Label>\n                        <b>Additional Images</b>\n                    </Form.Label>\n                    <Form.Control\n                        type=\"file\"\n                        multiple\n                        onChange={(e) => setImages([...e.target.files])}\n                    />\n                    <Form.Text className=\"text-muted\">\n                        Select multiple images (optional)\n                    </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId='category'>\n                    <Form.Label>\n                        <b>Category</b>\n                    </Form.Label>\n                    <Form.Control\n                        as=\"select\"\n                        required\n                        value={category}\n                        onChange={(e) => setCategory(e.target.value)}\n                    >\n                        <option value=\"\">Select Category</option>\n                        {categories.map((cat) => (\n                            <option key={cat.id} value={cat.id}>\n                                {cat.name}\n                            </option>\n                        ))}\n                    </Form.Control>\n                </Form.Group>\n\n                <Button\n                    type=\"submit\"\n                    variant='success'\n                    className=\"btn-sm button-focus-css\"\n                >\n                    {loading ? <Loader /> : \"Save Product\"} {/* Replace text with loader */}\n                </Button>\n                <Button\n                    type=\"button\"\n                    variant='primary'\n                    className=\"btn-sm ml-2 button-focus-css\"\n                    onClick={() => history.push(\"/\")}\n                >\n                    Cancel\n                </Button>\n            </Form>\n            <BottomNavBar /> {/* Add the BottomNavBar */}\n        </div>\n    )\n}\n\nexport default ProductCreatePage\n","import React, { useState, useEffect } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { Spinner } from 'react-bootstrap'\nimport { getProductDetails, updateProduct } from '../actions/productActions'\nimport { checkTokenValidation, logout } from '../actions/userActions'\nimport { UPDATE_PRODUCT_RESET } from '../constants'\nimport Message from '../components/Message'\nimport BottomNavBar from '../components/BottomNavBar'\n\nconst ProductUpdatePage = ({ match }) => {\n\n    // product details reducer\n    const productDetailsReducer = useSelector(state => state.productDetailsReducer)\n    const { loading: loadingPageDetails, product } = productDetailsReducer\n\n    // as our errors will be displayed at the top of the webpage\n    const scrollToTop = () => {\n        window.scrollTo({\n            top: 0,\n            behavior: \"smooth\"\n        });\n    }\n\n\n    const [name, setName] = useState(\"\")\n    const [description, setDescription] = useState(\"\")\n    const [price, setPrice] = useState(\"\")\n    const [stock, setStock] = useState(product.stock)\n    const [image, setImage] = useState(\"\")\n    const [newImages, setNewImages] = useState([]);\n\n    let history = useHistory()\n    const dispatch = useDispatch()\n\n    const [newImage, setNewImage] = useState(false)\n\n    // login reducer\n    const userLoginReducer = useSelector(state => state.userLoginReducer)\n    const { userInfo } = userLoginReducer\n\n    // product details reducer\n    const updateProductReducer = useSelector(state => state.updateProductReducer)\n    const {\n        success: productUpdationSuccess,\n        loading: loadingProductUpdations,\n        error: productUpdationError\n    } = updateProductReducer\n\n    // check token validation reducer\n    const checkTokenValidationReducer = useSelector(state => state.checkTokenValidationReducer)\n    const { error: tokenError } = checkTokenValidationReducer\n    \n    // get product details\n    useEffect(() => {\n        if (!userInfo || !userInfo.admin) {\n            history.push(\"/login\")\n        }\n        dispatch(checkTokenValidation())\n        dispatch(getProductDetails(match.params.id))\n    }, [dispatch, userInfo, history, match])\n\n    const onSubmit = (e) => {\n        e.preventDefault()\n        const productId = product.id\n        let formData = new FormData()\n        formData.append('name', name || product.name);  // Fallback to existing value\n        formData.append('description', description || product.description);\n        formData.append('price', price || product.price);\n        formData.append('stock', stock);\n\n        // Handle single image (backward compatibility)\n        if (image) {\n            formData.append('image', image);\n        }\n        \n        // Handle multiple images\n        newImages.forEach((img) => {\n            formData.append('images', img);\n        });\n\n        dispatch(updateProduct(product.id, formData));\n    }\n\n    if (productUpdationSuccess) {\n        alert(\"Product successfully updated.\")\n        dispatch({\n            type: UPDATE_PRODUCT_RESET\n        })\n        history.push(`/product/${product.id}`)\n    }\n\n\n    if (userInfo && tokenError === \"Request failed with status code 401\") {\n        alert(\"Session expired, please login again.\")\n        dispatch(logout())\n        history.push(\"/login\")\n        window.location.reload()\n    }\n\n    return (\n        <div>\n            <span\n                className=\"d-flex justify-content-center text-info\"\n            >\n                <em>Edit Product</em>\n            </span>\n            {productUpdationError ? (\n                <div>\n                    {scrollToTop()}\n                    <Message variant='danger'>{productUpdationError.image[0]}</Message>\n                </div>\n            ) : \"\"}\n            {loadingPageDetails && <span style={{ display: \"flex\" }}>\n                <h5>Getting Product Details</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span>}\n            {loadingProductUpdations ? <span style={{ display: \"flex\" }}>\n                <h5>Updating Product</h5>\n                <span className=\"ml-2\">\n                    <Spinner animation=\"border\" />\n                </span>\n            </span> : \"\"}\n            <Form onSubmit={onSubmit}>\n\n                <Form.Group controlId='image'>\n                    <Form.Label>\n                        <b>\n                            Product Image\n                        </b>\n                    </Form.Label>\n                    <p>\n                        <img src={product.image} alt={product.name} height=\"200\" />\n                    </p>\n\n                    {newImage ?\n                        <div>\n                            <Form.Control\n                                type=\"file\"\n                                onChange={(e) => setImage(e.target.files[0])}\n                            >\n                            </Form.Control>\n\n                            <span\n                                onClick={() => {\n                                    setNewImage(!newImage)\n                                    setImage(\"\")\n                                    dispatch({\n                                        type: UPDATE_PRODUCT_RESET\n                                    })\n                                }}\n                                className=\"btn btn-primary btn-sm mt-2\"\n                            >\n                                Cancel\n                            </span>\n                        </div>\n                        :\n                        <p>\n                            <span\n                                onClick={() => setNewImage(!newImage)}\n                                className=\"btn btn-success btn-sm\"\n                            >\n                                choose different image\n                            </span>\n                        </p>\n                    }\n                </Form.Group>\n                \n                <Form.Group controlId='newImages'>\n                    <Form.Label>\n                        <b>Additional Images</b>\n                    </Form.Label>\n                    <Form.Control\n                        type=\"file\"\n                        multiple\n                        onChange={(e) => setNewImages([...e.target.files])}\n                    />\n                    <Form.Text className=\"text-muted\">\n                        Add more images (optional)\n                    </Form.Text>\n                </Form.Group>\n\n                <Form.Group controlId='name'>\n                    <Form.Label>\n                        <b>\n                            Product Name\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        autoFocus={true}\n                        type=\"text\"\n                        defaultValue={product.name}\n                        placeholder=\"product name\"\n                        onChange={(e) => setName(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='description'>\n                    <Form.Label>\n                        <b>\n                            Product Description\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        defaultValue={product.description}\n                        placeholder=\"product description\"\n                        onChange={(e) => setDescription(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <Form.Group controlId='price'>\n                    <Form.Label>\n                        <b>\n                            Price\n                        </b>\n                    </Form.Label>\n                    <Form.Control\n                        type=\"text\"\n                        pattern=\"[0-9]+(\\.[0-9]{1,2})?%?\"\n                        defaultValue={product.price}\n                        placeholder=\"199.99\"\n                        step=\"0.01\"\n                        maxLength=\"8\"\n                        onChange={(e) => setPrice(e.target.value)}\n                    >\n                    </Form.Control>\n                </Form.Group>\n\n                <span style={{ display: \"flex\" }}>\n                    <label>In Stock</label>\n                    <input\n                        type=\"checkbox\"\n                        defaultChecked={product.stock}\n                        className=\"ml-2 mt-2\"\n                        onChange={() => setStock(!stock)}\n                    />\n                </span>\n\n                <Button\n                    type=\"submit\"\n                    variant='success'\n                    className=\"btn-sm button-focus-css mb-4\"\n                >\n                    Save Changes\n                </Button>\n                <Button\n                    onClick={() => history.push(`/product/${product.id}`)}\n                    variant='primary'\n                    className=\"btn-sm ml-2 button-focus-css mb-4\"\n                >\n                    Cancel\n                </Button>\n            </Form>\n            <BottomNavBar />\n        </div>\n    )\n}\n\nexport default ProductUpdatePage\n","import React from 'react'\nimport Message from '../components/Message'\nimport BottomNavBar from '../components/BottomNavBar'\n\nfunction NotFoundPage() {\n    return (\n        <div>\n            <Message variant='danger'>\n                404 Not Found\n            </Message>\n            <BottomNavBar />\n        </div>\n    )\n}\n\nexport default NotFoundPage\n","import axios from 'axios'\nimport {\n    AD_SUBMISSION_REQUEST,\n    AD_SUBMISSION_SUCCESS,\n    AD_SUBMISSION_FAIL,\n    AD_APPROVAL_REQUEST,\n    AD_APPROVAL_SUCCESS,\n    AD_APPROVAL_FAIL,\n    ACTIVE_ADS_REQUEST,\n    ACTIVE_ADS_SUCCESS,\n    ACTIVE_ADS_FAIL,\n    PENDING_ADS_REQUEST,\n    PENDING_ADS_SUCCESS,\n    PENDING_ADS_FAIL\n} from '../constants'\n\nconst API_URL = process.env.REACT_APP_API_BASE_URL;\n\nexport const submitAd = (formData) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: AD_SUBMISSION_REQUEST });\n        console.log('Submitting ad to the server...');\n\n        const { userLoginReducer } = getState();\n        const { userInfo } = userLoginReducer;\n        \n        if (!userInfo) {\n            throw new Error('Please login to submit an ad');\n        }\n\n        const config = {\n            headers: {\n                'Content-Type': 'multipart/form-data',\n                Authorization: `Bearer ${userInfo.token || userInfo.access}`, // Try both\n            },\n            withCredentials: true,\n        };\n\n        const { data } = await axios.post(\n            `${API_URL}/ads/submit/`,\n            formData,\n            config\n        );        \n\n        console.log('Ad submission successful:', data);\n\n        dispatch({\n            type: AD_SUBMISSION_SUCCESS,\n            payload: data,\n        });\n\n    } catch (error) {\n        console.error('Ad submission failed:', error.response || error.message);\n\n        dispatch({\n            type: AD_SUBMISSION_FAIL,\n            payload:\n                error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        });\n    }\n}\n\nexport const approveAd = (id) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: AD_APPROVAL_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        }\n\n        const { data } = await axios.put(\n            `${API_URL}/ads/approve/${id}/`,\n            {},\n            config\n        )\n\n        dispatch({\n            type: AD_APPROVAL_SUCCESS,\n            payload: data,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: AD_APPROVAL_FAIL,\n            payload:\n                error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        })\n    }\n}\n\nexport const listActiveAds = () => async (dispatch) => {\n    try {\n        dispatch({ type: ACTIVE_ADS_REQUEST })\n\n        const { data } = await axios.get(`${API_URL}/ads/active/`)\n\n        dispatch({\n            type: ACTIVE_ADS_SUCCESS,\n            payload: data,\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ACTIVE_ADS_FAIL,\n            payload:\n                error.response && error.response.data.detail\n                    ? error.response.data.detail\n                    : error.message,\n        })\n    }\n}\n\nexport const listPendingAds = () => async (dispatch, getState) => {\n    try {\n      dispatch({ type: PENDING_ADS_REQUEST })\n  \n      const config = {\n        headers: {\n        },\n      }\n  \n      const { data } = await axios.get(\n        `${API_URL}/ads/pending/`,\n        config\n      )\n  \n      dispatch({\n        type: PENDING_ADS_SUCCESS,\n        payload: data,\n      })\n  \n    } catch (error) {\n      dispatch({\n        type: PENDING_ADS_FAIL,\n        payload:\n          error.response && error.response.data.detail\n            ? error.response.data.detail\n            : error.message,\n      })\n    }\n}","import React, { useEffect, useState, useCallback } from 'react'  // Added useCallback\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Modal, Button } from 'react-bootstrap'\nimport { listActiveAds } from '../actions/adActions'\nimport { Link } from 'react-router-dom'\n\nfunction FullScreenAd() {\n  const [showAd, setShowAd] = useState(false)\n  const [currentAdIndex, setCurrentAdIndex] = useState(0)\n  \n  const dispatch = useDispatch()\n  \n  const activeAdsList = useSelector(state => state.activeAdsList || {})\n  const { loading, activeAds } = activeAdsList  // Removed unused 'error'\n\n  // Using useCallback to memoize the function\n  const rotateAd = useCallback(() => {\n    if (activeAds && activeAds.length > 0) {\n      setCurrentAdIndex(prevIndex => (prevIndex + 1) % activeAds.length)\n    }\n  }, [activeAds])  // Added dependency\n\n  useEffect(() => {\n    let isMounted = true;\n\n    if (isMounted) {\n      dispatch(listActiveAds());\n    }\n\n    const initialTimer = setTimeout(() => {\n      if (activeAds && activeAds.length > 0) {\n        setShowAd(true);\n      }\n    }, 5000);\n\n    const interval = setInterval(rotateAd, 10000);\n\n    return () => {\n      isMounted = false; // Cleanup on unmount\n      clearTimeout(initialTimer);\n      clearInterval(interval);\n    };\n  }, [dispatch, activeAds, rotateAd]);  // Added dependencies\n\n  if (loading || !activeAds || activeAds.length === 0) {\n    return null\n  }\n\n  const currentAd = activeAds[currentAdIndex]\n\n  return (\n    <Modal \n      show={showAd} \n      onHide={() => setShowAd(false)} \n      size=\"lg\" \n      centered\n      backdrop=\"static\"\n    >\n      <Modal.Header closeButton>\n        <Modal.Title>{currentAd.ad_title}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        {currentAd.ad_type === 'image' ? (\n          <img \n            src={currentAd.ad_file_url} \n            alt={currentAd.ad_title} \n            style={{ width: '100%', maxHeight: '60vh', objectFit: 'contain' }}\n          />\n        ) : (\n          <video \n            controls \n            style={{ width: '100%', maxHeight: '60vh' }}\n            autoPlay\n          >\n            <source src={currentAd.ad_file_url} type=\"video/mp4\" />\n          </video>\n        )}\n        <p className=\"mt-3\">{currentAd.ad_description}</p>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button as={Link} to={`/order-now?ad=${currentAd.id}`} variant=\"primary\">\n          Order Now\n        </Button>\n        <Button variant=\"secondary\" onClick={() => setShowAd(false)}>\n          Close\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  )\n}\n\nexport default FullScreenAd","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap'\nimport { FaAd, FaArrowRight, FaCheckCircle } from 'react-icons/fa'\nimport './css/AdvertisePage.css' // Create this CSS file\nimport BottomNavBar from '../components/BottomNavBar'; // Import the component\n\nfunction AdvertisePage() {\n  return (\n    <Container className=\"advertise-page py-5\">\n      <Row className=\"justify-content-center mb-5\">\n        <Col lg={8} className=\"text-center\">\n          <h1 className=\"display-4 mb-4\">\n            <FaAd className=\"text-primary mr-2\" />\n            Advertise With Us\n          </h1>\n          <p className=\"lead text-muted\">\n            Reach thousands of potential customers and grow your business\n          </p>\n        </Col>\n      </Row>\n\n      <Row className=\"justify-content-center\">\n        <Col md={6} lg={5} className=\"mb-4\">\n          <Card className=\"pricing-card h-100 shadow-sm border-0\">\n            <Card.Body className=\"text-center p-4\">\n              <div className=\"pricing-badge bg-light text-primary mb-3\">POPULAR</div>\n              <h3 className=\"mb-3\">Daily Promotion</h3>\n              <h2 className=\"display-4 mb-3\">\n                <span className=\"text-primary\">Tsh 500</span>/day\n              </h2>\n              <ul className=\"list-unstyled mb-4\">\n                <li className=\"mb-2\"><FaCheckCircle className=\"text-success mr-2\" />24-hour visibility</li>\n                <li className=\"mb-2\"><FaCheckCircle className=\"text-success mr-2\" />Featured placement</li>\n                <li className=\"mb-2\"><FaCheckCircle className=\"text-success mr-2\" />Detailed analytics</li>\n              </ul>\n              <Button \n                as={Link} \n                to=\"/ad-submission\" \n                variant=\"primary\" \n                size=\"lg\"\n                className=\"w-100 py-3\"\n              >\n                Get Started <FaArrowRight className=\"ml-2\" />\n              </Button>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col md={6} lg={5} className=\"mb-4\">\n          <Card className=\"pricing-card h-100 shadow-sm border-0\">\n            <Card.Body className=\"text-center p-4\">\n              <h3 className=\"mb-3\">Monthly Package</h3>\n              <h2 className=\"display-4 mb-3\">\n                <span className=\"text-primary\">Tsh 5000</span>/month\n              </h2>\n              <ul className=\"list-unstyled mb-4\">\n                <li className=\"mb-2\"><FaCheckCircle className=\"text-success mr-2\" />30-day visibility</li>\n                <li className=\"mb-2\"><FaCheckCircle className=\"text-success mr-2\" />Premium placement</li>\n                <li className=\"mb-2\"><FaCheckCircle className=\"text-success mr-2\" />Detailed analytics</li>\n                <li className=\"mb-2\"><FaCheckCircle className=\"text-success mr-2\" />24/7 support</li>\n              </ul>\n              <Button \n                as={Link} \n                to=\"/ad-submission\" \n                variant=\"outline-primary\" \n                size=\"lg\"\n                className=\"w-100 py-3\"\n              >\n                Get Started <FaArrowRight className=\"ml-2\" />\n              </Button>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row className=\"justify-content-center mt-5\">\n        <Col lg={8} className=\"text-center\">\n          <div className=\"bg-light p-4 rounded\">\n            <h4 className=\"mb-3\">Have questions?</h4>\n            <p className=\"mb-0\">\n              Contact our advertising team at <a href=\"mailto:ads@brkluxe.com\">ads@brkluxe.com</a> \n              or call <a href=\"tel:+255613509299\">+255 613 509 299</a>\n            </p>\n          </div>\n        </Col>\n      </Row>\n      <BottomNavBar /> {/* Add the BottomNavBar */}\n    </Container>\n  )\n}\n\nexport default AdvertisePage","export default __webpack_public_path__ + \"static/media/lipa_namba.878e5a37.jpeg\";","import React, { useState, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Form, Button, Row, Col, Container, Spinner, Alert, Modal } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { submitAd } from '../actions/adActions'\nimport { AD_SUBMISSION_RESET } from '../constants'\nimport paymentInstructions from '../assets/lipa_namba.jpeg'\nimport BottomNavBar from '../components/BottomNavBar'\n\nfunction AdSubmissionPage() {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [phone, setPhone] = useState('')\n  const [countryCode, setCountryCode] = useState('+255')\n  const [adTitle, setAdTitle] = useState('')\n  const [adDescription, setAdDescription] = useState('')\n  const [adType, setAdType] = useState('image')\n  const [adFile, setAdFile] = useState(null)\n  const [paymentProof, setPaymentProof] = useState(null)\n  const [agreement, setAgreement] = useState(false)\n  const [paymentMethod, setPaymentMethod] = useState('lipa_namba')\n  \n  const [showModal, setShowModal] = useState(false)\n  const [modalMessage, setModalMessage] = useState('')\n  const [modalVariant, setModalVariant] = useState('success')\n\n  const dispatch = useDispatch()\n  const history = useHistory()\n\n  // Get state from Redux store with proper fallbacks\n  const { userInfo } = useSelector(state => state.userLoginReducer) || {}\n  const { \n    loading: adLoading = false, \n    error: adError = null, \n    success: adSuccess = false \n  } = useSelector(state => state.adSubmission || {})\n\n  // Debug state changes\n  useEffect(() => {\n    console.log('Redux State:', { adLoading, adError, adSuccess })\n  }, [adLoading, adError, adSuccess])\n\n  // Redirect to login if not authenticated\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login?redirect=submit-ad')\n    }\n  }, [userInfo, history])\n\n  // Handle success state\n  useEffect(() => {\n    if (adSuccess) {\n      setModalMessage('Your ad has been successfully submitted! Redirecting to home page...')\n      setModalVariant('success')\n      setShowModal(true)\n      \n      const timer = setTimeout(() => {\n        dispatch({ type: AD_SUBMISSION_RESET })\n        history.push('/')\n      }, 3000)\n      \n      return () => clearTimeout(timer)\n    }\n  }, [adSuccess, history, dispatch])\n\n  // Handle error state\n  useEffect(() => {\n    if (adError) {\n      setModalMessage(adError)\n      setModalVariant('danger')\n      setShowModal(true)\n    }\n  }, [adError])\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      dispatch({ type: AD_SUBMISSION_RESET })\n    }\n  }, [dispatch])\n\n  const submitHandler = async (e) => {\n    e.preventDefault()\n    \n    if (!userInfo) {\n      setModalMessage('Please login to submit an ad')\n      setModalVariant('danger')\n      setShowModal(true)\n      return\n    }\n\n    // Validate phone number\n    let sanitizedPhone = phone\n    if (sanitizedPhone.startsWith('0')) {\n      sanitizedPhone = sanitizedPhone.slice(1)\n    }\n\n    if (sanitizedPhone.length !== 9 || !/^\\d+$/.test(sanitizedPhone)) {\n      setModalMessage('Phone number must have exactly 9 digits (excluding the country code).')\n      setModalVariant('danger')\n      setShowModal(true)\n      return\n    }\n\n    const fullPhoneNumber = `${countryCode}${sanitizedPhone}`\n\n    const formData = new FormData()\n    formData.append('name', name)\n    formData.append('email', email)\n    formData.append('phone_number', fullPhoneNumber)\n    formData.append('ad_title', adTitle)\n    formData.append('ad_description', adDescription)\n    formData.append('ad_type', adType)\n    formData.append('payment_method', paymentMethod)\n    formData.append('duration_days', 30)\n    formData.append('ad_file', adFile)\n    formData.append('payment_proof', paymentProof)\n\n    try {\n      await dispatch(submitAd(formData))\n    } catch (err) {\n      console.error('Submission error:', err)\n    }\n  }\n\n  if (!userInfo) {\n    return (\n      <Container className=\"text-center my-5\">\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Redirecting to login...</span>\n        </Spinner>\n      </Container>\n    )\n  }\n\n  return (\n    <>\n      <Container>\n        <Row className=\"justify-content-md-center\">\n          <Col xs={12} md={8}>\n            <h2 className=\"my-4\">Submit Your Ad</h2>\n            \n            {adSuccess && (\n              <Alert variant=\"success\">\n                Your ad has been successfully submitted! Redirecting to home page...\n              </Alert>\n            )}\n            \n            {adError && (\n              <Alert variant=\"danger\">\n                {adError}\n              </Alert>\n            )}\n            \n            <Form onSubmit={submitHandler}>\n              <Form.Group controlId=\"name\">\n                <Form.Label>Name</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter your name\"\n                  value={name}\n                  onChange={(e) => setName(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                  type=\"email\"\n                  placeholder=\"Enter email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"phone\">\n                <Form.Label>Phone Number</Form.Label>\n                <Row>\n                  <Col xs={4}>\n                    <Form.Control\n                      as=\"select\"\n                      value={countryCode}\n                      onChange={(e) => setCountryCode(e.target.value)}\n                    >\n                      <option value=\"+255\">+255 (Tanzania)</option>\n                      <option value=\"+254\">+254 (Kenya)</option>\n                      <option value=\"+256\">+256 (Uganda)</option>\n                    </Form.Control>\n                  </Col>\n                  <Col xs={8}>\n                    <Form.Control\n                      type=\"text\"\n                      placeholder=\"Enter phone number\"\n                      value={phone}\n                      onChange={(e) => setPhone(e.target.value)}\n                      required\n                    />\n                  </Col>\n                </Row>\n              </Form.Group>\n\n              <Form.Group controlId=\"adTitle\">\n                <Form.Label>Ad Title</Form.Label>\n                <Form.Control\n                  type=\"text\"\n                  placeholder=\"Enter ad title\"\n                  value={adTitle}\n                  onChange={(e) => setAdTitle(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"adDescription\">\n                <Form.Label>Ad Description</Form.Label>\n                <Form.Control\n                  as=\"textarea\"\n                  rows={3}\n                  placeholder=\"Enter ad description\"\n                  value={adDescription}\n                  onChange={(e) => setAdDescription(e.target.value)}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"adType\">\n                <Form.Label>Ad Type</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  value={adType}\n                  onChange={(e) => setAdType(e.target.value)}\n                >\n                  <option value=\"image\">Image</option>\n                  <option value=\"video\">Video</option>\n                </Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId=\"adFile\">\n                <Form.Label>Upload Ad File</Form.Label>\n                <small className=\"text-muted\">Advertisement should not Exceed More than 10 seconds and 15 MB</small>\n                <Form.File\n                  onChange={(e) => setAdFile(e.target.files[0])}\n                  accept={adType === 'image' ? 'image/*' : 'video/*'}\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"paymentInstructions\">\n                <Form.Label>Payment Instructions</Form.Label>\n                <div className=\"text-center\">\n                  <img \n                    src={paymentInstructions} \n                    alt=\"Payment Instructions\" \n                    className=\"img-fluid\" \n                  />\n                </div>\n              </Form.Group>\n\n              <Form.Group controlId=\"paymentMethod\">\n                <Form.Label>Payment Method</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  value={paymentMethod}\n                  onChange={(e) => setPaymentMethod(e.target.value)}\n                >\n                  <option value=\"lipa_namba\">Lipa Namba</option>\n                  <option value=\"other\">Other</option>\n                </Form.Control>\n                {paymentMethod === 'lipa_namba' && (\n                  <small className=\"text-muted\">\n                    Please send payment to: 0712345678 (Example number)\n                  </small>\n                )}\n              </Form.Group>\n\n              <Form.Group controlId=\"paymentProof\">\n                <Form.Label>Payment Proof (Screenshot)</Form.Label>\n                <Form.File\n                  onChange={(e) => setPaymentProof(e.target.files[0])}\n                  accept=\"image/*\"\n                  required\n                />\n              </Form.Group>\n\n              <Form.Group controlId=\"agreement\">\n                <Form.Check\n                  type=\"checkbox\"\n                  label=\"I confirm that I have made the payment and the details above are correct.\"\n                  checked={agreement}\n                  onChange={(e) => setAgreement(e.target.checked)}\n                  required\n                />\n              </Form.Group>\n\n              <Button \n                variant=\"primary\" \n                type=\"submit\" \n                disabled={adLoading || !agreement}\n                className=\"mb-5\"\n              >\n                {adLoading ? (\n                  <>\n                    <Spinner\n                      as=\"span\"\n                      animation=\"border\"\n                      size=\"sm\"\n                      role=\"status\"\n                      aria-hidden=\"true\"\n                    />\n                    {' Submitting...'}\n                  </>\n                ) : 'Submit Ad'}\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n\n      <Modal show={showModal} onHide={() => setShowModal(false)} centered>\n        <Modal.Header closeButton={modalVariant !== 'success'}>\n          <Modal.Title>{modalVariant === 'success' ? 'Success' : 'Error'}</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Alert variant={modalVariant}>{modalMessage}</Alert>\n          {modalVariant === 'success' && (\n            <div className=\"text-center mt-2\">\n              <Spinner animation=\"border\" size=\"sm\" />\n              <p>Redirecting to home page...</p>\n            </div>\n          )}\n        </Modal.Body>\n        {modalVariant !== 'success' && (\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\n              Close\n            </Button>\n          </Modal.Footer>\n        )}\n      </Modal>\n\n      <BottomNavBar />\n    </>\n  )\n}\n\nexport default AdSubmissionPage","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Table, Button, Row, Col, Container, Spinner, Alert } from 'react-bootstrap'\nimport { listPendingAds, approveAd } from '../actions/adActions'\nimport { AD_APPROVAL_RESET } from '../constants'\nimport BottomNavBar from '../components/BottomNavBar'\n\nfunction AdApprovalPage({ history }) {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector(state => state.userLogin)\n  const { userInfo } = userLogin\n\n  const pendingAdsList = useSelector(state => state.pendingAdsList)\n  const { loading, error, pendingAds } = pendingAdsList\n\n  const adApproval = useSelector(state => state.adApproval)\n  const { success: successApprove } = adApproval\n\n  useEffect(() => {\n    let isMounted = true;\n\n    if (isMounted) {\n      if (!userInfo || !userInfo.isAdmin) {\n        history.push('/login');\n      }\n\n      dispatch(listPendingAds());\n\n      if (successApprove) {\n        dispatch({ type: AD_APPROVAL_RESET });\n        dispatch(listPendingAds());\n      }\n    }\n\n    return () => {\n      isMounted = false; // Cleanup on unmount\n    };\n  }, [dispatch, history, userInfo, successApprove]);\n\n  const approveHandler = (id) => {\n    if (window.confirm('Are you sure you want to approve this ad?')) {\n      dispatch(approveAd(id))\n    }\n  }\n\n  return (\n    <Container>\n      <Row className=\"align-items-center\">\n        <Col>\n          <h2 className=\"my-4\">Pending Ads for Approval</h2>\n        </Col>\n      </Row>\n\n      {loading ? (\n        <Spinner animation=\"border\" role=\"status\">\n          <span className=\"sr-only\">Loading...</span>\n        </Spinner>\n      ) : error ? (\n        <Alert variant=\"danger\">{error}</Alert>\n      ) : (\n        <Table striped bordered hover responsive className=\"table-sm\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>AD TITLE</th>\n              <th>ADVERTISER</th>\n              <th>EMAIL</th>\n              <th>PHONE</th>\n              <th>SUBMITTED</th>\n              <th></th>\n            </tr>\n          </thead>\n          <tbody>\n            {pendingAds.map(ad => (\n              <tr key={ad.id}>\n                <td>{ad.id}</td>\n                <td>{ad.ad_title}</td>\n                <td>{ad.name}</td>\n                <td><a href={`mailto:${ad.email}`}>{ad.email}</a></td>\n                <td><a href={`tel:${ad.phone_number}`}>{ad.phone_number}</a></td>\n                <td>{new Date(ad.created_at).toLocaleDateString()}</td>\n                <td>\n                  <Button \n                    variant=\"success\" \n                    className=\"btn-sm\" \n                    onClick={() => approveHandler(ad.id)}\n                  >\n                    Approve\n                  </Button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      )}\n      <BottomNavBar />\n    </Container>\n  )\n}\n\nexport default AdApprovalPage","import React from 'react'\nimport { Container, Row, Col, Card, ListGroup, Button } from 'react-bootstrap'\nimport { FaPhone, FaWhatsapp, FaEnvelope, FaClock } from 'react-icons/fa'\nimport './css/HelpPage.css' // Create this CSS file\nimport BottomNavBar from '../components/BottomNavBar'; // Import the component\n\nfunction HelpPage() {\n  const contacts = [\n    { number: '+255613509299', type: 'phone' },\n    { number: '+255699183448', type: 'whatsapp' },\n    { number: '+255767007987', type: 'phone' }\n  ]\n\n  return (\n    <Container className=\"help-page py-5\">\n      <Row className=\"mb-5\">\n        <Col lg={8} className=\"mx-auto text-center\">\n          <h1 className=\"display-4 mb-3\">Help Center</h1>\n          <p className=\"lead text-muted\">\n            We're here to help you with any questions or issues\n          </p>\n        </Col>\n      </Row>\n\n      <Row className=\"mb-5\">\n        <Col lg={6} className=\"mb-4\">\n          <Card className=\"h-100 shadow-sm border-0\">\n            <Card.Body className=\"p-4\">\n              <div className=\"icon-wrapper bg-primary-light mb-4\">\n                <FaPhone className=\"text-primary\" size={24} />\n              </div>\n              <h3 className=\"mb-4\">Contact Support</h3>\n              <ListGroup variant=\"flush\">\n                {contacts.map((contact, index) => (\n                  <ListGroup.Item key={index} className=\"border-0 px-0\">\n                    <div className=\"d-flex align-items-center\">\n                      {contact.type === 'whatsapp' ? (\n                        <FaWhatsapp className=\"text-success mr-3\" size={20} />\n                      ) : (\n                        <FaPhone className=\"text-primary mr-3\" size={20} />\n                      )}\n                      <div>\n                        <h5 className=\"mb-0\">{contact.number}</h5>\n                        <small className=\"text-muted\">\n                          {contact.type === 'whatsapp' ? 'WhatsApp Available' : 'Call Us'}\n                        </small>\n                      </div>\n                      <Button \n                        variant=\"link\" \n                        href={`tel:${contact.number}`}\n                        className=\"ml-auto\"\n                      >\n                        Call Now\n                      </Button>\n                    </div>\n                  </ListGroup.Item>\n                ))}\n              </ListGroup>\n            </Card.Body>\n          </Card>\n        </Col>\n\n        <Col lg={6} className=\"mb-4\">\n          <Card className=\"h-100 shadow-sm border-0\">\n            <Card.Body className=\"p-4\">\n              <div className=\"icon-wrapper bg-primary-light mb-4\">\n                <FaEnvelope className=\"text-primary\" size={24} />\n              </div>\n              <h3 className=\"mb-4\">Technical Support</h3>\n              <div className=\"mb-4\">\n                <h5 className=\"d-flex align-items-center\">\n                  <FaPhone className=\"text-primary mr-3\" size={20} />\n                  <span>+255620148031</span>\n                </h5>\n                <p className=\"text-muted\">\n                  Available for technical issues and platform support\n                </p>\n              </div>\n              <div>\n                <h5 className=\"d-flex align-items-center mb-3\">\n                  <FaEnvelope className=\"text-primary mr-3\" size={20} />\n                  <span>support@brkluxe.com</span>\n                </h5>\n                <Button \n                  variant=\"primary\" \n                  href=\"mailto:support@brkluxe.com\"\n                  className=\"w-100\"\n                >\n                  Email Support\n                </Button>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col lg={8} className=\"mx-auto\">\n          <Card className=\"border-0 shadow-sm\">\n            <Card.Body className=\"p-4\">\n              <div className=\"d-flex align-items-center\">\n                <div className=\"icon-wrapper bg-primary-light mr-4\">\n                  <FaClock className=\"text-primary\" size={24} />\n                </div>\n                <div>\n                  <h3 className=\"mb-2\">Operating Hours</h3>\n                  <p className=\"mb-1\"><strong>Monday - Friday:</strong> 8:00 AM - 8:00 PM</p>\n                  <p className=\"mb-1\"><strong>Saturday:</strong> 9:00 AM - 6:00 PM</p>\n                  <p className=\"mb-0\"><strong>Sunday:</strong> 10:00 AM - 4:00 PM</p>\n                </div>\n              </div>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n      <BottomNavBar /> {/* Add the BottomNavBar */}\n    </Container>\n  )\n}\n\nexport default HelpPage","import React from 'react'\nimport { Container, Row, Col, Card } from 'react-bootstrap'\nimport { FaShoppingBag, FaThumbsUp, FaHeadset } from 'react-icons/fa'\nimport teamPhoto from '../assets/logo.jpeg' // Add your team photo\nimport './css/AboutPage.css' // Create this CSS file\nimport BottomNavBar from '../components/BottomNavBar'; // Import the component\n\nfunction AboutPage() {\n  return (\n    <Container className=\"about-page py-5\">\n      <Row className=\"mb-5\">\n        <Col lg={8} className=\"mx-auto text-center\">\n          <h1 className=\"display-4 mb-4\">About BRK_LUXE</h1>\n          <p className=\"lead text-muted\">\n            Redefining your shopping experience with quality and convenience\n          </p>\n        </Col>\n      </Row>\n\n      <Row className=\"mb-5 align-items-center\">\n        <Col lg={6} className=\"mb-4 mb-lg-0\">\n          <div className=\"about-image rounded-lg overflow-hidden shadow\">\n            <img \n              src={teamPhoto} \n              alt=\"BRK_LUXE Team\" \n              className=\"img-fluid\"\n            />\n          </div>\n        </Col>\n        <Col lg={6}>\n          <h2 className=\"mb-4\">Our Story</h2>\n          <p className=\"mb-4\">\n            Founded in 2025, BRK_LUXE Free Market began with a simple mission: to make shopping \n            easy, convenient, and enjoyable for everyone in Tanzania. We believe in offering \n            top-quality items at fair prices, with a focus on customer satisfaction and excellent service.\n          </p>\n          <div className=\"d-flex align-items-center mb-3\">\n            <FaShoppingBag className=\"text-primary mr-3\" size={24} />\n            <div>\n              <h5 className=\"mb-0\">Wide Selection</h5>\n              <p className=\"text-muted mb-0\">Thousands of quality products</p>\n            </div>\n          </div>\n          <div className=\"d-flex align-items-center mb-3\">\n            <FaThumbsUp className=\"text-primary mr-3\" size={24} />\n            <div>\n              <h5 className=\"mb-0\">Customer First</h5>\n              <p className=\"text-muted mb-0\">Your satisfaction is our priority</p>\n            </div>\n          </div>\n          <div className=\"d-flex align-items-center\">\n            <FaHeadset className=\"text-primary mr-3\" size={24} />\n            <div>\n              <h5 className=\"mb-0\">24/7 Support</h5>\n              <p className=\"text-muted mb-0\">We're always here to help</p>\n            </div>\n          </div>\n        </Col>\n      </Row>\n\n      <Row className=\"mb-5\">\n        <Col className=\"text-center\">\n          <Card className=\"border-0 shadow-sm py-4\">\n            <Card.Body>\n              <h3 className=\"mb-4\">Meet The Founder</h3>\n              <Row className=\"justify-content-center\">\n                <Col md={6} className=\"mb-4\">\n                  <div className=\"team-member\">\n                    <h5>Boniventure Richard Kisse</h5>\n                    <p className=\"text-muted\">Founder</p>\n                  </div>\n                </Col>\n              </Row>\n            </Card.Body>\n          </Card>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col className=\"text-center\">\n          <div className=\"social-links\">\n            <h4 className=\"mb-4\">Connect With Us</h4>\n            <a href=\"https://instagram.com/brk_luxe_free_market\" className=\"btn btn-outline-primary mx-2\">\n              <i className=\"fab fa-instagram\"></i> @brk_luxe_free_market\n            </a>\n          </div>\n        </Col>\n      </Row>\n      <BottomNavBar /> {/* Add the BottomNavBar */}\n    </Container>\n  )\n}\n\nexport default AboutPage","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Button, Container, Alert } from 'react-bootstrap';\nimport { useLocation, useHistory } from 'react-router-dom'; // Changed useNavigate to useHistory\nimport { createOrderRequest } from '../actions/orderActions';\nimport BottomNavBar from '../components/BottomNavBar'; // Import the component\n\nfunction OrderNowPage() {\n    console.log(\"Rendering OrderNowPage...\");\n\n    const [formData, setFormData] = useState({\n        name: '',\n        region: '',\n        district: '',\n        ward: '',\n        street: '',\n    });\n    const [showSuccess, setShowSuccess] = useState(false);\n\n    console.log(\"Initial formData:\", formData);\n\n    const location = useLocation();\n    const history = useHistory(); // Changed navigate to history\n    const dispatch = useDispatch();\n    const { userInfo, loading } = useSelector(state => state.userLoginReducer || {});\n    \n\n    console.log(\"User info:\", userInfo);\n\n    const params = new URLSearchParams(location.search);\n\n    const productName = params.get('name') || 'Product';\n    const productPrice = params.get('price') || '0';\n    const supplierName = params.get('supplier') || 'Unknown Supplier';\n    const whatsappLink = params.get('whatsapp') || 'No Number';\n\n    console.log(\"Product details from URL:\", { productName, productPrice, supplierName, whatsappLink });\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        console.log(\"Form submitted with formData:\", formData);\n\n        // Ensure userInfo is correctly populated\n        if (!loading && (!userInfo || !userInfo.id)) {\n            console.log(\"User not authenticated. Redirecting to login...\");\n            history.push(`/login?redirect=/order-now${location.search}`);\n            return;\n        }\n\n        // Get order details from URL\n        const quantity = params.get('qty') || 1;\n        const productId = params.get('product');\n\n        console.log(\"Order details:\", { quantity, productId });\n\n        const cleanMessage = \n            `📦 *NEW ORDER REQUEST* 📦\n\n            🛍️ *Product Details*\n            ▫️ *Product:* ${productName}\n            ▫️ *Price:* Tsh ${Number(productPrice).toLocaleString()}\n            ▫️ *Quantity:* ${quantity}\n\n            👤 *Customer Information*\n            ▫️ *Name:* ${formData.name}\n\n            📍 *Delivery Location*\n            🏙️ *Region:* ${formData.region}\n            🏘️ *District:* ${formData.district}\n            🏡 *Ward:* ${formData.ward}\n            📮 *Street:* ${formData.street}\n\n            📝 *Additional Notes*\n            Please confirm this order at your earliest convenience.\n            Thank you! 🙏\n            \n            Powered by brk_luxe free market`;\n\n        // 2. Now create the URL-encoded version for WhatsApp\n        const whatsappMessage = encodeURIComponent(cleanMessage);\n\n        console.log(\"Formatted Order Message:\", cleanMessage); // Clean version for logs\n        console.log(\"Encoded WhatsApp Message:\", whatsappMessage);\n\n        // Use the supplier's WhatsApp link\n        const whatsappURL = whatsappLink \n            ? `${whatsappLink}?text=${whatsappMessage}` \n            : `https://wa.me/255123456789?text=${whatsappMessage}`;\n        \n        console.log(\"WhatsApp URL:\", whatsappURL);\n\n        try {\n            // Open WhatsApp in a new tab\n            window.open(whatsappURL, '_blank');\n            console.log(\"WhatsApp opened successfully.\");\n        } catch (error) {\n            console.error(\"Failed to open WhatsApp:\", error);\n        }\n\n        try {\n            // Save to database after opening WhatsApp\n            dispatch(createOrderRequest({\n                ...formData,\n                user: userInfo.id,\n                product: productId,\n                quantity: quantity,\n                whatsapp_message: whatsappMessage\n            }));\n            console.log(\"Order request dispatched successfully.\");\n        } catch (error) {\n            console.error(\"Failed to dispatch order request:\", error);\n        }\n\n        setShowSuccess(true);\n        console.log(\"Show success alert set to true.\");\n    };\n\n    const handleChange = (e) => {\n        const { id, value } = e.target;\n        console.log(`Field changed: ${id}, Value: ${value}`);\n        setFormData(prev => ({ ...prev, [id]: value }));\n    };\n\n    return (\n        <Container className=\"py-4\">\n            <div className=\"mx-auto\" style={{ maxWidth: '600px' }}>\n                <h2 className=\"text-center mb-4\">Complete Your Order</h2>\n                <p><strong>Product:</strong> {productName}</p>\n                <p><strong>Price:</strong> Tsh {productPrice}</p>\n                <p><strong>Supplier:</strong> {supplierName}</p>\n                {showSuccess && (\n                    <Alert variant=\"success\" className=\"text-center\">\n                        Redirecting to WhatsApp...\n                    </Alert>\n                )}\n                \n                <Form onSubmit={handleSubmit} className=\"border p-4 rounded-3 shadow-sm bg-white\">\n                    <Form.Group className=\"mb-3\">\n                        <Form.Label>Full Name</Form.Label>\n                        <Form.Control\n                            id=\"name\"\n                            type=\"text\"\n                            value={formData.name}\n                            onChange={handleChange}\n                            required\n                            placeholder=\"John Doe\"\n                        />\n                    </Form.Group>\n\n                    <h5 className=\"mt-4 mb-3\">Delivery Details</h5>\n                    \n                    <div className=\"row g-3\">\n                        <div className=\"col-md-6\">\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Region</Form.Label>\n                                <Form.Control\n                                    id=\"region\"\n                                    type=\"text\"\n                                    value={formData.region}\n                                    onChange={handleChange}\n                                    required\n                                    placeholder=\"Dar es Salaam\"\n                                />\n                            </Form.Group>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>District</Form.Label>\n                                <Form.Control\n                                    id=\"district\"\n                                    type=\"text\"\n                                    value={formData.district}\n                                    onChange={handleChange}\n                                    required\n                                    placeholder=\"Ilala\"\n                                />\n                            </Form.Group>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Ward</Form.Label>\n                                <Form.Control\n                                    id=\"ward\"\n                                    type=\"text\"\n                                    value={formData.ward}\n                                    onChange={handleChange}\n                                    required\n                                    placeholder=\"Kariakoo\"\n                                />\n                            </Form.Group>\n                        </div>\n                        <div className=\"col-md-6\">\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label>Street/House</Form.Label>\n                                <Form.Control\n                                    id=\"street\"\n                                    type=\"text\"\n                                    value={formData.street}\n                                    onChange={handleChange}\n                                    required\n                                    placeholder=\"Maktaba St, House No.\"\n                                />\n                            </Form.Group>\n                        </div>\n                    </div>\n\n                    <Button \n                        variant=\"success\" // Changed from \"primary\" to \"success\"\n                        type=\"submit\" \n                        size=\"lg\"\n                        className=\"w-100 mt-3 py-2\"\n                    >\n                        <i className=\"fab fa-whatsapp me-2\"></i>\n                        Send Order via WhatsApp\n                    </Button>\n                </Form>\n            </div>\n            <BottomNavBar /> {/* Add the BottomNavBar */}\n        </Container>\n    );\n}\n\nexport default OrderNowPage;","import axios from 'axios';\nimport {\n    ORDER_REQUEST_REQUEST,\n    ORDER_REQUEST_SUCCESS,\n    ORDER_REQUEST_FAIL,\n} from '../constants';\n\nconst API_URL = process.env.REACT_APP_API_BASE_URL;\n\nexport const createOrderRequest = (orderData) => async (dispatch, getState) => {\n    try {\n        dispatch({ type: ORDER_REQUEST_REQUEST });\n\n        const { userLoginReducer: { userInfo } } = getState();\n\n        if (!userInfo || !userInfo.token) {\n            throw new Error('Authentication required');\n        }\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${userInfo.token}`,\n            },\n        };\n\n        // Remove user from orderData - backend will handle it\n        const { user, ...orderDataWithoutUser } = orderData;\n        \n        const completeOrderData = {\n            ...orderDataWithoutUser,\n            ordered_at: new Date().toISOString(),\n            status: 'pending',\n        };\n\n        console.log('Final order data:', completeOrderData);\n        \n        const { data } = await axios.post(\n            `${API_URL}/api/orders/request/`,\n            completeOrderData,\n            config\n        );\n\n        dispatch({\n            type: ORDER_REQUEST_SUCCESS,\n            payload: data,\n        });\n\n        return data;\n    } catch (error) {\n        console.error('Order creation failed:', {\n            message: error.message,\n            response: error.response?.data,\n        });\n\n        const errorMessage = error.response?.data?.error || \n            error.response?.data?.detail ||\n            error.message ||\n            'Failed to create order';\n\n        dispatch({\n            type: ORDER_REQUEST_FAIL,\n            payload: errorMessage,\n        });\n\n        throw error;\n    }\n};","import React, { useState } from 'react'\nimport {useHistory} from 'react-router-dom'\n\n\nfunction SearchBarForProducts() {\n\n    let history = useHistory()\n    const [searchTerm, setSearchTerm] = useState(\"\")\n\n    const onSubmit = (e) => {\n        e.preventDefault();\n        if(searchTerm) {\n            history.push(`/?searchTerm=${searchTerm}`)\n        }\n    };\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <span\n                    style={{ display: \"flex\" }}\n                    className=\"\"\n                >\n                    <input\n                        type=\"text\"\n                        value={searchTerm}\n                        placeholder=\"search products\"\n                        className=\"form-control\"\n                        onChange={(e) => setSearchTerm(e.target.value)}\n                    />\n                    <button\n                        type=\"submit\"\n                        className=\"btn btn-primary ml-2 button-focus-css\"\n                    ><i className=\"fas fa-search\"></i>\n                    </button>\n                </span>\n            </form>\n        </div>\n    )\n}\n\nexport default SearchBarForProducts\n","// src/pages/SearchPage.js\nimport React from 'react';\nimport SearchBarForProducts from '../components/SearchBarForProducts';\n\nfunction SearchPage() {\n    return (\n        <div className=\"container mt-4\">\n            <div className=\"row justify-content-center\">\n                <div className=\"col-md-8\">\n                    <h2 className=\"mb-4\">Search Products</h2>\n                    <SearchBarForProducts />\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SearchPage;","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport ProductListPage from './pages/ProductsListPage'\nimport ProductDetailsPage from './pages/ProductDetailsPage'\nimport CheckoutPage from './pages/CheckoutPage'\nimport NavBar from './components/Navbar'\nimport PaymentStatus from './components/PaymentStatus'\nimport Login from './pages/LoginPage'\nimport Register from './pages/RegisterPage'\nimport CardUpdatePage from './pages/CardUpdatePage'\nimport CardDetailsPage from './pages/CardDetailsPage'\nimport AccountPage from './pages/AccountPage'\nimport AccountUpdatePage from './pages/AccountUpdatePage'\nimport DeleteUserAccountPage from './pages/DeleteUserAccountPage'\nimport AllAddressesOfUserPage from './pages/AllAddressesOfUserPage'\nimport AddressUpdatePage from './pages/AddressUpdatePage'\nimport OrdersListPage from './pages/OrdersListPage'\nimport ProductCreatePage from './pages/ProductCreatePage'\nimport ProductUpdatePage from './pages/ProductUpdatePage'\nimport NotFound from './pages/NotFoundPage'\n\n// Import the new components\nimport FullScreenAd from './components/FullScreenAd'\nimport AdvertisePage from './pages/AdvertisePage'\nimport AdSubmissionPage from './pages/AdSubmissionPage'\nimport AdApprovalPage from './pages/AdApprovalPage'\nimport HelpPage from './pages/HelpPage'\nimport AboutPage from './pages/AboutPage'\nimport OrderNowPage from './pages/OrderNowPage'\nimport SearchPage from './pages/SearchPage';\n\n\nconst App = () => {\n\n  return (\n    <div>\n      <Router>\n        <NavBar />\n        <FullScreenAd />\n        <div className=\"container mt-4\">\n          <Switch>\n            <Route path=\"/\" component={ProductListPage} exact />\n            <Route path=\"/new-product/\" component={ProductCreatePage} exact />\n            <Route path=\"/product/:id/\" component={ProductDetailsPage} exact />\n            <Route path=\"/product-update/:id/\" component={ProductUpdatePage} exact />\n            <Route path=\"/product/:id/checkout/\" component={CheckoutPage} exact />\n            <Route path=\"/payment-status\" component={PaymentStatus} exact />\n            <Route path=\"/login\" component={Login} exact />\n            <Route path=\"/register\" component={Register} exact />\n            <Route path=\"/account\" component={AccountPage} exact />\n            <Route path=\"/account/update/\" component={AccountUpdatePage} exact />\n            <Route path=\"/account/delete/\" component={DeleteUserAccountPage} exact />\n            <Route path=\"/stripe-card-details\" component={CardDetailsPage} exact />\n            <Route path=\"/stripe-card-update\" component={CardUpdatePage} exact />\n            <Route path=\"/all-addresses/\" component={AllAddressesOfUserPage} exact />\n            <Route path=\"/all-addresses/:id/\" component={AddressUpdatePage} exact />\n            <Route path=\"/all-orders/\" component={OrdersListPage} exact />\n\n            <Route path=\"/advertise\" component={AdvertisePage} exact />\n            <Route path=\"/ad-submission\" component={AdSubmissionPage} exact />\n            <Route path=\"/ad-approval\" component={AdApprovalPage} exact />\n            <Route path=\"/help\" component={HelpPage} exact />\n            <Route path=\"/about\" component={AboutPage} exact />\n            <Route path=\"/order-now\" component={OrderNowPage} exact />\n\n            <Route path=\"/search\" component={SearchPage} exact />\n\n            <Route path=\"\" component={NotFound} exact />\n          </Switch>\n        </div>\n      </Router>\n    </div >\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux'\nimport store from './store'\nimport App from './App';\nimport \"./App.css\"\n\nReactDOM.render(\n  <Provider store = {store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}